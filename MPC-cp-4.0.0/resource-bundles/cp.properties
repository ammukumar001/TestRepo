00d618be-b441-4358-a35a-706fac0ca04f.description=Hostname of the ESL server
00fb58e7-aabb-420e-9f8e-b863bc720e7d.199ffad5-8862-4cf2-ac7b-a901832688a1.description=<pre>This is an operation that does nothing, and can be used to display information to the user by editing the display tab. It can also be used for filtering flow variables by feeding them in as inputs, and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
00fb58e7-aabb-420e-9f8e-b863bc720e7d.363958c4-ca82-4a47-b938-d1281f4209bf.description=Sleeps for "X" seconds.\n\n<pre>\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason\n</pre>
00fb58e7-aabb-420e-9f8e-b863bc720e7d.4d470653-74e4-4f53-b11c-4b3b4693a7e4.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
00fb58e7-aabb-420e-9f8e-b863bc720e7d.58820780-eb5c-445d-b425-7975f66f705f.description=<pre>This is an operation that does nothing, and can be used to display information to the user by editing the display tab. It can also be used for filtering flow variables by feeding them in as inputs, and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
00fb58e7-aabb-420e-9f8e-b863bc720e7d.7f8dcc96-08b9-40cd-97e9-0ddf8a26945c.description=generates a random password consisting og lowercase letters, uppercase letter and number\n\nInputs\:\npasswordLength - specifies length of the password to be generated\n\nOutputs\:\ngeneratedPassword - the generated password string
00fb58e7-aabb-420e-9f8e-b863bc720e7d.bb9cf1ac-9bef-466b-b7ea-20299562ef9e.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
00fb58e7-aabb-420e-9f8e-b863bc720e7d.e5b22cc7-eb69-41b8-873a-dc055822ba0a.description=Counts from one number to another number.\n\n<pre>\nInputs\:\ncount - number of loops to complete\nreset - If true, then the counter will restart counting from the beginning.\n\nReturns\:\nThe number that was just counted.\n\nResponses\:\nhas more - Not yet done counting.\nno more - Done counting. This will only be returned once, then counting restarts.\nfailure - Something went wrong.\n</pre>
00fb58e7-aabb-420e-9f8e-b863bc720e7d.e7fe7633-470a-4a1f-bdea-3526b47b4f11.description=<pre>Scan opened ports on give host  \n\nInputs\: \n host - IP address Host name to be scanned\n lowestPort - lowest port range\n highestPort - highest port range\n portType - the type of ports to be scanned (TCP or UDP). If not specified, the TCP ports are scanned.\n\nNote\:\n To scan specific port give same port as parameter for both Lowest Port and Highest Port, \n\nResponses\:\n success - the command was executed successfully\n failure - the command could not be executed\n\nResult\:\n finalResult - Information about the ports' statuses on a given machine.\n\nExtra results\:\n host - the IP of the host for which the ports are scanned\n ports - Number of ports scanned\n opened - Number of ports open\n closed - Number of ports closed\n dropped - Number of ports dropped\n</pre>\n
00fb58e7-aabb-420e-9f8e-b863bc720e7d.f8d856bc-19d0-4118-86e9-0b41fef112c1.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
017d8765-21f8-41ce-ad95-1e4d3eb8ee33.description=Oracle DB server hosting CCELLINFRA
0330b27b-e1a9-47cb-8907-9affc1b2470e.b8575a74-2b00-40a1-a3a4-c2edd92eb4f1.description=<pre>Runs a SQL query against an Oracle database, using the information available in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation.\nSubsequent calls with the same information will return the other rows.\n\nInputs\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name).\nTNSEntry - The entry name from the tnsnames.ora file which contains the connecting information.\nUsername - The username used for connecting to the database.\nPassword - The password used for connecting to the database.\nCommand - The command to execute.\nDelimiter - Delimiter to use between columns in returnResult.\nKey - Key to help keep multiple query results distinct.\n\nResponses\:\nmore items - More rows are available for retrieval.\nno more items - No more rows are available.\nfailure - There was an error executing the command.\n\nExtra Results\:\ncolumnNames - The names of all the columns returned, separated by Delimiter.\nrowsLeft - The number of rows remaining that match the query.\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should be correctly configured on the RAS machine.\n\nORACLE NOTE\:\nOnly the "SELECT" statement can be executed using this operation. For statements that modify the database, use "TNS Names SQL Command".\n</pre>
03c5219c-c258-4af3-863b-7199a34b3a3c.description=Login for OML Server (SSH)
03e2dfce-4f77-4ec6-a80e-912a6254d5c4.description=It's attributes which will be used in ESL_CreateCI
051a4cc4-ea48-43d2-8b7c-3298155a4e07.description=Address of the ESL(EIT2 100) web service for CreateCI/UpdateCI
06d015e6-dc69-4021-8994-fdc902e0f70a.2966a79c-477f-4fc6-8256-5f6cf7fd2876.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
06d015e6-dc69-4021-8994-fdc902e0f70a.38fd9ac8-0d98-4de1-89df-b489f46d0d64.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
06d015e6-dc69-4021-8994-fdc902e0f70a.6b98417d-9cdb-431d-9d77-1a47a06d1504.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
06d015e6-dc69-4021-8994-fdc902e0f70a.a350386e-dd6d-47b0-ad95-ff5cf5104c51.description=<pre>\nRuns a SQL query against an Oracle database, using the information in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation. Subsequent calls with the same information return the other rows.\n\nInputs\:\n    TNSPath -The path to the folder of the TNS file tnsnames.ora. This path must be accessible by the OO RAS service. For example, if the RAS and the Oracle server are installed on the same Windows system, the TNSPath might look like \u201CC\:\\app\\Administrator\\product\\11.1.0\\db_1\\network\\admin\u201D. If the RAS and the Oracle server are on different Windows systems, you can copy the tnsnames.ora file  to the RAS system. The TNSPath might look like \u201CC\:\\Program Files\\Hewlett-Packard\\Operations Orchestration\\RAS\\Java\\Default\\webapp\\conf\u201D or \u201CC\:\\Temp\u201D depending on where you place the .ora file. \n    TNSEntry - The entry name in the tnsnames.ora file that contains the connection information. For example, the value for the TNSEntry input is \u201CTestEntry\u201D if the content in the tnsnames.ora file looks like the following\: \n\nTestEntry \=\n  (DESCRIPTION \=\n   (ADDRESS \= (PROTOCOL \= TCP)(HOST \= 16.110.111.111)(PORT \= 1521))\n   (CONNECT_DATA \=\n     (SERVER \= DEDICATED)\n     (SERVICE_NAME \= orcl)\n   )\n )\n\n    Username - The username to connect to the Oracle database. \n    Password - The password for the Username.\n    Command - The command to execute. \n    Delimiter \u2013 The delimiter to use between the columns in the returnResult result.\n    Key \u2013 The key to use to keep multiple query results distinct.\n    timeout - Seconds to wait before timing out the SQL command execution.\nDefault values\: 0 \n\nResults\:\n    returnResult - This is the primary output. Returned the data returned for each row separated by the value you specified in the Delimiter input (for example, \u201Ckey16|lst|16\u201D).\n    columnNames - The names of the columns returned, separated by the value you specified in the Delimiter input (for example, \u201CMYKEY|NAME|ID\u201D).\n    rowsLeft - The number of rows remaining that match the query. \n\nResponses\:\n    more items - More rows are available for retrieval.\n    no more items - No more rows are available.\n    failure - There was an error executing the command.\n\nNotes\:\n1. This operation only supports Oracle. \n2. This operation can only execute the "SELECT" statement. For statements that modify the database, use the TNS Names SQL Command operation.\n\n</pre>\n\n\n
076bb5ab-6ef4-4219-9f35-8761691d976f.12aaf405-a892-49d2-8ab8-3c641d95d08e.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
076bb5ab-6ef4-4219-9f35-8761691d976f.2abeff25-b079-430b-8edb-9e4fa1844c56.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
076bb5ab-6ef4-4219-9f35-8761691d976f.37641571-210e-4f9f-a3a7-44f38816e583.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
0780ffe3-29e1-49b8-9d52-3ec361b0376e.ae78407e-19eb-4635-8686-f50894270189.description=<pre>Iterates through a list of values. If the list changes while running, the updates will be appended to the list.\n\nInputs\:\nseparator - The list separator (or delimiter).\nlist - The list to be split\n\nResponses\:\nhas more - Another value was in the list, and has been returned.\nfailure - failed to process the list.\nno more - The iterator has gone fully through the list. This response will only be returned once per iteration through the list, a subsequent call to the Iterator will restart the Iteration through the list.\n\nReturns\:\nThe current element of the list, if the response is has more</pre>
0789cde8-ffa9-4c78-b7d1-a25773089526.3612f708-de06-436b-8f1a-1b970faec629.prompt=TNSEntry\:
0789cde8-ffa9-4c78-b7d1-a25773089526.4b69915d-7d3c-4449-ac7d-237de83977bb.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
0789cde8-ffa9-4c78-b7d1-a25773089526.5edc146d-783c-4894-b759-919617905b3b.callout=This Flow is ONLY intended to be used for the deploy process - For each server, one boot disk, and one data disk.
0789cde8-ffa9-4c78-b7d1-a25773089526.71c47287-2d1f-4a4f-87e9-bc9432fd51e6.description=<pre>\nRuns a SQL query against an Oracle database, using the information in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation. Subsequent calls with the same information return the other rows.\n\nInputs\:\n    TNSPath -The path to the folder of the TNS file tnsnames.ora. This path must be accessible by the OO RAS service. For example, if the RAS and the Oracle server are installed on the same Windows system, the TNSPath might look like \u201CC\:\\app\\Administrator\\product\\11.1.0\\db_1\\network\\admin\u201D. If the RAS and the Oracle server are on different Windows systems, you can copy the tnsnames.ora file  to the RAS system. The TNSPath might look like \u201CC\:\\Program Files\\Hewlett-Packard\\Operations Orchestration\\RAS\\Java\\Default\\webapp\\conf\u201D or \u201CC\:\\Temp\u201D depending on where you place the .ora file. \n    TNSEntry - The entry name in the tnsnames.ora file that contains the connection information. For example, the value for the TNSEntry input is \u201CTestEntry\u201D if the content in the tnsnames.ora file looks like the following\: \n\nTestEntry \=\n  (DESCRIPTION \=\n   (ADDRESS \= (PROTOCOL \= TCP)(HOST \= 16.110.111.111)(PORT \= 1521))\n   (CONNECT_DATA \=\n     (SERVER \= DEDICATED)\n     (SERVICE_NAME \= orcl)\n   )\n )\n\n    Username - The username to connect to the Oracle database. \n    Password - The password for the Username.\n    Command - The command to execute. \n    Delimiter \u2013 The delimiter to use between the columns in the returnResult result.\n    Key \u2013 The key to use to keep multiple query results distinct.\n    timeout - Seconds to wait before timing out the SQL command execution.\nDefault values\: 0 \n\nResults\:\n    returnResult - This is the primary output. Returned the data returned for each row separated by the value you specified in the Delimiter input (for example, \u201Ckey16|lst|16\u201D).\n    columnNames - The names of the columns returned, separated by the value you specified in the Delimiter input (for example, \u201CMYKEY|NAME|ID\u201D).\n    rowsLeft - The number of rows remaining that match the query. \n\nResponses\:\n    more items - More rows are available for retrieval.\n    no more items - No more rows are available.\n    failure - There was an error executing the command.\n\nNotes\:\n1. This operation only supports Oracle. \n2. This operation can only execute the "SELECT" statement. For statements that modify the database, use the TNS Names SQL Command operation.\n\n</pre>\n\n\n
0789cde8-ffa9-4c78-b7d1-a25773089526.92c6b8b8-7658-4b03-850f-280e0c3392cb.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
0789cde8-ffa9-4c78-b7d1-a25773089526.e0ab7de7-2cd7-48f8-a59e-eb218f6b0d3b.callout=Only One Row is returned. So don't have to check the rowsLeft for looping to get result.
0789cde8-ffa9-4c78-b7d1-a25773089526.ef054e04-bb82-4826-8ae6-6a8953b50ac9.prompt=timeout\:
0789cde8-ffa9-4c78-b7d1-a25773089526.f4d7b8c4-e984-4211-a0b7-9a9419c28d0c.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
07dd446a-2d3d-4de8-98dd-e3d82bbd1cb5.145b5731-cf7f-4a77-9c02-59a007788470.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
07dd446a-2d3d-4de8-98dd-e3d82bbd1cb5.d4553127-28c7-4bb9-8171-3f9237f91ece.description=Generic flow to send an e-mail
07dd446a-2d3d-4de8-98dd-e3d82bbd1cb5.e97bf111-359c-4dfa-b654-2c326d6ececb.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
07dd446a-2d3d-4de8-98dd-e3d82bbd1cb5.f2738d23-79b7-46ae-bef3-dd99c4cf3639.description=Generic flow to send an e-mail
081484ab-51bf-4f72-8cb9-fc2ba145dcdf.09f2abdc-62e2-4649-aaea-d096cf02bf4e.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
09a1469f-d81e-469c-a2ad-287a4e43e8fd.0fbaa82f-bc11-4c58-9c6c-e955582eb619.description=<pre>Runs a command and allows user to specify that it runs locally (in this case no port should be specified), via ssh, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\nhost - Hostname or ip address.\nport - Port number for connecting to the host.\nusername - Username to connect as.\npassword - Password of the user. If using a private key file this will be used as the passphrase for the file.\nprotocol - The protocol used to run the command (can be one of ssh, ROSH, GlobalShell, Telnet, RSH, REXEC, local, WMI, NASConnectTelnet, or HPOM).\ntimeout - (optional, default 90 seconds) time in milliseconds to wait for the command to complete; increase its value if you are getting incomplete output results or timeout.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\nenvironment - Specifies environment variables/values that need to be defined when running command.\nstartDir - The path to the starting directory.\npty - Whether to use pty (used by ssh, GlobalShell. Valid values\: true, false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on RAS host (used by ssh, GlobalShell).\nsasHost - The host we want to run the ROSH command on.\nsasHostUsername - The username used to run the ROSH command on sasHost.\nusernamePrompt - The prompt that when seen should send the username; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'\npasswordPrompt - The prompt that when given should send the password; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'Password\:'\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default, the path will have to be  changed on Windows 2000 systems\nnasDevice - The NAS device to run the command on when using the NASConnect protocol.\nnasDeviceConsoleMode - The NAS device console mode used to run the command scripts that run the command on the given NAS device. If this input is empty, command scripts are not used, and the connection to the NAS device and the command are issued directly in the console; this is not recommended, since its error handling capabilities are limited and it might result in success even when the command fails to execute. The values for this input can be found in the NAS web interface, as a drop-down list when a new command script is created (ex. Cisco IOS enable).\nhpomNode - Node on which the command is to be executed.\nhpomProtocol - Protocol to communicate with HPOM (http or https).\ncharacterSet - The characterSet name for stream encoding and decoding between the RAS and target machine. For example, SJIS,EUC-JP, UTF-8.  By default it is UTF-8 (used by ssh, GlobalShell, Telnet, RSH, REXEC).\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nstdErr - The STDERR of the command.\nstdOut - The STDOUT of the command.\n\nNotes\:\nTelnet protocol - Since telnet is not a remote execution protocol but a shell protocol the response will always be successful if the command was executed in the remote shell.  The return code of the specified command cannot be determined in this protocol.  If you must use the telnet protocol with this operation besure to check the command results. Consider using ssh or rexec protocol instead.\n</pre>
09a1469f-d81e-469c-a2ad-287a4e43e8fd.55d574e8-f5b6-4c70-be66-46e7fbc135ff.description=<pre>Runs a command and allows user to specify that it runs locally (in this case no port should be specified), via ssh, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\nhost - Hostname or ip address.\nport - Port number for connecting to the host.\nusername - Username to connect as.\npassword - Password of the user. If using a private key file this will be used as the passphrase for the file.\nprotocol - The protocol used to run the command (can be one of ssh, ROSH, GlobalShell, Telnet, RSH, REXEC, local, WMI, NASConnectTelnet, or HPOM).\ntimeout - (optional, default 90 seconds) time in milliseconds to wait for the command to complete; increase its value if you are getting incomplete output results or timeout.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\nenvironment - Specifies environment variables/values that need to be defined when running command.\nstartDir - The path to the starting directory.\npty - Whether to use pty (used by ssh, GlobalShell. Valid values\: true, false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on RAS host (used by ssh, GlobalShell).\nsasHost - The host we want to run the ROSH command on.\nsasHostUsername - The username used to run the ROSH command on sasHost.\nusernamePrompt - The prompt that when seen should send the username; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'\npasswordPrompt - The prompt that when given should send the password; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'Password\:'\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default, the path will have to be  changed on Windows 2000 systems\nnasDevice - The NAS device to run the command on when using the NASConnect protocol.\nnasDeviceConsoleMode - The NAS device console mode used to run the command scripts that run the command on the given NAS device. If this input is empty, command scripts are not used, and the connection to the NAS device and the command are issued directly in the console; this is not recommended, since its error handling capabilities are limited and it might result in success even when the command fails to execute. The values for this input can be found in the NAS web interface, as a drop-down list when a new command script is created (ex. Cisco IOS enable).\nhpomNode - Node on which the command is to be executed.\nhpomProtocol - Protocol to communicate with HPOM (http or https).\ncharacterSet - The characterSet name for stream encoding and decoding between the RAS and target machine. For example, SJIS,EUC-JP, UTF-8.  By default it is UTF-8 (used by ssh, GlobalShell, Telnet, RSH, REXEC).\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nstdErr - The STDERR of the command.\nstdOut - The STDOUT of the command.\n\nNotes\:\nTelnet protocol - Since telnet is not a remote execution protocol but a shell protocol the response will always be successful if the command was executed in the remote shell.  The return code of the specified command cannot be determined in this protocol.  If you must use the telnet protocol with this operation besure to check the command results. Consider using ssh or rexec protocol instead.\n</pre>
09a1469f-d81e-469c-a2ad-287a4e43e8fd.85aef5ab-8404-48cd-ba49-486086aa65e6.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
09a1469f-d81e-469c-a2ad-287a4e43e8fd.ddb5404a-6f88-499f-859e-b248d57620f9.description=<pre>Runs a command and allows user to specify that it runs locally (in this case no port should be specified), via ssh, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\nhost - Hostname or ip address.\nport - Port number for connecting to the host.\nusername - Username to connect as.\npassword - Password of the user. If using a private key file this will be used as the passphrase for the file.\nprotocol - The protocol used to run the command (can be one of ssh, ROSH, GlobalShell, Telnet, RSH, REXEC, local, WMI, NASConnectTelnet, or HPOM).\ntimeout - (optional, default 90 seconds) time in milliseconds to wait for the command to complete; increase its value if you are getting incomplete output results or timeout.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\nenvironment - Specifies environment variables/values that need to be defined when running command.\nstartDir - The path to the starting directory.\npty - Whether to use pty (used by ssh, GlobalShell. Valid values\: true, false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on RAS host (used by ssh, GlobalShell).\nsasHost - The host we want to run the ROSH command on.\nsasHostUsername - The username used to run the ROSH command on sasHost.\nusernamePrompt - The prompt that when seen should send the username; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'\npasswordPrompt - The prompt that when given should send the password; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'Password\:'\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default, the path will have to be  changed on Windows 2000 systems\nnasDevice - The NAS device to run the command on when using the NASConnect protocol.\nnasDeviceConsoleMode - The NAS device console mode used to run the command scripts that run the command on the given NAS device. If this input is empty, command scripts are not used, and the connection to the NAS device and the command are issued directly in the console; this is not recommended, since its error handling capabilities are limited and it might result in success even when the command fails to execute. The values for this input can be found in the NAS web interface, as a drop-down list when a new command script is created (ex. Cisco IOS enable).\nhpomNode - Node on which the command is to be executed.\nhpomProtocol - Protocol to communicate with HPOM (http or https).\ncharacterSet - The characterSet name for stream encoding and decoding between the RAS and target machine. For example, SJIS,EUC-JP, UTF-8.  By default it is UTF-8 (used by ssh, GlobalShell, Telnet, RSH, REXEC).\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nstdErr - The STDERR of the command.\nstdOut - The STDOUT of the command.\n\nNotes\:\nTelnet protocol - Since telnet is not a remote execution protocol but a shell protocol the response will always be successful if the command was executed in the remote shell.  The return code of the specified command cannot be determined in this protocol.  If you must use the telnet protocol with this operation besure to check the command results. Consider using ssh or rexec protocol instead.\n</pre>
09a1469f-d81e-469c-a2ad-287a4e43e8fd.ef72d65b-0650-460a-bba8-74060b451076.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
0b153eb2-91e7-406c-aa99-446bbaa431ce.14543b8c-7c83-4813-933b-cd8b9c507ed1.description=<pre>Runs a command and allows user to specify that it runs locally (in this case no port should be specified), via ssh, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\nhost - Hostname or ip address.\nport - Port number for connecting to the host.\nusername - Username to connect as.\npassword - Password of the user.\nprotocol - The protocol used to run the command (can be one of ssh, ROSH, GlobalShell, Telnet, RSH, local, WMI, NASConnectTelnet, or HPOM).\ntimeout - (optional, default 90 seconds) time in milliseconds to wait for the command to complete; increase its value if you are getting incomplete output results or timeout.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\nenvironment - Specifies environment variables/values that need to be defined when running command.\nstartDir - The path to the starting directory.\npty - Whether to use pty (used by ssh, GlobalShell. Valid values\: true, false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on RAS host.\nsasHost - The host we want to run the ROSH command on.\nsasHostUsername - The username used to run the ROSH command on sasHost.\nusernamePrompt - The prompt that when seen should send the username; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'\npasswordPrompt - The prompt that when given should send the password; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'Password\:'\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default, the path will have to be  changed on Windows 2000 systems\nnasDevice - The NAS device to run the command on when using the NASConnect protocol.\nnasDeviceConsoleMode - The NAS device console mode used to run the command scripts that run the command on the given NAS device. If this input is empty, command scripts are not used, and the connection to the NAS device and the command are issued directly in the console; this is not recommended, since its error handling capabilities are limited and it might result in success even when the command fails to execute. The values for this input can be found in the NAS web interface, as a drop-down list when a new command script is created (ex. Cisco IOS enable).\nhpomNode - Node on which the command is to be executed.\nhpomProtocol - Protocol to communicate with HPOM (http or https).\ncharacterSet - The characterSet name for stream encoding and decoding between the RAS and target machine. For example, SJIS,EUC-JP, UTF-8.  By default it is UTF-8 (used by ssh, GlobalShell, Telnet, RSH).\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nstdErr - The STDERR of the command.\nstdOut - The STDOUT of the command.\n</pre>
0b153eb2-91e7-406c-aa99-446bbaa431ce.326dbc0a-d005-49fc-bcd6-991a0b0fb521.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
0b153eb2-91e7-406c-aa99-446bbaa431ce.description=Use an apx command to deactivate a server from the Server Automation server (SAS). Internally this flow will use ssh for the protocol and  port 2222 for the connection.\n\nInputs\:\ncoreHost -  SAS core hostname or IP address\ncoreUsername -  SAS username to access the coreHost \ncorePassword -  SAS user's password to access the coreHost\nserverName -  name of the  managed server to be deactivated\n\nResponses\:\nsuccess -  operation completed successfully\nfailure - otherwise\n
0b24da62-31d0-4e1d-b2d7-204bfb7f7a92.034c70d4-2c87-44b2-adac-9d83d1a671f6.callout=PROPERTY BRIDGE\n--------------------------------\n\nBased on the CSA Kit Flows\nNote\: Changed SVC_COMPONENT_ID to CSA_CONTEXT_ID as artifactId
0b24da62-31d0-4e1d-b2d7-204bfb7f7a92.1e82e604-7d3f-4aa5-b4d4-b704f395c6d6.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
0b24da62-31d0-4e1d-b2d7-204bfb7f7a92.3045871c-afff-4560-ad35-1087d20c17ab.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
0b24da62-31d0-4e1d-b2d7-204bfb7f7a92.44e15bc6-6fff-4d94-88e1-cf22d7f71887.description=This workflow returns the component properties and values using Artifact APIs.\n\nresult\:\npropertyNameValuesList\: pipe separated list of property name and values ( where each property name and values would be ; seprated and multiple values would be , seprated)\ne.g. - property 1; value1,value2|property 2; value3|property 3; value3,value4|........
0b24da62-31d0-4e1d-b2d7-204bfb7f7a92.55882669-dc9b-4628-81bc-bcddc56bf653.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
0b24da62-31d0-4e1d-b2d7-204bfb7f7a92.81e95b04-9f1c-49e7-8429-b222d8d6046c.callout=Virtual, get VM template from InfraDB.
0b24da62-31d0-4e1d-b2d7-204bfb7f7a92.89fc9ec5-59bf-41f0-935f-749e86cf1e94.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
0b24da62-31d0-4e1d-b2d7-204bfb7f7a92.8b0bbb9d-ad6a-4e38-abef-7325b4b3ff58.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
0b24da62-31d0-4e1d-b2d7-204bfb7f7a92.92fe95ce-d8b5-4c8b-9984-33e97795ddc3.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
0b24da62-31d0-4e1d-b2d7-204bfb7f7a92.949cc68c-a56a-4b3c-983c-e90b5382a0a8.description=<pre>\nThis workflow returns the component properties and values using Artifact APIs.\n\nResult\:\npropertyNameValuesList\: pipe separated list of property name and values ( where each property name and values would be ; seprated and multiple values would be , seprated)\ne.g. - property 1; value1,value2|property 2; value3|property 3; value3,value4|........\n</pre>
0b24da62-31d0-4e1d-b2d7-204bfb7f7a92.9738354e-0b6e-486f-b614-82d78787242a.callout=Added SVC_COMP query to grab the databaseType, so we can filter is in 'Set oracle flowvar from databaseType' and then update the MOE_CreateIOTemplate (to pass in edscomp\=oracle)
0b24da62-31d0-4e1d-b2d7-204bfb7f7a92.9a64224d-264e-4e6c-a29c-087f58a4beb8.description=<pre>Resolves any flow variables in a String. This is useful if you have an input to a flow that references undefined flow variables, and define them later. Pass in the flow variable key name of the string that contains unresolved flow variables.\n\nInputs\:\nkeyName - The name of the flow variable that should have its value reresolved.\neraseUnresolved - A boolean value. If true, any unresolved flow variable references will be replaced by nothing (IE ${variable} disappears).\n\nResponses\:\nsuccess - One or more flow variables were replaced, or could not be resolved and were erased from the string.\nfailure - No flow variables were referenced in the string.\n\nReturns\:\nThe resulting string having had flow variable references replaced with the resolved values.</pre>
0b24da62-31d0-4e1d-b2d7-204bfb7f7a92.a1024ebc-4473-440d-8a18-f8f98a6d667f.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
0b24da62-31d0-4e1d-b2d7-204bfb7f7a92.c7060bce-d260-4666-929e-2572c771931a.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
0b24da62-31d0-4e1d-b2d7-204bfb7f7a92.c8d0ec8e-a391-4f1e-b955-795f6b1a9749.description=<pre>This operation checks whether a string matches another string, using a specific matching rule. The "toMatch" input is the string that is checked for matching the "matchTo" expression. \n\nInputs\:\n    matchType - The type of match to perform.\nValid values\: Exact Match, Contains, Contains Once, Does Not Contain, Match All Words, Match No Words, Regex\nDefault value\: Exact Match\n    toMatch - The string that is checked for matching.\n    matchTo - The string to match against.\nExample\: If "matchType" is \u201CRegEx\u201D, the "matchTo" input is a regular expression such as\: ^-?\\d+(([\\.,]\\d+)?)+$. \n    ignoreCase - Specifies whether to ignore case when matching or not.\nValid values\: False, True\nDefault value\: False\n\nResults\:\n    returnResult - This is the primary output. It contains the string "Matches" if the "toMatch" string matches the "matchTo" string. Otherwise, it contains the string "Does Not Match".  \n\nResponses\:\n    success - The operation completed as stated in the description.\n    failure - The operation completed unsuccessfully.\n</pre>
0b24da62-31d0-4e1d-b2d7-204bfb7f7a92.d6769dc7-f28b-4deb-8dc1-ac2591d92b7c.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
0b24da62-31d0-4e1d-b2d7-204bfb7f7a92.d6e7cb30-fed5-4957-9e62-f89588e33348.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
0b24da62-31d0-4e1d-b2d7-204bfb7f7a92.d9fa67ec-febf-4b62-83cb-c89aba8df0cb.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
0b24da62-31d0-4e1d-b2d7-204bfb7f7a92.e1918cfd-ea4d-46e6-9fbb-b63beb3c82bd.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
0b24da62-31d0-4e1d-b2d7-204bfb7f7a92.e6e0e5cf-284c-4ea7-8647-15f314cdcfd6.prompt=User Identifier
0b24da62-31d0-4e1d-b2d7-204bfb7f7a92.ef3719cf-4957-4b98-aa3d-319e27d4a5ac.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
0b24da62-31d0-4e1d-b2d7-204bfb7f7a92.f66559b5-7a20-4acc-8a4d-014a1c74db80.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
0c5d9f90-eb40-47f1-91ac-7230b49a8c04.description=It's attributes which will be used in ESL_CreateCI
0d85aeae-c189-4412-b53e-277aa4f451da.0f746eb8-51bc-4668-b5dc-4c16ad56111e.description=Runs Service Center Virtual Machine Manager (SCVMM) Cmdlets using Windows PowerShell. The complete syntax and descriptions of all cmdlets that can be used with this operation can be found at http\://www.microsoft.com/download/en/details.aspx?displaylang\=en&id\=20419. The operation creates a remote powershell session to the target host, loads the "Microsoft.SystemCenter.VirtualMachineManager" snap-in and executes the given command(s). \n\nInputs\:\n    host - The hostname or ip address of the SCVMM server.\n    username - The username to use when connecting to the server.\nValue format\: username@domain or domain\\username.\n    password - The password to use when connecting to the server.\n    authType - Specifies the mechanism that is used to authenticate the user's credentials. \nValid values\: Default, Negotiate, Credssp, Kerberos. (case-insensitive)\nDefault value\: Default.\n    commands - The PowerShell cmdlets to execute. For more that one command, you should write each one on a separate row and they will be executed sequentially. \nExample\: get-vmmserver -computerName "1.2.3.4"\n                get-virtualharddisk -all\n    delimiter - The delimiter used to separate each property name from the property value in the output table. \nDefault value\: "\:".\n    colDelimiter - The delimiter used to separate columns in the output table.\nDefault value\: ','\n    rowDelimiter - The delimiter used to separate rows in the output table. \nDefault value\: newline\n    version - The SCVMM Server version.\nDefault value\: 2008 R2\n\nResults\:\n    outputString - A string representation of the results returned by the operation. Essentially any command returns a PowerShell object which has properties, as you can observe from the returnResult. OutputString result converts each object to string and merges all the values into one string. If you want outputString to contain results similar to PowerShell console you should pipe Out-String at the end of the cmdlet  (e.g. Get-VirtualHardDisk -al l Format-List Location, Directory, Name, ID, HostName | Out-String). Doing this will determine returnResult to be something like Length\:xx, because the object is now of type String and Lenth is the only property of this type. This result can be useful in other situations where the PowerShell objects override ToString() method. Therefore, the outputString obtained running PowerShell command Get-Process (without Out-String pipe), will contain the names of the processes running on server.\n    returnResult - A table containing a row for each PSObject that the cmdlets emit. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format.\n    warnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\n\nResponses\:\nsuccess \t- The cmdlets were executed successfully.\nfailure \t- The cmdlets could not be executed.\n\nNotes\:\n1. Installation of Powershell 2.0 with winrm 2.0 on your client is required. The kit can be downloaded from here\: http\://support.microsoft.com/kb/968930.\n2. Before using this operation, please make sure you have enabled PowerShell remoting, by using the Enable-PSRemoting cmdlet.\n3. Windows Remote Management service must be running.\n4. In workgroup environments, enabling classic mode authentication for network logons may be needed. This can be performed by opening the "Local Security Policy" from Control Panel and selecting "Administrative Tools". Navigate to "Local Policies" -> "Security Options", double click on "Network Access\: Sharing and Security Model for local accounts" and set it to classic.\n5. Also, please modify the WSMan trusted hosts setting, by adding the IP addresses of all remoting clients to the list of trusted hosts. This can be done using one of the following commands\:\n        5.1. Set-item wsman\:localhost\\client\\trustedhosts -value * (adds all computers as trusted hosts)\n        5.2. Set-item wsman\:localhost\\client\\trustedhosts -value Computer (only adds Computer to the trusted hosts)\n        5.3. Set-item wsman\:localhost\\client\\trustedhosts -value *.domain.com (adds all computers in the specified domain)\n        5.4. Set-item wsman\:localhost\\client\\trustedhosts -value 10.10.10.1 (adds the remote computer with the IP address 10.10.10.1 to the trusted hosts list)\n6. Please read the folder's description for information on how to enable CredSSP authentication.\n</pre>
0d85aeae-c189-4412-b53e-277aa4f451da.7e30b27a-3e65-4978-800f-e2c614c2814c.description=<pre>Adds a flow variable into the local context (available to itself and child flows only)\n\nInput Parameters\:\nkeyName - the name of the flow variable to use\nmyValue - the value to assign the flow variable\n\nResponses\:\nsuccess - assigned the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, $myValue];</pre>
0d85aeae-c189-4412-b53e-277aa4f451da.7e9d1090-4941-4bb6-8e91-633d32ae0915.prompt=Input command(s)\:
0dd5ba68-8553-48a1-8d34-e4a85fc580ed.description=The name or IP address of an SMTP server to sent mail
0eb12c2f-a57f-4d70-b35a-6e789f3b5b60.description=Hostname or IP address of the DNS server for configuring DNS entries
0f23d466-abe5-45dc-a9ac-e58f946217db.eeb40ee7-c844-4f63-ad14-1253933463e7.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
0f620a29-e69b-4d01-8bf8-6f11d23a2306.description=Oracle DB service hosting CCELLINFRA
0ff5eec5-a5c6-4a1d-8234-b01186b07b78.878e2b61-2662-48bc-b46d-475d5ac02627.description=<pre>Sets the power state of virtual machine (poweredOn,poweredOff,paused). Does nothing if the virtual machine is already in the power state.\n\nInputs\:\nhost - VMWare host hostname or IP\nuser - VMWare username\npassword - VMWare user's password\nport - Port to connect on\nprotocol - Connection protocol (http or https)\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation?\nasync - Asynchronously perform the task\ntaskTimeOut - Time to wait before the operation is considered to have failed (seconds)\nvirtualMachine - Primary Virtual Machine identifier. IP (IPv4 or IPv6 depending upon ESX version), hostname (full), inventorypath (Datacenter/vm/MyResourcePool/MyVM), UUID, or the VM id (vm-123,123)\nvmIdentifierType - Virtual machine identifier type\nvmPowerState - Virtual machine power state to set (poweredOn, poweredOff, suspended).\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\nno action - The operation completed with no action performed.\n\nReturns\:\nreturnResult - Task ID or task completion return message.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter or vSphere server the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter or vSphere client. The inventory path is case sensitive.\n</pre>
0ff5eec5-a5c6-4a1d-8234-b01186b07b78.a3d0d69b-2011-494c-9085-43c4d7493528.prompt=Virtual Machine\:
0ff5eec5-a5c6-4a1d-8234-b01186b07b78.b12eca6e-ff30-46c6-8566-4dedfb98107d.description=<pre>Sleeps for "X" seconds.\n\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason</pre>
0ff5eec5-a5c6-4a1d-8234-b01186b07b78.ba61d71d-e132-40ae-a8f9-19ed0b660a53.description=<pre>Retrieves running status of VM Tools running on the operating system of a guest Virtual Machine.\n\nInputs\:\n    host - VMware vCenter, ESX or ESXi host hostname or IP.\n    user - VMware username.\n    password - VMware user's password.\n    port - Port to connect on.\nExamples\: 443, 80\n    protocol - Connection protocol.\nValid values\: "https", "http"\n    closeSession - Close the internally kept VMware Infrastructure API session at completion of operation.\n    vmIdentifierType - Virtual machine identifier type \nValid values\: "inventorypath", "name", "ip", "hostname", "uuid", "vmid"\n    virtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\n    vmDatacenter - Virtual machine's datacenter.\n\nResponses\:\n    guestToolsRunning - VM tools are running.  Information about the guest can be retrieves with "Get Guest Info"\n    guestToolsNotRunning - VM tools are not running.\n    guestToolsStarting - VM Tools are starting.  VM Tools are not ready to provide data about the guest operating system yet.\n    failure - Failed to determine running status of VM tools for the virtual machine.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
0ff5eec5-a5c6-4a1d-8234-b01186b07b78.fbde83b0-142a-40a9-a034-1251506aaeef.description=<pre>Counts from one number to another number.\n\nInputs\:\nfrom - The number to start counting at\nto - The number to count to\nincrementBy - The amount to increment by during each count.\nreset - If set to true, then the counter will restart counting from the beginning.\n\nResponses\:\nhas more - Not yet done counting.\nfailure - Something went wrong.\nno more - Done counting. This will only be returned once, then counting restarts.\n\nReturns\:\nThe number that was just counted.</pre>
0ff5eec5-a5c6-4a1d-8234-b01186b07b78.fd08f959-feb4-4a93-b0a9-782440de1619.prompt=Datacenter\:
100f1cd3-50c3-4f52-9415-4820391e34a6.38a2e878-bb2f-4f6e-9d01-20fe42f1d2f5.description=<pre>Adds a flow variable into the local context (available to itself and child flows only)\n\nInput Parameters\:\nkeyName - the name of the flow variable to use\nmyValue - the value to assign the flow variable\n\nResponses\:\nsuccess - assigned the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, $myValue];</pre>
100f1cd3-50c3-4f52-9415-4820391e34a6.508aafa5-d5e7-465c-9309-686ff5624a95.description=Runs Service Center Virtual Machine Manager (SCVMM) Cmdlets using Windows PowerShell. The complete syntax and descriptions of all cmdlets that can be used with this operation can be found at http\://www.microsoft.com/download/en/details.aspx?displaylang\=en&id\=20419. The operation creates a remote powershell session to the target host, loads the "Microsoft.SystemCenter.VirtualMachineManager" snap-in and executes the given command(s). \n\nInputs\:\n    host - The hostname or ip address of the SCVMM server.\n    username - The username to use when connecting to the server.\nValue format\: username@domain or domain\\username.\n    password - The password to use when connecting to the server.\n    authType - Specifies the mechanism that is used to authenticate the user's credentials. \nValid values\: Default, Negotiate, Credssp, Kerberos. (case-insensitive)\nDefault value\: Default.\n    commands - The PowerShell cmdlets to execute. For more that one command, you should write each one on a separate row and they will be executed sequentially. \nExample\: get-vmmserver -computerName "1.2.3.4"\n                get-virtualharddisk -all\n    delimiter - The delimiter used to separate each property name from the property value in the output table. \nDefault value\: "\:".\n    colDelimiter - The delimiter used to separate columns in the output table.\nDefault value\: ','\n    rowDelimiter - The delimiter used to separate rows in the output table. \nDefault value\: newline\n    version - The SCVMM Server version.\nDefault value\: 2008 R2\n\nResults\:\n    outputString - A string representation of the results returned by the operation. Essentially any command returns a PowerShell object which has properties, as you can observe from the returnResult. OutputString result converts each object to string and merges all the values into one string. If you want outputString to contain results similar to PowerShell console you should pipe Out-String at the end of the cmdlet  (e.g. Get-VirtualHardDisk -al l Format-List Location, Directory, Name, ID, HostName | Out-String). Doing this will determine returnResult to be something like Length\:xx, because the object is now of type String and Lenth is the only property of this type. This result can be useful in other situations where the PowerShell objects override ToString() method. Therefore, the outputString obtained running PowerShell command Get-Process (without Out-String pipe), will contain the names of the processes running on server.\n    returnResult - A table containing a row for each PSObject that the cmdlets emit. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format.\n    warnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\n\nResponses\:\nsuccess \t- The cmdlets were executed successfully.\nfailure \t- The cmdlets could not be executed.\n\nNotes\:\n1. Installation of Powershell 2.0 with winrm 2.0 on your client is required. The kit can be downloaded from here\: http\://support.microsoft.com/kb/968930.\n2. Before using this operation, please make sure you have enabled PowerShell remoting, by using the Enable-PSRemoting cmdlet.\n3. Windows Remote Management service must be running.\n4. In workgroup environments, enabling classic mode authentication for network logons may be needed. This can be performed by opening the "Local Security Policy" from Control Panel and selecting "Administrative Tools". Navigate to "Local Policies" -> "Security Options", double click on "Network Access\: Sharing and Security Model for local accounts" and set it to classic.\n5. Also, please modify the WSMan trusted hosts setting, by adding the IP addresses of all remoting clients to the list of trusted hosts. This can be done using one of the following commands\:\n        5.1. Set-item wsman\:localhost\\client\\trustedhosts -value * (adds all computers as trusted hosts)\n        5.2. Set-item wsman\:localhost\\client\\trustedhosts -value Computer (only adds Computer to the trusted hosts)\n        5.3. Set-item wsman\:localhost\\client\\trustedhosts -value *.domain.com (adds all computers in the specified domain)\n        5.4. Set-item wsman\:localhost\\client\\trustedhosts -value 10.10.10.1 (adds the remote computer with the IP address 10.10.10.1 to the trusted hosts list)\n6. Please read the folder's description for information on how to enable CredSSP authentication.\n</pre>
100f1cd3-50c3-4f52-9415-4820391e34a6.71479987-8c9d-4798-b250-bd192de27bf5.prompt=Input command(s)\:
101816be-3541-417a-be18-6102a47a7be2.description=The prefix assigned to all system properties that will be created by CSA for Matrix to store the names of target servers. This value must not be changed.
104e1b05-216a-4911-90eb-238f54b3c5b0.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
105f2755-d8a3-42c2-b74d-4f3d147bfb24.1e52f349-4d8b-4fa9-9c32-3242d2b2448f.description=<pre>This subflow was created by the Web Services Wizard to invoke the efficientip_macro_get_ip_address_php operation on file\:/C\:/CSA_INSTALLATION/wsdl_eip_full.wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nauth_login - The input named efficientip_macro_get_ip_address_php|input|auth_login of the complex type\: efficientip_macro_get_ip_address_php|input\nauth_password - The input named efficientip_macro_get_ip_address_php|input|auth_password of the complex type\: efficientip_macro_get_ip_address_php|input\nip_address - The input named efficientip_macro_get_ip_address_php|input|ip_address of the complex type\: efficientip_macro_get_ip_address_php|input\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\noutput - The output given by the XPath\: /Envelope/Body/efficientip_macro_get_ip_address_phpResponse/output</pre>
105f2755-d8a3-42c2-b74d-4f3d147bfb24.d73da024-02a0-4191-95d6-467429124086.description=<pre>Checks if a number or word is equal to another number or word. Word comparison is case-sensitive in alphabetical order.\n\nInputs\:\nvalue1 - The first value.\nvalue2 - The second value.\n\nReturns\:\nvalue1 \=\= value2\n\nResponses\:\nsuccess - The boolean operation was evaluated to true.\nfailure - Something went wrong or the boolean operation returned false.\n</pre>
11187211-d71b-496e-86a3-ef9fdb2ed504.description=Standart Linux Account (On Templates)
1216371b-9960-4b46-a2ef-a7b9e7a1734d.description=This flag is used to configure notification condition. If the flag is set to "true", notification will be sent only on failure condition. If set to "false", notification will be sent in all cases.
12b810c2-5f64-423b-aeda-159240768a8c.3712980e-1ea4-484f-be6f-65b2a592b211.callout=We don't have more then one item
12b810c2-5f64-423b-aeda-159240768a8c.ea3ed572-9f78-4fab-8a65-7b90a57fc832.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
142f5e5e-091f-4ed5-a696-6abf27e02275.0cfb4cca-8c34-408c-94a1-fbee5c9e2781.description=<pre>Runs a command and allows user to specify that it runs locally (in this case no port should be specified), via ssh, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\nhost - Hostname or ip address.\nport - Port number for connecting to the host.\nusername - Username to connect as.\npassword - Password of the user. If using a private key file this will be used as the passphrase for the file.\nprotocol - The protocol used to run the command (can be one of ssh, ROSH, GlobalShell, Telnet, RSH, REXEC, local, WMI, NASConnectTelnet, or HPOM).\ntimeout - (optional, default 90 seconds) time in milliseconds to wait for the command to complete; increase its value if you are getting incomplete output results or timeout.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\nenvironment - Specifies environment variables/values that need to be defined when running command.\nstartDir - The path to the starting directory.\npty - Whether to use pty (used by ssh, GlobalShell. Valid values\: true, false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on RAS host (used by ssh, GlobalShell).\nsasHost - The host we want to run the ROSH command on.\nsasHostUsername - The username used to run the ROSH command on sasHost.\nusernamePrompt - The prompt that when seen should send the username; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'\npasswordPrompt - The prompt that when given should send the password; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'Password\:'\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default, the path will have to be  changed on Windows 2000 systems\nnasDevice - The NAS device to run the command on when using the NASConnect protocol.\nnasDeviceConsoleMode - The NAS device console mode used to run the command scripts that run the command on the given NAS device. If this input is empty, command scripts are not used, and the connection to the NAS device and the command are issued directly in the console; this is not recommended, since its error handling capabilities are limited and it might result in success even when the command fails to execute. The values for this input can be found in the NAS web interface, as a drop-down list when a new command script is created (ex. Cisco IOS enable).\nhpomNode - Node on which the command is to be executed.\nhpomProtocol - Protocol to communicate with HPOM (http or https).\ncharacterSet - The characterSet name for stream encoding and decoding between the RAS and target machine. For example, SJIS,EUC-JP, UTF-8.  By default it is UTF-8 (used by ssh, GlobalShell, Telnet, RSH, REXEC).\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nstdErr - The STDERR of the command.\nstdOut - The STDOUT of the command.\n\nNotes\:\nTelnet protocol - Since telnet is not a remote execution protocol but a shell protocol the response will always be successful if the command was executed in the remote shell.  The return code of the specified command cannot be determined in this protocol.  If you must use the telnet protocol with this operation besure to check the command results. Consider using ssh or rexec protocol instead.\n</pre>
142f5e5e-091f-4ed5-a696-6abf27e02275.2210f75b-af4b-4abd-8c2f-65926f64135b.description=<pre>Clears the value of a flow variable\n\nInput Parameters\:\nkeyName - the name of the flow variable to clear\n\nResponses\:\nsuccess - cleared the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, null];</pre>
142f5e5e-091f-4ed5-a696-6abf27e02275.3b3a5350-b5b0-4ba5-bdc0-76ada71dda9d.description=<pre>Clears the value of a flow variable\n\nInput Parameters\:\nkeyName - the name of the flow variable to clear\n\nResponses\:\nsuccess - cleared the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, null];</pre>
142f5e5e-091f-4ed5-a696-6abf27e02275.4ea2a1b2-5133-4393-a760-49af0512ff79.description=<pre>Schedules a flow or updates an existing schedule of a flow. The operation can be used on OO version 9.03 and greater.  \n\nInputs\:\n    host - The host running Central 9.03 or greater.\nDefault value\: localhost.\n    username - The username to use when connecting to the Central service.\n    password - The password to use when connecting to the Central service.\n    port - The port the Central service is running on.\nDefault value\: 8443.\n    protocol - Either http or https. The protocol used to communicate to the Central service.\nDefault value\: https.\n    trustAllRoots - If true, enables weak security over SSL. A SSL certificate is trusted even if no trusted CA issued it.\nDefault value\: false.\n    trustKeystore - The path of the truststore file. It may be empty if HTTPS server authentication is not to be used. If not specified  the operation will search for{iconclude_home}/Central/conf/rc_keystore or {iconclude_home}/Studio/conf/rc_keystore in this order.\n    trustPassword - Password to unlock the truststore. Provide this input only if trustKeystore is not empty.\n    flow - The uuid or the path of the flow to run.\nExample\: /library/my ops flows/test\n    schedule - The uuid of the schedule to update.\n    names - A delimiter separated list of names of flow inputs.\n    values - A delimiter separated list of values of flow inputs.\n    delimiter - the delimiter separating lists of names and values.\n    description - a description of this schedule.\n    enabled - Set false to create the schedule disabled. This input is case insensitive.\nValid values\: true, false.\nDefault value\: true.\n    startTime - The time to start running the flow either as minutes from now or as a date. Use the utility operations from "Date and Time" folder to pass valid startTime value.\nExample\: Wed, 12 Dec 2012 12\:12\:12 GMT\nExample\: Wed, 12 Dec 2012 12\:12\:12 GMT+0430 (4 hours, 30 minutes west of the Greenwich meridian)\n    endTime - The time to end running the flow either as minutes from now or as a date. Use the utility operations from "Date and Time" folder to pass valid endTime value.\nExample\: Wed, 12 Dec 2012 12\:12\:12 GMT\nExample\: Wed, 12 Dec 2012 12\:12\:12 GMT+0430 (4 hours, 30 minutes west of the Greenwich meridian)\n    timesToRun - The number of times to re-run the flow schedule. If empty, the number of times to re-run the schedule will be computed as (endTime - startTime)/repeatInterval. If -1 the flow will be scheduled to run indefinitely, otherwise this input must have a positive value.\n    repeatInterval - Sets the time Interval in minutes between schedule triggering. If empty, the operation will set it to 1 minute.\n\nReturns\:\n    returnResult - Primary output. The uuid of the schedule.\n    flowUuid - The uuid of the flow. This can be useful if the flow input is the path of the flow.\n\nResponses\:\n    success -The schedule was created or updated.\n    failure - Could not connect to central web service. Invalid inputs. Invalid flow path. The schedule ends before it starts. The schedule ends in the past.\n\nNotes\:\n1. <flow> and <schedule> inputs are mutually exclusive.\n2. <timesToRun> and <endTime> inputs are mutually exclusive.\n</pre>
142f5e5e-091f-4ed5-a696-6abf27e02275.80ad1c6f-8988-4906-b6d6-eac0aee1d0e2.description=<pre>Runs a command and allows user to specify that it runs locally (in this case no port should be specified), via ssh, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\nhost - Hostname or ip address.\nport - Port number for connecting to the host.\nusername - Username to connect as.\npassword - Password of the user. If using a private key file this will be used as the passphrase for the file.\nprotocol - The protocol used to run the command (can be one of ssh, ROSH, GlobalShell, Telnet, RSH, REXEC, local, WMI, NASConnectTelnet, or HPOM).\ntimeout - (optional, default 90 seconds) time in milliseconds to wait for the command to complete; increase its value if you are getting incomplete output results or timeout.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\nenvironment - Specifies environment variables/values that need to be defined when running command.\nstartDir - The path to the starting directory.\npty - Whether to use pty (used by ssh, GlobalShell. Valid values\: true, false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on RAS host (used by ssh, GlobalShell).\nsasHost - The host we want to run the ROSH command on.\nsasHostUsername - The username used to run the ROSH command on sasHost.\nusernamePrompt - The prompt that when seen should send the username; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'\npasswordPrompt - The prompt that when given should send the password; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'Password\:'\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default, the path will have to be  changed on Windows 2000 systems\nnasDevice - The NAS device to run the command on when using the NASConnect protocol.\nnasDeviceConsoleMode - The NAS device console mode used to run the command scripts that run the command on the given NAS device. If this input is empty, command scripts are not used, and the connection to the NAS device and the command are issued directly in the console; this is not recommended, since its error handling capabilities are limited and it might result in success even when the command fails to execute. The values for this input can be found in the NAS web interface, as a drop-down list when a new command script is created (ex. Cisco IOS enable).\nhpomNode - Node on which the command is to be executed.\nhpomProtocol - Protocol to communicate with HPOM (http or https).\ncharacterSet - The characterSet name for stream encoding and decoding between the RAS and target machine. For example, SJIS,EUC-JP, UTF-8.  By default it is UTF-8 (used by ssh, GlobalShell, Telnet, RSH, REXEC).\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nstdErr - The STDERR of the command.\nstdOut - The STDOUT of the command.\n\nNotes\:\nTelnet protocol - Since telnet is not a remote execution protocol but a shell protocol the response will always be successful if the command was executed in the remote shell.  The return code of the specified command cannot be determined in this protocol.  If you must use the telnet protocol with this operation besure to check the command results. Consider using ssh or rexec protocol instead.\n</pre>
142f5e5e-091f-4ed5-a696-6abf27e02275.895ab114-d588-4eae-96f8-c033ebbc0457.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
142f5e5e-091f-4ed5-a696-6abf27e02275.937d280b-4408-40e8-9f20-47437bd0607a.description=<pre>\nOffsets the current date and time by a given number of units. If locale is specified, the date and time will be in the format based on the locale. Otherwise, default locale will be used. \n\nInputs\:\nunits - The number of units to offset by. If this is positive, the offset goes into the future, if it is negative the offset goes into the past.\nsecondsPerUnit - The number of seconds per unit. This defaults to 1 hour, thus the units is by default measured in hours.\nlocaleLang - The locale language for date and time string. For example,  en or ja.\nlocaleCountry - The locale country for date and time string. For example, US or JP. If localeLang is not specified, this input will be ingored.\n\nReturns\:\nThe offset date/time. \n\nResponses\:\nsuccess - Operation completed successfully.\nfailure - Something went wrong.\n</pre>
142f5e5e-091f-4ed5-a696-6abf27e02275.9eeba4b2-f089-44e0-b819-605147c06771.description=Counts from one number to another number.\n\n<pre>\nInputs\:\ncount - number of loops to complete\nreset - If true, then the counter will restart counting from the beginning.\n\nReturns\:\nThe number that was just counted.\n\nResponses\:\nhas more - Not yet done counting.\nno more - Done counting. This will only be returned once, then counting restarts.\nfailure - Something went wrong.\n</pre>
142f5e5e-091f-4ed5-a696-6abf27e02275.b058ebf4-cf24-491f-a990-a2d3a78e2792.description=<pre>This is an operation that does nothing, and can be used to display information to the user by editing the display tab. It can also be used for filtering flow variables by feeding them in as inputs, and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
142f5e5e-091f-4ed5-a696-6abf27e02275.b100fd9a-ac09-482b-b5fa-11e4554f4aee.description=<pre>Runs a command and allows user to specify that it runs locally (in this case no port should be specified), via ssh, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\nhost - Hostname or ip address.\nport - Port number for connecting to the host.\nusername - Username to connect as.\npassword - Password of the user. If using a private key file this will be used as the passphrase for the file.\nprotocol - The protocol used to run the command (can be one of ssh, ROSH, GlobalShell, Telnet, RSH, REXEC, local, WMI, NASConnectTelnet, or HPOM).\ntimeout - (optional, default 90 seconds) time in milliseconds to wait for the command to complete; increase its value if you are getting incomplete output results or timeout.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\nenvironment - Specifies environment variables/values that need to be defined when running command.\nstartDir - The path to the starting directory.\npty - Whether to use pty (used by ssh, GlobalShell. Valid values\: true, false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on RAS host (used by ssh, GlobalShell).\nsasHost - The host we want to run the ROSH command on.\nsasHostUsername - The username used to run the ROSH command on sasHost.\nusernamePrompt - The prompt that when seen should send the username; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'\npasswordPrompt - The prompt that when given should send the password; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'Password\:'\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default, the path will have to be  changed on Windows 2000 systems\nnasDevice - The NAS device to run the command on when using the NASConnect protocol.\nnasDeviceConsoleMode - The NAS device console mode used to run the command scripts that run the command on the given NAS device. If this input is empty, command scripts are not used, and the connection to the NAS device and the command are issued directly in the console; this is not recommended, since its error handling capabilities are limited and it might result in success even when the command fails to execute. The values for this input can be found in the NAS web interface, as a drop-down list when a new command script is created (ex. Cisco IOS enable).\nhpomNode - Node on which the command is to be executed.\nhpomProtocol - Protocol to communicate with HPOM (http or https).\ncharacterSet - The characterSet name for stream encoding and decoding between the RAS and target machine. For example, SJIS,EUC-JP, UTF-8.  By default it is UTF-8 (used by ssh, GlobalShell, Telnet, RSH, REXEC).\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nstdErr - The STDERR of the command.\nstdOut - The STDOUT of the command.\n\nNotes\:\nTelnet protocol - Since telnet is not a remote execution protocol but a shell protocol the response will always be successful if the command was executed in the remote shell.  The return code of the specified command cannot be determined in this protocol.  If you must use the telnet protocol with this operation besure to check the command results. Consider using ssh or rexec protocol instead.\n</pre>
142f5e5e-091f-4ed5-a696-6abf27e02275.c156c395-48c1-4168-87ec-ad6fd4cd1d37.description=<pre>Scan opened ports on give host  \n\nInputs\: \n host - IP address Host name to be scanned\n lowestPort - lowest port range\n highestPort - highest port range\n portType - the type of ports to be scanned (TCP or UDP). If not specified, the TCP ports are scanned.\n\nNote\:\n To scan specific port give same port as parameter for both Lowest Port and Highest Port, \n\nResponses\:\n success - the command was executed successfully\n failure - the command could not be executed\n\nResult\:\n finalResult - Information about the ports' statuses on a given machine.\n\nExtra results\:\n host - the IP of the host for which the ports are scanned\n ports - Number of ports scanned\n opened - Number of ports open\n closed - Number of ports closed\n dropped - Number of ports dropped\n</pre>\n
142f5e5e-091f-4ed5-a696-6abf27e02275.de68801f-e8d3-4bec-8cfd-2aa9b349cf2d.description=<pre>Runs a command and allows user to specify that it runs locally (in this case no port should be specified), via ssh, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\nhost - Hostname or ip address.\nport - Port number for connecting to the host.\nusername - Username to connect as.\npassword - Password of the user. If using a private key file this will be used as the passphrase for the file.\nprotocol - The protocol used to run the command (can be one of ssh, ROSH, GlobalShell, Telnet, RSH, REXEC, local, WMI, NASConnectTelnet, or HPOM).\ntimeout - (optional, default 90 seconds) time in milliseconds to wait for the command to complete; increase its value if you are getting incomplete output results or timeout.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\nenvironment - Specifies environment variables/values that need to be defined when running command.\nstartDir - The path to the starting directory.\npty - Whether to use pty (used by ssh, GlobalShell. Valid values\: true, false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on RAS host (used by ssh, GlobalShell).\nsasHost - The host we want to run the ROSH command on.\nsasHostUsername - The username used to run the ROSH command on sasHost.\nusernamePrompt - The prompt that when seen should send the username; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'\npasswordPrompt - The prompt that when given should send the password; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'Password\:'\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default, the path will have to be  changed on Windows 2000 systems\nnasDevice - The NAS device to run the command on when using the NASConnect protocol.\nnasDeviceConsoleMode - The NAS device console mode used to run the command scripts that run the command on the given NAS device. If this input is empty, command scripts are not used, and the connection to the NAS device and the command are issued directly in the console; this is not recommended, since its error handling capabilities are limited and it might result in success even when the command fails to execute. The values for this input can be found in the NAS web interface, as a drop-down list when a new command script is created (ex. Cisco IOS enable).\nhpomNode - Node on which the command is to be executed.\nhpomProtocol - Protocol to communicate with HPOM (http or https).\ncharacterSet - The characterSet name for stream encoding and decoding between the RAS and target machine. For example, SJIS,EUC-JP, UTF-8.  By default it is UTF-8 (used by ssh, GlobalShell, Telnet, RSH, REXEC).\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nstdErr - The STDERR of the command.\nstdOut - The STDOUT of the command.\n\nNotes\:\nTelnet protocol - Since telnet is not a remote execution protocol but a shell protocol the response will always be successful if the command was executed in the remote shell.  The return code of the specified command cannot be determined in this protocol.  If you must use the telnet protocol with this operation besure to check the command results. Consider using ssh or rexec protocol instead.\n</pre>
142f5e5e-091f-4ed5-a696-6abf27e02275.ee13fd79-d7b9-426f-8082-7edf390e34ae.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
142f5e5e-091f-4ed5-a696-6abf27e02275.fb2ac3d1-fa8b-4303-8580-2503ebbaa9cf.description=Sleeps for "X" seconds.\n\n<pre>\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason\n</pre>
142f5e5e-091f-4ed5-a696-6abf27e02275.fd8f1fc0-4332-4b1e-bad9-6b168f2ba7f5.description=generates a random password consisting og lowercase letters, uppercase letter and number\n\nInputs\:\npasswordLength - specifies length of the password to be generated\n\nOutputs\:\ngeneratedPassword - the generated password string
14cd16e0-d2f8-4b33-9464-4ccb5d0e1f7f.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
1507f144-491a-436d-a865-db7b8b48bc22.0923aa35-9b50-4f9a-adc6-7cfaea1815b7.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
1507f144-491a-436d-a865-db7b8b48bc22.23a84c08-09bb-4342-967c-8e383a09a036.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
1507f144-491a-436d-a865-db7b8b48bc22.253e1c25-ae9f-4698-9b3d-847bec4e8e12.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
1507f144-491a-436d-a865-db7b8b48bc22.3026ff9a-9b21-447e-9987-3fb8188105f8.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
1507f144-491a-436d-a865-db7b8b48bc22.704988be-7f23-40eb-ac46-be4994506f60.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
1507f144-491a-436d-a865-db7b8b48bc22.87e2fb14-13ed-4d0f-a645-86b15e9b0431.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
1507f144-491a-436d-a865-db7b8b48bc22.88751a56-6103-4a0e-8f12-1574548512a9.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
1507f144-491a-436d-a865-db7b8b48bc22.9840380f-78bf-4b88-ba49-1cdc21a3ad4d.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
1507f144-491a-436d-a865-db7b8b48bc22.9882caaa-d54b-428b-ab1b-10469b31def9.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
1507f144-491a-436d-a865-db7b8b48bc22.9ca73f65-58bf-4adb-a82f-1b54b9a68655.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
1507f144-491a-436d-a865-db7b8b48bc22.bdbd7129-df89-4ba7-a43d-5deb10e14a84.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
1507f144-491a-436d-a865-db7b8b48bc22.c7ff3c1c-9abe-4924-98cc-2051b061568d.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
1507f144-491a-436d-a865-db7b8b48bc22.da7c17c3-ed7c-4b58-b266-e7afa9058523.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
1507f144-491a-436d-a865-db7b8b48bc22.db0cbeaf-be14-4736-a495-8ababbd49365.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
1507f144-491a-436d-a865-db7b8b48bc22.dd380f72-073b-491c-9728-e1c21b0d704c.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
1507f144-491a-436d-a865-db7b8b48bc22.fbe06fec-fcc8-4a48-aa64-bae53e09fe2d.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
155b012a-9db9-4a23-9c02-0d00292c33b2.description=Path to the tnsnames.ora file
175fb5fb-15e2-4aa9-a31b-3907e8c9cdcf.description=vCenter Account
17c2fb89-9a93-47fd-8c52-dedde00af42d.description=Path to the SA installer on Linux Machines
18438dea-5fee-4693-b68b-bc80ec516923.005355d1-2f7e-49c4-b444-5eed54f8344b.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
18438dea-5fee-4693-b68b-bc80ec516923.05bef292-65ae-4bbc-b639-0fde10b382fb.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
18438dea-5fee-4693-b68b-bc80ec516923.147db22f-bfb3-4a34-a120-0e3f1796e79c.description=The flow outputs the ESL Virtual Technology field required by ESL.\nThe field can be one of the following\:\n   - Physical servers -  "Logical Server"\n   - vCenter Servers - "VMWare"\n   - HyperV Servers - "Hyper-V"\n\nInput Parameters\:\n   serverResourcePool - The Resource Pool in which the server is being provisioned.l\n   serverType - The type of server, either V for virtual or P for Physical\n\nResponses\:\n   success - the Virtual Technology Field was populated\n   failure - otherwise\n\nResult Fields\:\n   eslVirtualTech - The string representing the virtual technology
18438dea-5fee-4693-b68b-bc80ec516923.19108b86-9ad6-40e4-ae7d-d23289a0b339.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
18438dea-5fee-4693-b68b-bc80ec516923.238c249a-4eb4-4d9f-bbe8-5443b9879805.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
18438dea-5fee-4693-b68b-bc80ec516923.4131a9c9-1dc6-4d8c-acff-34eed77cd553.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
18438dea-5fee-4693-b68b-bc80ec516923.47a68780-53bf-44d0-ac52-6398492cbc60.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
18438dea-5fee-4693-b68b-bc80ec516923.751c58d2-a9d1-4107-9a25-f244289b6212.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
18438dea-5fee-4693-b68b-bc80ec516923.8b8719f2-2f94-48d5-8cb4-b77ce3324508.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
18438dea-5fee-4693-b68b-bc80ec516923.a0aacf20-7b4b-4f8c-9072-36ee24b86fbd.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
18438dea-5fee-4693-b68b-bc80ec516923.a7463cea-2a55-4731-8c8b-67ecdec1ae56.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
18438dea-5fee-4693-b68b-bc80ec516923.ad66efc9-7d2d-4ab0-8f29-988513ca962c.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
18438dea-5fee-4693-b68b-bc80ec516923.c534606d-8167-43e1-9ad3-9f525010f7f0.description=Flow specifically to configure windows client supplied images.  Flow required since some windows configuration is done \nin the SA subflows.  Since ClientSupplied bypasses all of the SA subflows, this flow was needed to handle the \nspecific ClientSupplied tasks.\n\n- Reset Administrator Account to localadmin account.\n\n
18438dea-5fee-4693-b68b-bc80ec516923.cbfa15f5-f179-48ea-ba0d-5d97657dbdcd.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
18438dea-5fee-4693-b68b-bc80ec516923.d1377007-0992-493d-97fc-ed74cec48cd3.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
18438dea-5fee-4693-b68b-bc80ec516923.description=This flow when provided an InfrastructureService id, will deploy IO based service. It will update the provided Infrastructure Service with Server Groups followed by Servers present in a Server Group.\n\nInput Parameters\:\n   id\: Infrastructure Service id.\n\nResponses\:\n   success - if the IO deploy operation is successful.\n   failure - otherwise\n\nResult Fields\:
18438dea-5fee-4693-b68b-bc80ec516923.ef229396-d4dd-4cb7-874c-0f6f89740f00.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
191df215-0ba2-492c-ad95-ebead97ccf57.02cdcb4b-f239-4979-af85-4c88a5a763b2.description=<pre>Runs a command and allows user to specify that it runs locally (in this case no port should be specified), via ssh, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\nhost - Hostname or ip address.\nport - Port number for connecting to the host.\nusername - Username to connect as.\npassword - Password of the user.\nprotocol - The protocol used to run the command (can be one of ssh, ROSH, GlobalShell, Telnet, RSH, local, WMI, NASConnectTelnet, or HPOM).\ntimeout - (optional, default 90 seconds) time in milliseconds to wait for the command to complete; increase its value if you are getting incomplete output results or timeout.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\nenvironment - Specifies environment variables/values that need to be defined when running command.\nstartDir - The path to the starting directory.\npty - Whether to use pty (used by ssh, GlobalShell. Valid values\: true, false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on RAS host.\nsasHost - The host we want to run the ROSH command on.\nsasHostUsername - The username used to run the ROSH command on sasHost.\nusernamePrompt - The prompt that when seen should send the username; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'\npasswordPrompt - The prompt that when given should send the password; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'Password\:'\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default, the path will have to be  changed on Windows 2000 systems\nnasDevice - The NAS device to run the command on when using the NASConnect protocol.\nnasDeviceConsoleMode - The NAS device console mode used to run the command scripts that run the command on the given NAS device. If this input is empty, command scripts are not used, and the connection to the NAS device and the command are issued directly in the console; this is not recommended, since its error handling capabilities are limited and it might result in success even when the command fails to execute. The values for this input can be found in the NAS web interface, as a drop-down list when a new command script is created (ex. Cisco IOS enable).\nhpomNode - Node on which the command is to be executed.\nhpomProtocol - Protocol to communicate with HPOM (http or https).\ncharacterSet - The characterSet name for stream encoding and decoding between the RAS and target machine. For example, SJIS,EUC-JP, UTF-8.  By default it is UTF-8 (used by ssh, GlobalShell, Telnet, RSH).\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nstdErr - The STDERR of the command.\nstdOut - The STDOUT of the command.\n</pre>
191df215-0ba2-492c-ad95-ebead97ccf57.ba2777db-1cc2-42e1-9bc9-d1a3d72c1767.prompt=Enter host\:
191df215-0ba2-492c-ad95-ebead97ccf57.description=Use an apx command to delete a server from the Server Automation server (SAS). Internally this flow will use ssh for the protocol and  port 2222 for the connection.\n\nInputs\:\ncoreHost -  SAS core hostname or IP address \ncoreUsername -  SAS username to access the coreHost \ncorePassword -  SAS user's password to access the coreHost\nserverName -  name of the managed server to be deleted\n\nResponses\:\nsuccess -  operation completed successfully\nfailure - otherwise
1a00d91b-1cb3-435a-baa2-fcf188c62d0a.2d5c0dd7-383b-429c-bdaa-cc04963a3141.description=<pre>Iterates through a list of values. If the list changes while running, the updates will be appended to the list.\n\nInputs\:\nseparator - The list separator (or delimiter).\nlist - The list to be split\n\nResponses\:\nhas more - Another value was in the list, and has been returned.\nfailure - failed to process the list.\nno more - The iterator has gone fully through the list. This response will only be returned once per iteration through the list, a subsequent call to the Iterator will restart the Iteration through the list.\n\nReturns\:\nThe current element of the list, if the response is has more</pre>
1a00d91b-1cb3-435a-baa2-fcf188c62d0a.4437c597-49a7-4b5e-93eb-b462957d6dba.description=<pre>This subflow was created by the Web Services Wizard to invoke the efficientip_macro_add_ip_php operation on file\:/C\:/CSA_INSTALLATION/wsdl_eip_full.wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nauth_login - The input named efficientip_macro_add_ip_php|input|auth_login of the complex type\: efficientip_macro_add_ip_php|input\nauth_password - The input named efficientip_macro_add_ip_php|input|auth_password of the complex type\: efficientip_macro_add_ip_php|input\nsrvid - The input named efficientip_macro_add_ip_php|input|srvid of the complex type\: efficientip_macro_add_ip_php|input\nvlanglobalid - The input named efficientip_macro_add_ip_php|input|vlanglobalid of the complex type\: efficientip_macro_add_ip_php|input\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\noutput - The output given by the XPath\: /Envelope/Body/efficientip_macro_add_ip_phpResponse/output</pre>
1a00d91b-1cb3-435a-baa2-fcf188c62d0a.b09fd1ee-5110-4205-aece-bc6e68d2dd29.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
1a00d91b-1cb3-435a-baa2-fcf188c62d0a.c83ac608-251e-4795-992e-33c180f51346.description=<pre>This is an operation check whether field2 is not empty(should be an ip address) while filed1 is an ip address.\n\nInputs\:\nfield1 - vlanglobalid.\nfield2 - rsv_ip.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - field1 is not an up or borh field1 & field2 are ip.\nfailure - field1 is an ip but field2 is not\n</pre>
1a00d91b-1cb3-435a-baa2-fcf188c62d0a.f3bee4ae-b7f7-4dfc-a2fa-bc2bcc31ced3.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
1a299708-634f-41d2-9ad4-12ff7ac4c117.a8700bcf-cb01-4c78-8902-e035e4e5651c.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
1a299708-634f-41d2-9ad4-12ff7ac4c117.e7d81783-4571-4dea-9e0b-4184322ace69.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
1a5ad631-3048-4645-b305-3b76777054f4.description=It's attributes which will be used in ESL_CreateCI
1c255360-1ec6-499c-adeb-af7544d601ad.f6278fff-7172-4f8e-88e1-d6f500d5ee9a.description=<pre>\nService to perform an HTTP GET via the Java HTTP Client\n\nInputs\:\nurl - the url to attempt to retrieve.\nusername - the username to authenticate to url with.\npassword - the password for username.\ntimeout - a timeout after which the connection should be terminated, or 0 for no timeout.\nuseCookies - Enables cookie tracking. Cookies will be stored between consecutive calls. valid options are\: true/false\nfollowRedirects - specifies whether or not the get command should automatically follow redirects.\ntrustAllRoots - enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it. valid options are\: true/false\nproxy - a proxy to use when accessing the web site.\nproxyPort - a port on the proxy to connect to.\nproxyUsername - a username to use when connecting to the proxy.\nproxyPassword - a password to use when connecting to the proxy.\nencodeURL - perform URL encoding.\nuserAgent - if the HTTP header USER_AGENT needs to be overridden, pass in the value here\ncharacterSet - the characterSet for HTTP Get request and response. Default is UTF-8.\n\nResponses\:\nsuccess - URL retrieved successfully.\nfailure - The url could not be retrieved.\n</pre>
1cbca507-fc20-47cc-a3ab-a39a2d949dab.7483c3ad-1717-4446-9eeb-ced6089a97aa.description=<pre>\nThis workflow returns the user identifier id for the given user.\n\nInputs-\ncsaUser\u2013  CSA User name\nauthType - The authentication type that this operation uses when trying to execute the request on the target server.\nValid values\: basic, form, digest, ntlm, kerberos, anonymous (no authentication).\nDefault value\: anonymous - authentication not used when executing the request.\nkerberosConfFile - The path to the Kerberos configuration file. If this input is empty the kdc (Key Distribution Center) and realm will get their values from the full domain name which is obtained from the url of the web server.\ntimeout - The number of milliseconds to wait for a connection to be established. This input should be assigned a value greater than or equal to zero. A timeout value of zero is an infinite timeout.\nDefault value\: 0.\nsocketTimeout - The number of milliseconds to wait for the data to be retrieved. This input should be assigned a value greater than or equal to zero. A socketTimeout value of zero is an infinite timeout.\nDefault value\: 0.\nuseCookies - If true, enables cookie tracking. Cookies will be stored between consecutive calls. This is a boolean input. If a non-boolean value is specified, it will take the default value.\nDefault value\: true.\nfollowRedirects - If true, the GET command automatically follows redirects. This is a boolean input. If a non-boolean value is specified, it will take the default value.\nDefault value\: true\nproxy - A proxy to use when accessing the web site.\nproxyPort - The port on the proxy to connect to.\nproxyUsername - The username to use when connecting to the proxy.\nproxyPassword - The password to use when connecting to the proxy.\nencodeURL - If true, automatically encodes the URL. This is a boolean input. If a non-boolean value is specified, it will take the default value.\nDefault value\: false.\nuserAgent - The value that should be used if the HTTP header USER_AGENT has to be overridden.\ntrustAllRoots - If true, enables weak security over SSL. A SSL certificate is trusted even if no trusted CA issued it.\nDefault value\: true\nkeystore - URL of the keystore file or local path to it (e.g. %JAVA_HOME%/jre/lib/security/cacerts). It may be empty if HTTPS client authentication is not to be used.\nkeystorePassword - Password to unlock the keystore.\ntrustKeystore - URL of the truststore file or local path to it (e.g. %JAVA_HOME%/jre/lib/security/cacerts). It may be empty if HTTPS server authentication is not to be used.\ntrustPassword - Password to unlock the truststore.\n\nOutputs-\nuserIdentifier \u2013 User identifier id for the given user\n</pre>
1cdd21de-f1de-4f42-8feb-25f88f4c8834.14473283-ead1-419e-b6bf-4ed5036f47cf.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
1cdd21de-f1de-4f42-8feb-25f88f4c8834.96b54d31-212f-4b5e-89f5-c71a2e302384.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
1cdd21de-f1de-4f42-8feb-25f88f4c8834.99e16a75-e676-407b-a18e-0ef1b754c2e6.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
1d3ed6c9-a735-454c-ad04-08f02718781e.4b009ec3-4998-4fdf-99fb-6884a8cd3d45.description=<pre>Attempts to shutdown the guest virtual machine.\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation (true, false).\nvirtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\nvmIdentifierType - Virtual machine identifier type (inventorypath, name, ip, hostname, uuid, vmid).\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n\nReturns\:\nreturnResult - Operation result message.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
1d3ed6c9-a735-454c-ad04-08f02718781e.5429837b-0ff5-46c1-9b76-d75018a7a292.description=<pre>Retrieve power state of virtual machine (poweredOn,poweredOff,suspended).\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation (true, false).\nvirtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\nvmIdentifierType - Virtual machine identifier type (inventorypath, name, ip, hostname, uuid, vmid).\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n\nReturns\:\nreturnResult - Task completion return message.\npowerState - Power state (poweredOn,poweredOff,suspended).\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
1d3ed6c9-a735-454c-ad04-08f02718781e.58e1001b-5022-475c-a6a4-6d663083d11a.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
1d3ed6c9-a735-454c-ad04-08f02718781e.5ee5f8ad-24be-4f7c-b4d5-88f24779c0fb.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
1d3ed6c9-a735-454c-ad04-08f02718781e.c5eec713-3180-492e-981e-70cf42c937d6.description=<pre>Retrieve power state of virtual machine (poweredOn,poweredOff,suspended).\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation (true, false).\nvirtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\nvmIdentifierType - Virtual machine identifier type (inventorypath, name, ip, hostname, uuid, vmid).\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n\nReturns\:\nreturnResult - Task completion return message.\npowerState - Power state (poweredOn,poweredOff,suspended).\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
1d3ed6c9-a735-454c-ad04-08f02718781e.cef2a655-616d-4e48-8e58-cac29637b41c.description=<pre>Counts from one number to another number.\n\nInputs\:\nfrom - The number to start counting at\nto - The number to count to\nincrementBy - The amount to increment by during each count.\nreset - If set to true, then the counter will restart counting from the beginning.\n\nResponses\:\nhas more - Not yet done counting.\nfailure - Something went wrong.\nno more - Done counting. This will only be returned once, then counting restarts.\n\nReturns\:\nThe number that was just counted.</pre>
1d3ed6c9-a735-454c-ad04-08f02718781e.ef088d31-b61d-469a-8a30-54f3ab96d434.description=<pre>Sleeps for "X" seconds.\n\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason</pre>
1d8e4075-02c2-4ea3-b087-f25729b272e1.93d82b83-4c44-4103-ba89-8b4fc778d903.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
1d8e4075-02c2-4ea3-b087-f25729b272e1.a0e23ca8-6915-40ce-b12b-c0517063727a.description=Search for VMWare objects and their properties from a root object (if any). Retrieve each object's properties one at a time from an initial search query ala SQL Query operation.\n\nInputs\:\nhost - VMWare host hostname or IP\nuser - VMWare username\npassword - VMWare user's password\nport - Port to connect on\nprotocol - Connection protocol (http or https)\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation?\npropsType - VMWare properties type (Task, Datacenter, VirtualMachine, etc.) to filter on\npropsPathset - Property filter's pathset\npropsRootObjType - VMWare object type (eg. VirtualMachine, HostSystem, ComputeResource,ResourcePool,Alarm)\npropsRootObj - VMWare object ID\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\nno more - there are no more results to retrieve.\n\nReturns\:\nnumberOfResults - Number of results from the query remaining to be retrieved\nreturnResult - Query result item or operation result
1d8e4075-02c2-4ea3-b087-f25729b272e1.caec8054-5c12-4f26-b6a4-35e40f00d687.prompt=VMWare User\:
1d8e4075-02c2-4ea3-b087-f25729b272e1.d13eacb2-48e1-4b29-a0b7-40925fb330c6.prompt=Password\:
1d8e4075-02c2-4ea3-b087-f25729b272e1.d21b63a9-f52a-4499-bb6d-9a3a9319795a.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
1e297e3a-ad4a-486a-9043-f361a829f947.description=Login name for the Microsoft SQL Server 2008 R2
1e991ae5-46e1-4c99-92eb-40428948a5c3.a4e28d0f-a3cc-4dce-ba8b-9895aee4a824.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
1f12e7bb-0399-4e3e-b80d-dd3913e23a5f.description=password for the Microsoft SQL Server 2008 R2
23974fe5-116f-4a20-91c4-6df678a3e5d7.de399a9e-7dcb-4cb1-8ac3-6bbc749efa10.description=<pre>Uses Secure FTP (SFTP) to send a file on a RAS to a remote host.  \n\nInputs\:\nhost - IP address/host name.\nport - The port to connect to on host.\nusername - Remote username.\npassword - Password to authenticate. If using a private key file this will be used as the passphrase for the file.\nprivateKey - Absolute path for private key file for public/private key authentication.\nlocalFile - The path to the file on the RAS to be copied remotely using SFTP.\nremoteLocation - The remote location where the file is to be placed.\ncharacterSet - The name of the control encoding to use. Examples\: UTF-8, EUC-JP, SJIS.  Default is UTF-8.\ncloseSession - Close the SSH session at completion of operation?  Default value is true.  If false the SSH session can be reused by other SFTP commands in the same flow.  Valid values\: true, false.\n\nResponses\:\nsuccess - Command completed successfully.\nfailure - Command failed.\n\nResult\:\nLocal file will be copied to Remote system.\n</pre>
23aec827-fda2-4e41-98ac-d7c9a1bf370c.4ec5ac21-283b-4a55-aad0-a3e2298ec5fb.prompt=Enter host\:
23aec827-fda2-4e41-98ac-d7c9a1bf370c.description=Use an apx command to deactivate a server from the Server Automation server (SAS). Internally this flow will use ssh for the protocol and  port 2222 for the connection.\n\nInputs\:\ncoreHost -  SAS core hostname or IP address\ncoreUsername -  SAS username to access the coreHost \ncorePassword -  SAS user's password to access the coreHost\nserverName -  name of the  managed server to be deactivated\n\nResponses\:\nsuccess -  operation completed successfully\nfailure - otherwise\n
23aec827-fda2-4e41-98ac-d7c9a1bf370c.f2e68a64-613c-4c5a-bc13-4d967e7c7ad6.description=<pre>Runs a command and allows user to specify that it runs locally (in this case no port should be specified), via ssh, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\nhost - Hostname or ip address.\nport - Port number for connecting to the host.\nusername - Username to connect as.\npassword - Password of the user.\nprotocol - The protocol used to run the command (can be one of ssh, ROSH, GlobalShell, Telnet, RSH, local, WMI, NASConnectTelnet, or HPOM).\ntimeout - (optional, default 90 seconds) time in milliseconds to wait for the command to complete; increase its value if you are getting incomplete output results or timeout.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\nenvironment - Specifies environment variables/values that need to be defined when running command.\nstartDir - The path to the starting directory.\npty - Whether to use pty (used by ssh, GlobalShell. Valid values\: true, false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on RAS host.\nsasHost - The host we want to run the ROSH command on.\nsasHostUsername - The username used to run the ROSH command on sasHost.\nusernamePrompt - The prompt that when seen should send the username; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'\npasswordPrompt - The prompt that when given should send the password; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'Password\:'\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default, the path will have to be  changed on Windows 2000 systems\nnasDevice - The NAS device to run the command on when using the NASConnect protocol.\nnasDeviceConsoleMode - The NAS device console mode used to run the command scripts that run the command on the given NAS device. If this input is empty, command scripts are not used, and the connection to the NAS device and the command are issued directly in the console; this is not recommended, since its error handling capabilities are limited and it might result in success even when the command fails to execute. The values for this input can be found in the NAS web interface, as a drop-down list when a new command script is created (ex. Cisco IOS enable).\nhpomNode - Node on which the command is to be executed.\nhpomProtocol - Protocol to communicate with HPOM (http or https).\ncharacterSet - The characterSet name for stream encoding and decoding between the RAS and target machine. For example, SJIS,EUC-JP, UTF-8.  By default it is UTF-8 (used by ssh, GlobalShell, Telnet, RSH).\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nstdErr - The STDERR of the command.\nstdOut - The STDOUT of the command.\n</pre>
24fd1565-0230-48f3-94d7-a9d6106e376c.description=The name of the Exchange 2007 mailbox that will be monitored using SiteScope's Exchange 2007 monitor.
252a0fea-0b0f-420a-a752-58caee35ffea.64245dae-67d7-4651-8436-3fcefd01bf90.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
252a0fea-0b0f-420a-a752-58caee35ffea.6ed3b16d-721d-4bb6-8ef0-b984bd5a9185.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
252a0fea-0b0f-420a-a752-58caee35ffea.71fbd973-3b15-4859-94a6-69f36f9976a8.description=Generic flow to send an e-mail
252a0fea-0b0f-420a-a752-58caee35ffea.832fdaaa-f807-4700-bee2-909908df6c34.prompt=Enter a value for date
252a0fea-0b0f-420a-a752-58caee35ffea.8cf0cd91-4dcc-4023-b28f-a7799e72bee9.description=<pre>\nIf the input dateFormat is not specified, it converts a date in the format of date/time of OO Central Server's, which is dependant on the Java locale, to a date either in the format of date/time of OO Central Server's or in the format specified in the input outFormat. \n\nIf the input dateFormat is specified, it converts a date in the format in dateFormat to a date either in the format of date/time of OO Central Server's or in the format specified in the input outFormat.\n\nYou can use flow "Get Current Date and Time" to check upon the default date/time format.  \n\nFor exmaple, if OO Central Server's locale is English, the input dateFormat is empty and the input outFormat is empty, the input date should be in the format of "July 13, 2006 10\:04\:08 AM". If the user specifies dateFormat as "dd-MM-YYYY HH\:mm\:ss", the input date should be in the format of "13-07-2006 10\:04\:08". If the input outFormat is empty, the result will be "July 13, 2006 10\:04\:08 AM". If the input outFormat is "yyyy-MM-dd", the result will be "2006-07-13".\n\n\nSpecify the date format with the following patterns\:\n\nLetter \tDate or Time Component \tPresentation \tExamples\nG \tEra designator \tText \tAD\ny \tYear \tYear \t1996; 96\nM \tMonth in year \tMonth \tJuly; Jul; 07\nw \tWeek in year \tNumber \t27\nW \tWeek in month \tNumber \t2\nD \tDay in year \tNumber \t189\nd \tDay in month \tNumber \t10\nF \tDay of week in month \tNumber \t2\nE \tDay in week \tText \tTuesday; Tue\na \tAm/pm marker \tText \tPM\nH \tHour in day (0-23) \tNumber \t0\nk \tHour in day (1-24) \tNumber \t24\nK \tHour in am/pm (0-11) \tNumber \t0\nh \tHour in am/pm (1-12) \tNumber \t12\nm \tMinute in hour \tNumber \t30\ns \tSecond in minute \tNumber \t55\nS \tMillisecond \tNumber \t978\nz \tTime zone \tGeneral time zone \tPacific Standard Time; PST; GMT-08\:00\nZ \tTime zone \tRFC 822 time zone \t-0800\n\nSo, for example\: the date "2006-07-10 15\:16\:14.766 PDT" would have the dateFormat "yyyy-MM-dd HH\:mm\:ss.SSS z".\n\nYou can also use single quotes (') to avoid text interpretation. The quoted text will simply be copied into the output string during formatting (if present in the outFormat) or matched against the input string during parsing (if present in the dateFormat). For example, the date value "2006-07-10T15\:16\:14.766Z" would have the dateFormat "yyyy-MM-dd'T'HH\:mm\:ss.SSS'Z'". \n\n\nInputs\:\ndate - The date to parse. If the input dateFormat is empty, the date must be in the format of date/time of OO Central Server's, which is dependant on the Java locale. If the input dateFormat is not empty, the date must be in the format specified in the input dateFormat.\ndateFormat - The format of the input date. \noutFormat - The format of the output date/time. If it is empty, the output date/time will be in the format of date/time of OO Cental Server's, which is dependant on the Java locale.\noutLocaleLang - The locale language for output string. For example,  en or ja.\noutLocaleCountry - The locale country for output string. For example, US or JP. \n\nResponses\:\nsuccess - The date was converted.\nfailure - The date could not be converted.\n\nResult\:\nThe date in the new format.\n</pre>
252a0fea-0b0f-420a-a752-58caee35ffea.91198097-ec33-44b3-ac2f-a7e80538a12f.description=Generic flow to send an e-mail
252a0fea-0b0f-420a-a752-58caee35ffea.99058c8e-f768-4add-a01e-209057cbed1c.description=Generic flow to send an e-mail
252a0fea-0b0f-420a-a752-58caee35ffea.a6773ad7-dd70-4e34-842d-866c3bdd4cd4.description=<pre>\nCheck the current date and time, and returns a java DateAndTime formatted string of it. If locale is specified, it will return the date and time string based on the locale.Otherwise, default locale will be used.\n\nInputs\:\nlocaleLang - The locale language for date and time string. For example,  en or ja.\nlocaleCountry - The locale country for date and time string. For example, US or JP. If localeLang is not specified, this input will be ingored.\n\nResult\:\nCurrent date and time.\n\nResponses\:\nsuccess - Date/time retrieved successfully.\nfailure - Date/time could not be retrieved.\n</pre>
26bb3e0f-82f8-4529-8c89-66ab71a2a05c.012486a4-4f54-4ca0-901e-b873805344ce.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
26bb3e0f-82f8-4529-8c89-66ab71a2a05c.0dd68457-e0d3-4f0c-a7e3-3c83b8a6c2d2.callout=if  old allocate cpu is not equal current allocate cpu, updating current allocate cpu&memory for the table MOERESPOOL.
26bb3e0f-82f8-4529-8c89-66ab71a2a05c.15ea7e1c-1485-415a-b7ff-5f0a4c07cb94.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
26bb3e0f-82f8-4529-8c89-66ab71a2a05c.2bf56a12-d9f0-4905-9a09-7376175db278.callout=if no data (tshirtsize\=null) exist, that means error in DB_UpdateServersizeDate (resizing),  updating history data(update ValidTo to history data) succeed but inserting new data failed.\nNeed to update history date.ValidTo to null
26bb3e0f-82f8-4529-8c89-66ab71a2a05c.44413888-6d2f-4ca2-a350-cf09d51fee68.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
26bb3e0f-82f8-4529-8c89-66ab71a2a05c.636ad0b6-5bd2-4b55-bac8-2d1457810304.callout=If data.tshirtsize not equals with original size. That means there's new inserted data (in DB_UpdateServerSizeData) and need rollback.
26bb3e0f-82f8-4529-8c89-66ab71a2a05c.6c622353-1c60-4aa6-bede-807f28eb111d.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
26bb3e0f-82f8-4529-8c89-66ab71a2a05c.716fac33-ba06-41cf-a562-3c020c491c87.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
26bb3e0f-82f8-4529-8c89-66ab71a2a05c.b26c44e2-73b4-4d78-9478-c38a10acc87c.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
26bb3e0f-82f8-4529-8c89-66ab71a2a05c.b54ec805-00a2-47a7-8c89-ce0104eb28c6.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
26bb3e0f-82f8-4529-8c89-66ab71a2a05c.d8d6a11c-73b0-4ddf-a3de-9bbbf1c77408.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
26bb3e0f-82f8-4529-8c89-66ab71a2a05c.e8085e23-a221-451f-af53-8f40b8929006.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
26bb3e0f-82f8-4529-8c89-66ab71a2a05c.ed904e9d-f696-45c3-8a30-6211ea65b15a.callout=If data.tshirtsize \= original size. No need to update.
26e16199-ac42-40d7-8725-27b18ed3509d.2b1d8441-9545-4a23-90f6-f8bcc2334c58.description=<pre>\nRuns a SQL query against an Oracle database, using the information in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation. Subsequent calls with the same information return the other rows.\n\nInputs\:\n    TNSPath -The path to the folder of the TNS file tnsnames.ora. This path must be accessible by the OO RAS service. For example, if the RAS and the Oracle server are installed on the same Windows system, the TNSPath might look like \u201CC\:\\app\\Administrator\\product\\11.1.0\\db_1\\network\\admin\u201D. If the RAS and the Oracle server are on different Windows systems, you can copy the tnsnames.ora file  to the RAS system. The TNSPath might look like \u201CC\:\\Program Files\\Hewlett-Packard\\Operations Orchestration\\RAS\\Java\\Default\\webapp\\conf\u201D or \u201CC\:\\Temp\u201D depending on where you place the .ora file. \n    TNSEntry - The entry name in the tnsnames.ora file that contains the connection information. For example, the value for the TNSEntry input is \u201CTestEntry\u201D if the content in the tnsnames.ora file looks like the following\: \n\nTestEntry \=\n  (DESCRIPTION \=\n   (ADDRESS \= (PROTOCOL \= TCP)(HOST \= 16.110.111.111)(PORT \= 1521))\n   (CONNECT_DATA \=\n     (SERVER \= DEDICATED)\n     (SERVICE_NAME \= orcl)\n   )\n )\n\n    Username - The username to connect to the Oracle database. \n    Password - The password for the Username.\n    Command - The command to execute. \n    Delimiter \u2013 The delimiter to use between the columns in the returnResult result.\n    Key \u2013 The key to use to keep multiple query results distinct.\n    timeout - Seconds to wait before timing out the SQL command execution.\nDefault values\: 0 \n\nResults\:\n    returnResult - This is the primary output. Returned the data returned for each row separated by the value you specified in the Delimiter input (for example, \u201Ckey16|lst|16\u201D).\n    columnNames - The names of the columns returned, separated by the value you specified in the Delimiter input (for example, \u201CMYKEY|NAME|ID\u201D).\n    rowsLeft - The number of rows remaining that match the query. \n\nResponses\:\n    more items - More rows are available for retrieval.\n    no more items - No more rows are available.\n    failure - There was an error executing the command.\n\nNotes\:\n1. This operation only supports Oracle. \n2. This operation can only execute the "SELECT" statement. For statements that modify the database, use the TNS Names SQL Command operation.\n\n</pre>\n\n\n
26e16199-ac42-40d7-8725-27b18ed3509d.4c6397c6-7e27-4748-99a3-acb2543442f4.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
26e16199-ac42-40d7-8725-27b18ed3509d.692d0ec8-9d9a-4e20-a2c8-ddbc5b01443d.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
26e16199-ac42-40d7-8725-27b18ed3509d.9a7a544c-b53c-4231-83c4-06f69d21e9df.callout=Replace C with V, because of CVS System
26e16199-ac42-40d7-8725-27b18ed3509d.a89dfd91-d77a-4e71-9153-6fac4be50eaa.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
26e16199-ac42-40d7-8725-27b18ed3509d.bc2faf54-2693-459c-87e2-feece01398f0.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
26e16199-ac42-40d7-8725-27b18ed3509d.dc9541e0-7ab6-4af7-918c-e73e69a7f118.callout=although server.iotemplate is renamed to server.template, we don't change the naming in the flow for now to avoid renaming spread across all the flows.
273afc76-12ca-465d-a010-c0309993e487.description=DNS name of SA Core
28e8b86d-d646-481f-b111-e5779ed51ee7.10435d81-10c6-46d2-9717-0ad8a4723d36.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
28e8b86d-d646-481f-b111-e5779ed51ee7.1b67000b-60ec-40cc-b58d-bd32b1732e9b.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
28e8b86d-d646-481f-b111-e5779ed51ee7.5512e972-e720-4002-a9a0-a58a066ba7c4.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
28f46fca-1495-4062-a31e-1bd370a2be59.59c380e7-bf87-4db0-9823-501d502c3b00.description=<pre>\nRuns a SQL query against an Oracle database, using the information in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation. Subsequent calls with the same information return the other rows.\n\nInputs\:\n    TNSPath -The path to the folder of the TNS file tnsnames.ora. This path must be accessible by the OO RAS service. For example, if the RAS and the Oracle server are installed on the same Windows system, the TNSPath might look like \u201CC\:\\app\\Administrator\\product\\11.1.0\\db_1\\network\\admin\u201D. If the RAS and the Oracle server are on different Windows systems, you can copy the tnsnames.ora file  to the RAS system. The TNSPath might look like \u201CC\:\\Program Files\\Hewlett-Packard\\Operations Orchestration\\RAS\\Java\\Default\\webapp\\conf\u201D or \u201CC\:\\Temp\u201D depending on where you place the .ora file. \n    TNSEntry - The entry name in the tnsnames.ora file that contains the connection information. For example, the value for the TNSEntry input is \u201CTestEntry\u201D if the content in the tnsnames.ora file looks like the following\: \n\nTestEntry \=\n  (DESCRIPTION \=\n   (ADDRESS \= (PROTOCOL \= TCP)(HOST \= 16.110.111.111)(PORT \= 1521))\n   (CONNECT_DATA \=\n     (SERVER \= DEDICATED)\n     (SERVICE_NAME \= orcl)\n   )\n )\n\n    Username - The username to connect to the Oracle database. \n    Password - The password for the Username.\n    Command - The command to execute. \n    Delimiter \u2013 The delimiter to use between the columns in the returnResult result.\n    Key \u2013 The key to use to keep multiple query results distinct.\n    timeout - Seconds to wait before timing out the SQL command execution.\nDefault values\: 0 \n\nResults\:\n    returnResult - This is the primary output. Returned the data returned for each row separated by the value you specified in the Delimiter input (for example, \u201Ckey16|lst|16\u201D).\n    columnNames - The names of the columns returned, separated by the value you specified in the Delimiter input (for example, \u201CMYKEY|NAME|ID\u201D).\n    rowsLeft - The number of rows remaining that match the query. \n\nResponses\:\n    more items - More rows are available for retrieval.\n    no more items - No more rows are available.\n    failure - There was an error executing the command.\n\nNotes\:\n1. This operation only supports Oracle. \n2. This operation can only execute the "SELECT" statement. For statements that modify the database, use the TNS Names SQL Command operation.\n\n</pre>\n\n\n
28f46fca-1495-4062-a31e-1bd370a2be59.782e8001-2661-43c7-93a4-62a35a759b00.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
28f46fca-1495-4062-a31e-1bd370a2be59.a1795c16-1bf3-476a-9b04-95f609002d55.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
28f46fca-1495-4062-a31e-1bd370a2be59.c4ce79a5-084c-459f-b35b-86c73a4b74a1.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
29116e15-b008-4ad7-b356-0e3c0b498375.0de16a6b-5824-4640-bdbf-e24c0cfbe7d5.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
2928d8c9-04f7-49b3-b321-7ae397902748.description=The HP SA version as listed in HP OO selection list "SAS Version"
2953e320-e5ee-45db-86e8-9112b500214f.description=Path to the SA installer on Linux Machines
2a0b2895-6ce7-4bc0-ae2b-45455237159f.description=DNS server host for NAT IP addresses
2a2887f9-9148-4200-8981-f56ecbf5d98d.description=pc.vcenter.protocol
2a43fd12-7db9-4f0f-a4a4-59d1b8e5a76a.0c1b718b-35b8-4a1f-add8-376877a578b4.description=Runs Service Center Virtual Machine Manager (SCVMM) Cmdlets using Windows PowerShell. The complete syntax and descriptions of all cmdlets that can be used with this operation can be found at http\://www.microsoft.com/download/en/details.aspx?displaylang\=en&id\=20419. The operation creates a remote powershell session to the target host, loads the "Microsoft.SystemCenter.VirtualMachineManager" snap-in and executes the given command(s). \n\nInputs\:\n    host - The hostname or ip address of the SCVMM server.\n    username - The username to use when connecting to the server.\nValue format\: username@domain or domain\\username.\n    password - The password to use when connecting to the server.\n    authType - Specifies the mechanism that is used to authenticate the user's credentials. \nValid values\: Default, Negotiate, Credssp, Kerberos. (case-insensitive)\nDefault value\: Default.\n    commands - The PowerShell cmdlets to execute. For more that one command, you should write each one on a separate row and they will be executed sequentially. \nExample\: get-vmmserver -computerName "1.2.3.4"\n                get-virtualharddisk -all\n    delimiter - The delimiter used to separate each property name from the property value in the output table. \nDefault value\: "\:".\n    colDelimiter - The delimiter used to separate columns in the output table.\nDefault value\: ','\n    rowDelimiter - The delimiter used to separate rows in the output table. \nDefault value\: newline\n    version - The SCVMM Server version.\nDefault value\: 2008 R2\n\nResults\:\n    outputString - A string representation of the results returned by the operation. Essentially any command returns a PowerShell object which has properties, as you can observe from the returnResult. OutputString result converts each object to string and merges all the values into one string. If you want outputString to contain results similar to PowerShell console you should pipe Out-String at the end of the cmdlet  (e.g. Get-VirtualHardDisk -al l Format-List Location, Directory, Name, ID, HostName | Out-String). Doing this will determine returnResult to be something like Length\:xx, because the object is now of type String and Lenth is the only property of this type. This result can be useful in other situations where the PowerShell objects override ToString() method. Therefore, the outputString obtained running PowerShell command Get-Process (without Out-String pipe), will contain the names of the processes running on server.\n    returnResult - A table containing a row for each PSObject that the cmdlets emit. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format.\n    warnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\n\nResponses\:\nsuccess \t- The cmdlets were executed successfully.\nfailure \t- The cmdlets could not be executed.\n\nNotes\:\n1. Installation of Powershell 2.0 with winrm 2.0 on your client is required. The kit can be downloaded from here\: http\://support.microsoft.com/kb/968930.\n2. Before using this operation, please make sure you have enabled PowerShell remoting, by using the Enable-PSRemoting cmdlet.\n3. Windows Remote Management service must be running.\n4. In workgroup environments, enabling classic mode authentication for network logons may be needed. This can be performed by opening the "Local Security Policy" from Control Panel and selecting "Administrative Tools". Navigate to "Local Policies" -> "Security Options", double click on "Network Access\: Sharing and Security Model for local accounts" and set it to classic.\n5. Also, please modify the WSMan trusted hosts setting, by adding the IP addresses of all remoting clients to the list of trusted hosts. This can be done using one of the following commands\:\n        5.1. Set-item wsman\:localhost\\client\\trustedhosts -value * (adds all computers as trusted hosts)\n        5.2. Set-item wsman\:localhost\\client\\trustedhosts -value Computer (only adds Computer to the trusted hosts)\n        5.3. Set-item wsman\:localhost\\client\\trustedhosts -value *.domain.com (adds all computers in the specified domain)\n        5.4. Set-item wsman\:localhost\\client\\trustedhosts -value 10.10.10.1 (adds the remote computer with the IP address 10.10.10.1 to the trusted hosts list)\n6. Please read the folder's description for information on how to enable CredSSP authentication.\n</pre>
2a43fd12-7db9-4f0f-a4a4-59d1b8e5a76a.1d7eaaf4-bc0c-4726-8170-2285c4416600.prompt=Input command(s)\:
2a43fd12-7db9-4f0f-a4a4-59d1b8e5a76a.e8153d02-21ec-473f-acd0-8b3ec625c274.description=<pre>Adds a flow variable into the local context (available to itself and child flows only)\n\nInput Parameters\:\nkeyName - the name of the flow variable to use\nmyValue - the value to assign the flow variable\n\nResponses\:\nsuccess - assigned the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, $myValue];</pre>
2ac883bf-5a33-452d-9f54-4268b57751a6.033473a4-9c07-4e35-bcd1-7a2128535455.description=generates a random password consisting og lowercase letters, uppercase letter and number\n\nInputs\:\npasswordLength - specifies length of the password to be generated\n\nOutputs\:\ngeneratedPassword - the generated password string
2ac883bf-5a33-452d-9f54-4268b57751a6.15abed42-bbea-4c94-b007-d46d07c7e147.description=Counts from one number to another number.\n\n<pre>\nInputs\:\ncount - number of loops to complete\nreset - If true, then the counter will restart counting from the beginning.\n\nReturns\:\nThe number that was just counted.\n\nResponses\:\nhas more - Not yet done counting.\nno more - Done counting. This will only be returned once, then counting restarts.\nfailure - Something went wrong.\n</pre>
2ac883bf-5a33-452d-9f54-4268b57751a6.1780625a-171b-4f55-8b9a-a62e266b8f82.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
2ac883bf-5a33-452d-9f54-4268b57751a6.1f175e14-373b-4cba-8e19-4ec06f283093.description=<pre>This is an operation that does nothing, and can be used to display information to the user by editing the display tab. It can also be used for filtering flow variables by feeding them in as inputs, and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
2ac883bf-5a33-452d-9f54-4268b57751a6.25a60167-1bc4-4419-8716-f27043016a86.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
2ac883bf-5a33-452d-9f54-4268b57751a6.3a20b948-d152-42ad-b889-bad5e6530c2f.description=<pre>This is an operation that does nothing, and can be used to display information to the user by editing the display tab. It can also be used for filtering flow variables by feeding them in as inputs, and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
2ac883bf-5a33-452d-9f54-4268b57751a6.669421eb-33f5-4824-9fbe-5ae4de3603f1.description=Sleeps for "X" seconds.\n\n<pre>\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason\n</pre>
2ac883bf-5a33-452d-9f54-4268b57751a6.a10b9133-21b2-4755-b651-f33a379f615f.description=<pre>Runs a command and allows user to specify that it runs locally (in this case no port should be specified), via ssh, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\nhost - Hostname or ip address.\nport - Port number for connecting to the host.\nusername - Username to connect as.\npassword - Password of the user. If using a private key file this will be used as the passphrase for the file.\nprotocol - The protocol used to run the command (can be one of ssh, ROSH, GlobalShell, Telnet, RSH, REXEC, local, WMI, NASConnectTelnet, or HPOM).\ntimeout - (optional, default 90 seconds) time in milliseconds to wait for the command to complete; increase its value if you are getting incomplete output results or timeout.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\nenvironment - Specifies environment variables/values that need to be defined when running command.\nstartDir - The path to the starting directory.\npty - Whether to use pty (used by ssh, GlobalShell. Valid values\: true, false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on RAS host (used by ssh, GlobalShell).\nsasHost - The host we want to run the ROSH command on.\nsasHostUsername - The username used to run the ROSH command on sasHost.\nusernamePrompt - The prompt that when seen should send the username; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'\npasswordPrompt - The prompt that when given should send the password; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'Password\:'\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default, the path will have to be  changed on Windows 2000 systems\nnasDevice - The NAS device to run the command on when using the NASConnect protocol.\nnasDeviceConsoleMode - The NAS device console mode used to run the command scripts that run the command on the given NAS device. If this input is empty, command scripts are not used, and the connection to the NAS device and the command are issued directly in the console; this is not recommended, since its error handling capabilities are limited and it might result in success even when the command fails to execute. The values for this input can be found in the NAS web interface, as a drop-down list when a new command script is created (ex. Cisco IOS enable).\nhpomNode - Node on which the command is to be executed.\nhpomProtocol - Protocol to communicate with HPOM (http or https).\ncharacterSet - The characterSet name for stream encoding and decoding between the RAS and target machine. For example, SJIS,EUC-JP, UTF-8.  By default it is UTF-8 (used by ssh, GlobalShell, Telnet, RSH, REXEC).\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nstdErr - The STDERR of the command.\nstdOut - The STDOUT of the command.\n\nNotes\:\nTelnet protocol - Since telnet is not a remote execution protocol but a shell protocol the response will always be successful if the command was executed in the remote shell.  The return code of the specified command cannot be determined in this protocol.  If you must use the telnet protocol with this operation besure to check the command results. Consider using ssh or rexec protocol instead.\n</pre>
2ac883bf-5a33-452d-9f54-4268b57751a6.d1383033-5a46-40a4-9d18-9d1557e03852.description=<pre>Scan opened ports on give host  \n\nInputs\: \n host - IP address Host name to be scanned\n lowestPort - lowest port range\n highestPort - highest port range\n portType - the type of ports to be scanned (TCP or UDP). If not specified, the TCP ports are scanned.\n\nNote\:\n To scan specific port give same port as parameter for both Lowest Port and Highest Port, \n\nResponses\:\n success - the command was executed successfully\n failure - the command could not be executed\n\nResult\:\n finalResult - Information about the ports' statuses on a given machine.\n\nExtra results\:\n host - the IP of the host for which the ports are scanned\n ports - Number of ports scanned\n opened - Number of ports open\n closed - Number of ports closed\n dropped - Number of ports dropped\n</pre>\n
2d28b788-0a50-41e3-bdbc-f2378110a213.881a42cf-f9ab-4b38-b38e-dd7f9337a410.callout=Replace C with V, because of CVS System
2d28b788-0a50-41e3-bdbc-f2378110a213.bc7ab432-051c-435b-9c68-a451d709448e.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
2d28b788-0a50-41e3-bdbc-f2378110a213.e6270d10-4d85-4844-bd9c-4465462f98dd.callout=We don't have more then one item
2ddb8856-2942-439f-8754-c17cfdd5542c.9f1a549e-3b78-46f4-a5e1-60c3439deb37.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
2e60839b-77a4-4e53-8b69-eb99a0ff946b.36afc313-ac57-456d-9cd8-80fd08b3e5b9.description=Counts from one number to another number.\n\n<pre>\nInputs\:\ncount - number of loops to complete\nreset - If true, then the counter will restart counting from the beginning.\n\nReturns\:\nThe number that was just counted.\n\nResponses\:\nhas more - Not yet done counting.\nno more - Done counting. This will only be returned once, then counting restarts.\nfailure - Something went wrong.\n</pre>
2ef9801b-ce08-4d9a-9bed-b5074702cf86.description=attributes which will be used in ESL_CreateCI
2f4be11c-7453-44f0-b6a3-f9d7f4ddc60b.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
2f85f2b7-19a5-4f57-826e-45eb00fda64b.2a54a0e7-7056-44f9-b4c1-5e0095d233e3.description=<pre>\nRuns a command, allowing you to specify whether it runs locally (no port to be specified), via SSH, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\n    host - The host name or IP address.\n    port - The port number used to connect to the host.\n    username - The user name used to connect.\n    password - The password associated with the <username> input. If using a private key file, this is the passphrase for the file.\n    protocol - The protocol used to run the command. \nExamples\: SSH, ROSH, GlobalShell, Telnet, RSH, REXEC, local, WMI, NASConnectTelnet, HPOM\n    timeout - The time to wait for the command to complete (in milliseconds). Increase this value if you are getting incomplete output results or a timeout.\nDefault value\: 90 seconds (converted to milliseconds)\n    command - The command to run.\n    arguments - The arguments to pass to the command.\n    environment - Specifies the environment variables and values that need to be defined when running the command.\n    startDir - The path to the starting directory.\n    pty - Specifies whether to use pty (used by SSH, GlobalShell)\nValid values\: true, false\n    privateKeyFile - The path to the private key file, relative to ICONCLUDE_HOME on the RAS host (used by SSH, GlobalShell).\n    sasHost - The host on which to run the ROSH command.\n    sasHostUsername - The user name used to run the ROSH command on <sasHost>.\n    usernamePrompt - The prompt message for the user name. Used by the Telnet protocol. When used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'.\n    passwordPrompt - The prompt message for the password associated with the < usernamePrompt > input. Used by the Telnet protocol.  When used by the 'NASConnectTelnet' protocol, the default value is 'Password\:'\n    outputPath - The network accessible path where to store the temporary files. If you do not specify this input, it points to '\\\\host\\admin$\\temp\\'. If this path is not accessible, change it to use another share to which the host local system account has write access. By default, the path needs to be changed on Windows 2000 systems.\n    nasDevice - The NAS device on which to run the command when using the 'NASConnect' protocol.\n    nasDeviceConsoleMode - The NAS device console mode used to run the command scripts running the command on the specified NAS device. If you leave this input empty, command scripts are not used, and the connections to the NAS device and the command are issued directly in the console. This is not recommended. Due to error handling capabilities limitation, the result might be a success even if the command failed to run. You can find the values for this input in the NAS web interface, as a drop-down list when creating a new command script (for example, Cisco IOS enable).\n    hpomNode - The node on which to run the command.\n    hpomProtocol - The protocol used to communicate with HPOM (HTTP or HTTPS).\n    characterSet - The name of the character set used for stream encoding and decoding between the RAS and target machine.\nDefault value\: UTF-8 (used by SSH, GlobalShell, Telnet, RSH, REXEC)\nExamples\: SJIS,EUC-JP, UTF-8\n\nResults\:\n    returnResult - This is the primary output. Used to determine the operation response, specifying whether the operation is successful or not.\n    stdOut - The standard output (STDOUT) of the command.\n    stdErr - The standard error (STDERR) of the command.\n\nResponses\:\n    success - The operation completed as stated in the description.\n    failure - The operation completed unsuccessfully.\n\nNotes\:\nTelnet protocol - Since telnet is shell protocol, not a remote execution protocol, the response is always  successful if the command is ran in the remote shell.  The return code of the specified command cannot be determined in this protocol.  If you must use the telnet protocol with this operation, make sure to check the command results. Consider using the SSH or REXEC protocol instead.\n</pre>
2f85f2b7-19a5-4f57-826e-45eb00fda64b.6206702d-c1e5-45d8-aafa-e7282ae17051.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
2f85f2b7-19a5-4f57-826e-45eb00fda64b.6637e3cf-385c-485e-b206-1d4f2d13452b.description=<pre>Reads a file.\n\nInput Parameters\:\nsource - the full path and filename of the file to be read\nfilter - the string to filter on (leave blank for no filter). If this filter\n   is found it will return all lines that matched the filter. If no match \n   is found, no line are returned.\niterate - (true,false) if set to false, only count is returned.  If set to \n   true, then each row will be returned for each subsequent call\ndelimiter - If set to null, the file is read line by line and each line \n   becomes the returnResult. Otherwise, the delimiter is inserted between each \n   line that is read and becomes the returnResult. (note, the entire file may \n   or may not still be fully read at once, depending on size).\neofReset - If set to true than after the No More response has been returned \n   once, the operation will restart reading the file from the beginning on the \n   next call.\ncharacterSet - characterSet of the file to read from. Valid values\: UTF-8, UTF-16 and UTF-32. For invalid or empty input value the default encoding UTF-8 will be used. \n\nResponses\:\nsuccess - read file (if iterate is true, more rows are available)\nno more items - no more items are available for retrieval\nfailure - failed to read file\n\nExtra Results\:\nCOUNT - number of lines that matched filter, or if no filter specified, then\nthe total lines read\n</pre>
2f85f2b7-19a5-4f57-826e-45eb00fda64b.6f109b14-cbd8-4656-8a5c-e01043701d63.description=<pre>Generates a random number.\n\nInputs\:\nmax - The maximum number that can be returned.\nmin - The minimum number that can be returned.\n\nResponses\:\nsuccess - The operation completed Successfully.\nfailure - Something went wrong.\n\nReturns\:\nA random number between max and min (inclusive)</pre>
2f85f2b7-19a5-4f57-826e-45eb00fda64b.855375bf-6526-4bb2-98fc-d351b0f0dd7e.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
2f85f2b7-19a5-4f57-826e-45eb00fda64b.86561de2-a632-488f-9825-71604f2493cf.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
2f85f2b7-19a5-4f57-826e-45eb00fda64b.a037bf28-15f4-4814-a919-b5ef1e3aa2c2.description=<pre>\nRuns a command, allowing you to specify whether it runs locally (no port to be specified), via SSH, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\n    host - The host name or IP address.\n    port - The port number used to connect to the host.\n    username - The user name used to connect.\n    password - The password associated with the <username> input. If using a private key file, this is the passphrase for the file.\n    protocol - The protocol used to run the command. \nExamples\: SSH, ROSH, GlobalShell, Telnet, RSH, REXEC, local, WMI, NASConnectTelnet, HPOM\n    timeout - The time to wait for the command to complete (in milliseconds). Increase this value if you are getting incomplete output results or a timeout.\nDefault value\: 90 seconds (converted to milliseconds)\n    command - The command to run.\n    arguments - The arguments to pass to the command.\n    environment - Specifies the environment variables and values that need to be defined when running the command.\n    startDir - The path to the starting directory.\n    pty - Specifies whether to use pty (used by SSH, GlobalShell)\nValid values\: true, false\n    privateKeyFile - The path to the private key file, relative to ICONCLUDE_HOME on the RAS host (used by SSH, GlobalShell).\n    sasHost - The host on which to run the ROSH command.\n    sasHostUsername - The user name used to run the ROSH command on <sasHost>.\n    usernamePrompt - The prompt message for the user name. Used by the Telnet protocol. When used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'.\n    passwordPrompt - The prompt message for the password associated with the < usernamePrompt > input. Used by the Telnet protocol.  When used by the 'NASConnectTelnet' protocol, the default value is 'Password\:'\n    outputPath - The network accessible path where to store the temporary files. If you do not specify this input, it points to '\\\\host\\admin$\\temp\\'. If this path is not accessible, change it to use another share to which the host local system account has write access. By default, the path needs to be changed on Windows 2000 systems.\n    nasDevice - The NAS device on which to run the command when using the 'NASConnect' protocol.\n    nasDeviceConsoleMode - The NAS device console mode used to run the command scripts running the command on the specified NAS device. If you leave this input empty, command scripts are not used, and the connections to the NAS device and the command are issued directly in the console. This is not recommended. Due to error handling capabilities limitation, the result might be a success even if the command failed to run. You can find the values for this input in the NAS web interface, as a drop-down list when creating a new command script (for example, Cisco IOS enable).\n    hpomNode - The node on which to run the command.\n    hpomProtocol - The protocol used to communicate with HPOM (HTTP or HTTPS).\n    characterSet - The name of the character set used for stream encoding and decoding between the RAS and target machine.\nDefault value\: UTF-8 (used by SSH, GlobalShell, Telnet, RSH, REXEC)\nExamples\: SJIS,EUC-JP, UTF-8\n\nResults\:\n    returnResult - This is the primary output. Used to determine the operation response, specifying whether the operation is successful or not.\n    stdOut - The standard output (STDOUT) of the command.\n    stdErr - The standard error (STDERR) of the command.\n\nResponses\:\n    success - The operation completed as stated in the description.\n    failure - The operation completed unsuccessfully.\n\nNotes\:\nTelnet protocol - Since telnet is shell protocol, not a remote execution protocol, the response is always  successful if the command is ran in the remote shell.  The return code of the specified command cannot be determined in this protocol.  If you must use the telnet protocol with this operation, make sure to check the command results. Consider using the SSH or REXEC protocol instead.\n</pre>
2f85f2b7-19a5-4f57-826e-45eb00fda64b.dcfb2985-e356-4b50-a339-e743b7079a94.description=<pre>\nRuns a command, allowing you to specify whether it runs locally (no port to be specified), via SSH, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\n    host - The host name or IP address.\n    port - The port number used to connect to the host.\n    username - The user name used to connect.\n    password - The password associated with the <username> input. If using a private key file, this is the passphrase for the file.\n    protocol - The protocol used to run the command. \nExamples\: SSH, ROSH, GlobalShell, Telnet, RSH, REXEC, local, WMI, NASConnectTelnet, HPOM\n    timeout - The time to wait for the command to complete (in milliseconds). Increase this value if you are getting incomplete output results or a timeout.\nDefault value\: 90 seconds (converted to milliseconds)\n    command - The command to run.\n    arguments - The arguments to pass to the command.\n    environment - Specifies the environment variables and values that need to be defined when running the command.\n    startDir - The path to the starting directory.\n    pty - Specifies whether to use pty (used by SSH, GlobalShell)\nValid values\: true, false\n    privateKeyFile - The path to the private key file, relative to ICONCLUDE_HOME on the RAS host (used by SSH, GlobalShell).\n    sasHost - The host on which to run the ROSH command.\n    sasHostUsername - The user name used to run the ROSH command on <sasHost>.\n    usernamePrompt - The prompt message for the user name. Used by the Telnet protocol. When used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'.\n    passwordPrompt - The prompt message for the password associated with the < usernamePrompt > input. Used by the Telnet protocol.  When used by the 'NASConnectTelnet' protocol, the default value is 'Password\:'\n    outputPath - The network accessible path where to store the temporary files. If you do not specify this input, it points to '\\\\host\\admin$\\temp\\'. If this path is not accessible, change it to use another share to which the host local system account has write access. By default, the path needs to be changed on Windows 2000 systems.\n    nasDevice - The NAS device on which to run the command when using the 'NASConnect' protocol.\n    nasDeviceConsoleMode - The NAS device console mode used to run the command scripts running the command on the specified NAS device. If you leave this input empty, command scripts are not used, and the connections to the NAS device and the command are issued directly in the console. This is not recommended. Due to error handling capabilities limitation, the result might be a success even if the command failed to run. You can find the values for this input in the NAS web interface, as a drop-down list when creating a new command script (for example, Cisco IOS enable).\n    hpomNode - The node on which to run the command.\n    hpomProtocol - The protocol used to communicate with HPOM (HTTP or HTTPS).\n    characterSet - The name of the character set used for stream encoding and decoding between the RAS and target machine.\nDefault value\: UTF-8 (used by SSH, GlobalShell, Telnet, RSH, REXEC)\nExamples\: SJIS,EUC-JP, UTF-8\n\nResults\:\n    returnResult - This is the primary output. Used to determine the operation response, specifying whether the operation is successful or not.\n    stdOut - The standard output (STDOUT) of the command.\n    stdErr - The standard error (STDERR) of the command.\n\nResponses\:\n    success - The operation completed as stated in the description.\n    failure - The operation completed unsuccessfully.\n\nNotes\:\nTelnet protocol - Since telnet is shell protocol, not a remote execution protocol, the response is always  successful if the command is ran in the remote shell.  The return code of the specified command cannot be determined in this protocol.  If you must use the telnet protocol with this operation, make sure to check the command results. Consider using the SSH or REXEC protocol instead.\n</pre>
2f9f61df-d55b-4b19-a1d3-f719b0a07215.description=generates a random password consisting og lowercase letters, uppercase letter and number\n\nInputs\:\npasswordLength - specifies length of the password to be generated\n\nOutputs\:\ngeneratedPassword - the generated password string
3132ab94-77cb-473f-895e-c80632c89a6c.description=The timeout for audits in milliseconds.
316de420-aa0f-4fac-8041-ef88c78d8bfe.0efea6f0-b330-49f2-8f5b-9e8136b97c6e.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\n    string1 - The first string. \nDefault value\: "" (empty)\n    string2 - The second string.\nDefault value\: "" (empty)\n    ignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nResponses\:\n    true - If the two strings are equal.\n    false - If the two strings are not equal.\n\n</pre>
316de420-aa0f-4fac-8041-ef88c78d8bfe.202e3038-9c13-4ebe-af5e-bc77f4520c03.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\n    string1 - The first string. \nDefault value\: "" (empty)\n    string2 - The second string.\nDefault value\: "" (empty)\n    ignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nResponses\:\n    true - If the two strings are equal.\n    false - If the two strings are not equal.\n\n</pre>
316de420-aa0f-4fac-8041-ef88c78d8bfe.29942f64-c3a9-4a6a-a20c-42bbd7fbc572.description=<pre>Retrieves details about an existing Network Interface Card (NIC) on a virtual machine.\n\nInputs\:\n    host - VMware vCenter, ESX or ESXi host hostname or IP.\n    user - VMware username.\n    password - VMware user's password.\n    port - Port to connect on.\nExamples\: 443, 80\n    protocol - Connection protocol.\nValid values\: "https", "http"\n    closeSession - Close the internally kept VMware Infrastructure API session at completion of operation.\nValid values\: "true", "false"\n    virtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\n    vmIdentifierType - Virtual machine identifier type \nValid values\: "inventorypath", "name", "ip", "hostname", "uuid", "vmid"\n    vmDatacenter - Virtual machine's datacenter.\n    deviceNumber - The NIC number to get details of on the VM.  As an example\: "Network Adapter 1" would have be deviceNumber "1".\nExamples\: If a VM as a network adapter named "Network Adapter 1" the deviceNumber would be "1".\n\nResponses\:\n    success - The operation completed successfully.\n    failure - Something went wrong. See returnResult for details.\n\nReturns\:\n    returnResult - Task result or operation result\n    connectAtPowerOn - The network adapter will automatically be connected to the network when the VM is powered on.  Possible values\: true, false.\n    connect - The network adapter is currently connected to the network.  Possible values\: true, false.\n    netPortGroup - The name of the port group the network adapter is attached to.  This can be either a legacy port group or a distributed virtual port group.\n    netMacAddr - The MAC address of the network adapter.  Example format\: "00\:50\:56\:94\:AB\:EF"\n    netMacGeneration - The MAC address assignment method configured for the network adapter.  Possible values\: assigned, generated, manual.\n    netWakeOnLan - Wake on Lan has been enabled for this network adapter.  Possible values\: true, false.\n    netNicType - The type of network adapter.  Possible values\: PCNet32, E1000, VmxNet, VmxNet2, VmxNet3.\n\nNotes\:\n1. Inventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
316de420-aa0f-4fac-8041-ef88c78d8bfe.3d23d5d0-17ea-42a5-aea9-b5dbfdd6cf9b.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\n    string1 - The first string. \nDefault value\: "" (empty)\n    string2 - The second string.\nDefault value\: "" (empty)\n    ignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nResponses\:\n    true - If the two strings are equal.\n    false - If the two strings are not equal.\n\n</pre>
316de420-aa0f-4fac-8041-ef88c78d8bfe.56ed9726-7e4c-4713-9635-4d3f747b5baa.description=<pre>Retrieves details about an existing Network Interface Card (NIC) on a virtual machine.\n\nInputs\:\n    host - VMware vCenter, ESX or ESXi host hostname or IP.\n    user - VMware username.\n    password - VMware user's password.\n    port - Port to connect on.\nExamples\: 443, 80\n    protocol - Connection protocol.\nValid values\: "https", "http"\n    closeSession - Close the internally kept VMware Infrastructure API session at completion of operation.\nValid values\: "true", "false"\n    virtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\n    vmIdentifierType - Virtual machine identifier type \nValid values\: "inventorypath", "name", "ip", "hostname", "uuid", "vmid"\n    vmDatacenter - Virtual machine's datacenter.\n    deviceNumber - The NIC number to get details of on the VM.  As an example\: "Network Adapter 1" would have be deviceNumber "1".\nExamples\: If a VM as a network adapter named "Network Adapter 1" the deviceNumber would be "1".\n\nResponses\:\n    success - The operation completed successfully.\n    failure - Something went wrong. See returnResult for details.\n\nReturns\:\n    returnResult - Task result or operation result\n    connectAtPowerOn - The network adapter will automatically be connected to the network when the VM is powered on.  Possible values\: true, false.\n    connect - The network adapter is currently connected to the network.  Possible values\: true, false.\n    netPortGroup - The name of the port group the network adapter is attached to.  This can be either a legacy port group or a distributed virtual port group.\n    netMacAddr - The MAC address of the network adapter.  Example format\: "00\:50\:56\:94\:AB\:EF"\n    netMacGeneration - The MAC address assignment method configured for the network adapter.  Possible values\: assigned, generated, manual.\n    netWakeOnLan - Wake on Lan has been enabled for this network adapter.  Possible values\: true, false.\n    netNicType - The type of network adapter.  Possible values\: PCNet32, E1000, VmxNet, VmxNet2, VmxNet3.\n\nNotes\:\n1. Inventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
316de420-aa0f-4fac-8041-ef88c78d8bfe.63d551f5-5cc6-462c-9b80-d0a755cd3bb0.description=<pre>Retrieve information about a virtual machine or a set of virtual machines in a datacenter or host system. Retrieve each object one at a time from an initial search query as the one used in the SQL Query operation.\n\nInputs\:\n    host - VMware vCenter, ESX or ESXi host hostname or IP.\n    user - VMware username.\n    password - VMware user's password.\n    port - Port to connect on.\nExamples\: 443, 80\n    protocol - Connection protocol.\nValid values\: "https", "http"\n    closeSession - Close the internally kept VMWare Infrastructure API session at completion of operation.\nValid values\: "true", "false"\n    vmDatacenter - Datacenter to get virtual machines from.\n    hostSystem - Host system to get virtual machines from.\n    vmIdentifierType - Virtual machine identifier type.  Required if virtualMachine input is used.\nValid values\: "inventorypath", "name", "ip", "hostname", "uuid", "vmid"\n    virtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\n    getDetailed - Retrieve detailed information?\nValid Values\: true, false\n\nResponses\:\n    success - The operation completed successfully.\n    failure - Something went wrong.  See returnResult for details.\n    no more - There are no more results to retrieve.\n\nReturns\:\n    returnResult - Virtual machine ID (vmid) or reason for failure.\n    vmInfo - Detailed virtual machine information when getDetailed is true.  Properties in this result are pipe delimited.\n    numberOfResults - Number of results from the query remaining to be retrieved.\n    name - Name of the virtual machine.\n    uuid - UUID of the virtual machine.\n    inventoryPath - Inventory path of the virtual machine.\n    dataStore - The name of the datastore where the vm configuration file (.vmx) is stored.\n    vmxPath - The path to the vm configuration file (.vmx) on dataStore.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
316de420-aa0f-4fac-8041-ef88c78d8bfe.d129229a-af16-4ed5-9ca8-2250b887e589.description=<pre>Retrieves details about an existing Network Interface Card (NIC) on a virtual machine.\n\nInputs\:\n    host - VMware vCenter, ESX or ESXi host hostname or IP.\n    user - VMware username.\n    password - VMware user's password.\n    port - Port to connect on.\nExamples\: 443, 80\n    protocol - Connection protocol.\nValid values\: "https", "http"\n    closeSession - Close the internally kept VMware Infrastructure API session at completion of operation.\nValid values\: "true", "false"\n    virtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\n    vmIdentifierType - Virtual machine identifier type \nValid values\: "inventorypath", "name", "ip", "hostname", "uuid", "vmid"\n    vmDatacenter - Virtual machine's datacenter.\n    deviceNumber - The NIC number to get details of on the VM.  As an example\: "Network Adapter 1" would have be deviceNumber "1".\nExamples\: If a VM as a network adapter named "Network Adapter 1" the deviceNumber would be "1".\n\nResponses\:\n    success - The operation completed successfully.\n    failure - Something went wrong. See returnResult for details.\n\nReturns\:\n    returnResult - Task result or operation result\n    connectAtPowerOn - The network adapter will automatically be connected to the network when the VM is powered on.  Possible values\: true, false.\n    connect - The network adapter is currently connected to the network.  Possible values\: true, false.\n    netPortGroup - The name of the port group the network adapter is attached to.  This can be either a legacy port group or a distributed virtual port group.\n    netMacAddr - The MAC address of the network adapter.  Example format\: "00\:50\:56\:94\:AB\:EF"\n    netMacGeneration - The MAC address assignment method configured for the network adapter.  Possible values\: assigned, generated, manual.\n    netWakeOnLan - Wake on Lan has been enabled for this network adapter.  Possible values\: true, false.\n    netNicType - The type of network adapter.  Possible values\: PCNet32, E1000, VmxNet, VmxNet2, VmxNet3.\n\nNotes\:\n1. Inventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
31f4c305-7501-448c-9e1a-181f305c347e.3f93fb12-5c0e-4739-959f-179ef80b7930.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
31f4c305-7501-448c-9e1a-181f305c347e.69652b81-741f-4426-a5dd-76580227287e.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
32f4f443-b382-487a-9793-4815314f3151.description=<pre>\nPower off and terminate a VM.\n\nInput Parameters\:\n VMID - the unique Identifier of the VM on a vCenter.\n hostname - hostname of the VM to terminate\n host -  vCenter host to execute against\n user - vCenter username\n password - vCenter password\n vmDatacenter -  target Datacenter on the vCenter host for the VM\n hostSystem - current ESX host for the VM\n\nResponses\:\n   success - if the command completes execution and its exit code is 0\n   failure - otherwise\n</pre>
32f4f443-b382-487a-9793-4815314f3151.f099ee30-f4be-48c2-b08f-005b736a6dce.description=<pre>\nPower off and terminate a VM.\n\nInput Parameters\:\n VMID - the unique Identifier of the VM on a vCenter.\n hostname - hostname of the VM to terminate\n host -  vCenter host to execute against\n user - vCenter username\n password - vCenter password\n vmDatacenter -  target Datacenter on the vCenter host for the VM\n hostSystem - current ESX host for the VM\n\nResponses\:\n   success - if the command completes execution and its exit code is 0\n   failure - otherwise\n</pre>
33a8979b-0dd4-442e-9208-41d84de54094.description=Defines the location where the CSA for Matrix logs will be created. The property can be set to another path as well, and must before any flows are executed. By default, the log files will be created under C\:/csa4m/logs. \n\nIf these log files must be created within the Insight Orchestration directory, then the path to Insight Orchestration must be prefixed to the value defined in the property.\n\nFor IO 6.3, the complete path is C\:/Program Files/HP/Insight orchestration/csa4m/logs \n\nFor IO 7.0, the complete path is C\:/Program Files/HP/Matrix infrastructure orchestration/csa4m/logs
33d6700c-417f-485f-b60f-27cc03182886.description=Maximum number of disks that can be in a subscription
3408a013-6dd9-484d-8183-4ba11427dc40.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
3692ebf9-cb8e-4351-89f1-4381252733a6.00d1524a-bdc1-4956-9c2a-29b51be81097.description=<pre>Invokes web service methods.  This operation should not be used directly\!  Please use the wizard to build flows that use this operation.\n\nInputs\:\nxmlTemplate - The template of the soap request to make.\ninputMap - A map used to map between template names and user-friendly names. The tamplate names are pipe-delimited xpaths of the xmltemplate location, with a numerical element for lists.\nurl - The url to post to. \nheader_SOAPAction - The SOAPAction http header field, defined by many web services for indicating the intent of the request\nwswAuthenticationType - The authentication type to use for the username and password input. http is default (Uses http authentication), other options are 'ws-security digest' and 'ws-security text' WARNING\: ws-security text transmits passwords in clear-text\nWSSecuritySignRequest - true or false, should the SOAP request be signed using WS-Security.\nWSSecurityEncryptRequest - true or false, should the entire SOAP request be signed using WS-Security\nWSSecurityTimestampRequest - true or false, should the Timestamp attribute be added to the WS-Security header\nWSSecurityKeystore - keystore to use for encrypting and signing requests.\nWSSecurityKeystoreType - The type of WSSecurityKeystore.\nWSSecurityKeystorePassword - The password for WSSecurityKeystore.\ncontentType - Value to be used in the Content-Type http header\nusername - The username to use for authenticating with the web service\npassword - The password to use for authenticating with the web service\ntrustAllRoots - Enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it. valid options are\: true/false.\nuseCookies - Enables cookie tracking. Cookies will be stored between consecutive calls. valid options are\: true/false.\ntimeout - a timeout after which the connection should be terminated, or 0 for no timeout.\nproxy - A proxy to use when accessing the web service.\nproxyPort - A port on the proxy to connect to.\nproxyUsername - A username to use when connecting to the proxy.\nproxyPassword - A password to use when connecting to the proxy.\nkeystore - the path to the keystore to use for SSL Client Certificates when using http authentication\nkeystorePassword - the password for the keystore when using http authentication\nICONCLUDE_WSW_VERSION - This value is used internally by the operation\n\nAny additional inputs that follow these are added by the Web Service Wizard, and they are specific to the particular web service method being called.\n\nResponses\:\nsuccess - SOAP request completed successfully.\nfailure - something went wrong.\n\nReturns\:\ndocument - raw XML response\ndocumentStripped - raw XML response stripped of namespaces for ease in parsing with XML XPath operations\n\nNotes\:\nIf you add new step-level inputs with the name header_<headername>, where <headername> is the name of an html header, then that html header will be set to the given value in the HTTP request.\n\n</pre>
36f24b28-e746-4018-b0e1-978d26ab1ec1.17e29777-03ee-4271-bd4f-accff40ecec7.description=Waits for the job to reach a specific state. If no state is specified, then this will wait for the job to reach an end state.\n\nInputs\:\ncoreHost - The DNS name or IP Address of your SAS core.\ncorePort - The port to Connect to your SAS core on.\ncoreProtocol - The protocol to connect to your SAS core with. Either HTTP or HTTPS.\ncoreUsername - The username for host.\ncorePassword - The password for host.\ncoreVersion - The version of SAS to use.\njobID - The id of the job.\nstatus - The status to wait for the job to reach. If none is specified this will wait until the job is no longer running.\ntimeout - The maximum number of milliseconds to wait for the job. If not specified, 1 hour is used.\n\nResponses\:\nfailure - Something went wrong.\nsuccess - The operation completed successfully.
36f24b28-e746-4018-b0e1-978d26ab1ec1.2bf742c8-ce07-4310-8bfb-d087f5d76663.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
36f24b28-e746-4018-b0e1-978d26ab1ec1.2d7c41f8-5da0-458a-8828-5c3f5d69ce8b.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
36f24b28-e746-4018-b0e1-978d26ab1ec1.2dd66b45-ec74-4ea9-98ac-bce3c1528bea.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
36f24b28-e746-4018-b0e1-978d26ab1ec1.32a04457-82fd-45a6-ab5f-4ba83fb8f580.description=Counts from one number to another number.\n\n<pre>\nInputs\:\ncount - number of loops to complete\nreset - If true, then the counter will restart counting from the beginning.\n\nReturns\:\nThe number that was just counted.\n\nResponses\:\nhas more - Not yet done counting.\nno more - Done counting. This will only be returned once, then counting restarts.\nfailure - Something went wrong.\n</pre>
36f24b28-e746-4018-b0e1-978d26ab1ec1.3417cf8d-a1ec-460b-8ca6-da225901ae1b.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
36f24b28-e746-4018-b0e1-978d26ab1ec1.3e0359ee-5ed1-4d24-99c3-db2017b4aee7.description=Use an apx command to deactivate a server from the Server Automation server (SAS). Internally this flow will use ssh for the protocol and  port 2222 for the connection.\n\nInputs\:\ncoreHost -  SAS core hostname or IP address\ncoreUsername -  SAS username to access the coreHost \ncorePassword -  SAS user's password to access the coreHost\nserverName -  name of the  managed server to be deactivated\n\nResponses\:\nsuccess -  operation completed successfully\nfailure - otherwise\n
36f24b28-e746-4018-b0e1-978d26ab1ec1.40076fa2-297f-407a-9a8f-054b53d9e7dc.description=Adds a custom attribute to a specific object (object can be of type\: SERVERS, DEVICE_GROUPS, SOFTWARE_POLICIES, CUSTOMERS).\n\nInputs\:\ncoreHost - The DNS name or IP Address of your SAS core.\ncorePort - The port to Connect to your SAS core on.\ncoreProtocol - The protocol to connect to your SAS core with. Either HTTP or HTTPS.\ncoreUsername - The username for host.\ncorePassword - The password for host.\ncoreVersion - The version of SAS to use.\nattachedToType - The type of the objectto which the Custom Attribute is attached to (must be one of [SERVERS, DEVICE_GROUPS, SOFTWARE_POLICIES, CUSTOMERS].\nattachedToName - The name of the object to which the Custom Attribute is attached to (e.g. name of server or device group, short name of customer etc).\nattachedToID - The id of the object to which the Custom Attribute is attached to (e.g. id of server or device group etc). Use this input for unique identification.\nname - The name of the attribute.\nvalue - The value of the attribute.\n\nResponses\:\nsuccess - retrieved successfully\nfailure - failed to retrieve data
36f24b28-e746-4018-b0e1-978d26ab1ec1.431d88ed-b28e-4522-a620-4cf302f1e26e.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
36f24b28-e746-4018-b0e1-978d26ab1ec1.48ddb70b-c553-40b0-a4c9-5fd0828174d7.description=<pre>Scan opened ports on give host  \n\nInputs\: \n host - IP address Host name to be scanned\n lowestPort - lowest port range\n highestPort - highest port range\n portType - the type of ports to be scanned (TCP or UDP). If not specified, the TCP ports are scanned.\n\nNote\:\n To scan specific port give same port as parameter for both Lowest Port and Highest Port, \n\nResponses\:\n success - the command was executed successfully\n failure - the command could not be executed\n\nResult\:\n finalResult - Information about the ports' statuses on a given machine.\n\nExtra results\:\n host - the IP of the host for which the ports are scanned\n ports - Number of ports scanned\n opened - Number of ports open\n closed - Number of ports closed\n dropped - Number of ports dropped\n</pre>\n
36f24b28-e746-4018-b0e1-978d26ab1ec1.4980a350-a6ff-4d4a-84c0-d134f5dad683.description=Sleeps for "X" seconds.\n\n<pre>\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason\n</pre>
36f24b28-e746-4018-b0e1-978d26ab1ec1.5048dc79-dd3f-432f-8fcc-c43086b196ea.description=Sleeps for "X" seconds.\n\n<pre>\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason\n</pre>
36f24b28-e746-4018-b0e1-978d26ab1ec1.5460882c-5018-4acc-8f05-1e19ba89f209.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
36f24b28-e746-4018-b0e1-978d26ab1ec1.57d75423-faf8-4146-82e0-da8d11185cd7.description=Use an apx command to deactivate a server from the Server Automation server (SAS). Internally this flow will use ssh for the protocol and  port 2222 for the connection.\n\nInputs\:\ncoreHost -  SAS core hostname or IP address\ncoreUsername -  SAS username to access the coreHost \ncorePassword -  SAS user's password to access the coreHost\nserverName -  name of the  managed server to be deactivated\n\nResponses\:\nsuccess -  operation completed successfully\nfailure - otherwise\n
36f24b28-e746-4018-b0e1-978d26ab1ec1.58c39805-9a6f-482a-b7c8-a9da54754429.description=Sleeps for "X" seconds.\n\n<pre>\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason\n</pre>
36f24b28-e746-4018-b0e1-978d26ab1ec1.5a2aa7e2-f8df-464f-adb5-9115d83a8dc3.prompt=Enter a value for attachableID
36f24b28-e746-4018-b0e1-978d26ab1ec1.5e445277-e61f-4b70-b3ae-4ed90b22b15f.prompt=Enter a value for timeout
36f24b28-e746-4018-b0e1-978d26ab1ec1.5f20c148-2de6-463c-bda0-eb8f07983446.callout=success & failure to next step. action is executed successfuly but we always get error back(when fw enabled) because during action we are loosing logged in credentials
36f24b28-e746-4018-b0e1-978d26ab1ec1.6e9f6b21-0034-430b-a280-7327802689fd.description=Sleeps for "X" seconds.\n\n<pre>\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason\n</pre>
36f24b28-e746-4018-b0e1-978d26ab1ec1.882c1022-f80e-4559-8643-d19c4805e5cc.description=Counts from one number to another number.\n\n<pre>\nInputs\:\ncount - number of loops to complete\nreset - If true, then the counter will restart counting from the beginning.\n\nReturns\:\nThe number that was just counted.\n\nResponses\:\nhas more - Not yet done counting.\nno more - Done counting. This will only be returned once, then counting restarts.\nfailure - Something went wrong.\n</pre>
36f24b28-e746-4018-b0e1-978d26ab1ec1.93639a80-b65c-4811-adcb-a924f908adf7.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
36f24b28-e746-4018-b0e1-978d26ab1ec1.b70b2c66-526a-4add-b46f-3c928394f5e8.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
36f24b28-e746-4018-b0e1-978d26ab1ec1.bcf8bf5e-fcab-4224-b8d5-0c1dcb49b632.description=Run communication test on the given SA server or device group. This operation is supported from SA version 9.1 (sas91).\n\nInputs\:\ncoreHost - The DNS name or IP Address of your SAS core.\ncorePort - The port to Connect to your SAS core on.\ncoreProtocol - The protocol to connect to your SAS core with. Either HTTP or HTTPS.\ncoreUsername - The username for host.\ncorePassword - The password for host.\ncoreVersion - The version of SAS to use.\nattachableName - The name of the server or device group.\nattachableID - The id of the server or device group.\nattachableType  -  The type of the attachable items. Can be one of the following values\: SERVER or DEVICE_GROUP.\ntimeout - Timeout in milliseconds, to wait for the job to finish. Default value is 0.\n\nResponses\:\nsuccess - retrieved successfully\nfailure - failed to retrieve data\n\nReturns\:\nreturnResult - The id of the job created.
36f24b28-e746-4018-b0e1-978d26ab1ec1.c892d997-9b22-429b-b609-08458b7f8e13.description=Retrieves the server(s) ServerVO properties\n\nInputs\:\ncoreHost - The DNS name or IP Address of your SAS core.\ncorePort - The port to Connect to your SAS core on.\ncoreProtocol - The protocol to connect to your SAS core with. Either HTTP or HTTPS.\ncoreUsername - The username for host.\ncorePassword - The password for host.\ncoreVersion - The version of SAS to use.\nagent - The agent name search string (can be a partial name and multiple return results can be returned; the matching type for this input can be selected by using the 'matching' flag). \nmatching - A flag that indicates if the search performed using the agent name should be based on a partial or exact match. The default value for this input is 'Begins With'.\nserverID - The ID of the searched server. This input should be used for unique identification. If provided, then the 'agent' input is ignored.\ndelimiter - The delimiter used to separate the result values. By default the values are comma delimited.\n\nResponses\:\nsuccess - retrieved successfully\nfailure - failed to retrieve data\n\nReturns\:\ncreatedBy - The name of the user who created this object.\ncreatedDate - The date that this object was created.\nid - The unique ID of this object.\ncreatedBy - The name of the user who created this object.\ncreatedDate - The date that this object was created.\ndirtyAttributes - A ; delimited list of attributes that are dirty (Modified and not yet fully propagated).\nmodifiedBy - The user who last modified this object.\nmodifiedDate - The date that this object was last modified on.\ndescription - The description of this object.\nhostname - The DNS hostname of this object.\nmodel - The model of this object.\nosVersion - The version of the OS running on the object.\nprimaryIP - The primary IP address of this object.\nserialNumber - This object's serial number.\nmanufacturer - The manufacturer of this object.\nname - The name of this object\nversion - The version of this object\ncodeset - The Code set of this object.\ncustomerName - The name of the customer this object was created for.\ndefaultGW - The default gateway used when accessing this object.\ndiscoveredDate - The date when this object was first discovered.\nfacilityName - The name of the facility housing this object.\nlocale - The locale this object is in.\nlockComment - The comment on this object's locked. NOTE\: object may not be locked.\nlockDate - The date this object was last locked.\nlockUser - The user who locked this object last.\nisLocked - A boolean value specifying whether or not this object is currently locked.\nloopbackIP - The loopback ip address used by this object.\nmanagementIP - The management ip address used by this object.\nmid - mid The server's management identifier.\nNetBIOSName - The full netBIOS (Windows networking) name for this object.\nlifecycle - The state in the Opsware lifecycle that this object is currently in.\norigin - The origin of the managed server. ASSIMILATED or PROVISIONED\nosFlavor - The flavor of the OS running on this object. For example\: Windows.\nosSPVersion - The service pack version of the OS running on the object.\npeerIP - The managed server's peer IP address.\nplatformName - The name of the platform.\npreviousSWRegDate -The last time the Opsware agent reported the installed software on the server.\nrealmName - The name of the realm this object is in.\nstage - The stage of the managed server.\nstate - The current state of the managed server\: OK, UNREACHABLE or MAINTENANCE\nuse - The intended use of the managed server (i.e. its role in a deployment)\: DEVELOPMENT, STAGING, PRODUCTION or UNKNOWN. \nvirtualizationType - The virtualization type.
36f24b28-e746-4018-b0e1-978d26ab1ec1.d07d4a9a-5430-46c5-91bb-e877e1863e6a.description=Counts from one number to another number.\n\n<pre>\nInputs\:\ncount - number of loops to complete\nreset - If true, then the counter will restart counting from the beginning.\n\nReturns\:\nThe number that was just counted.\n\nResponses\:\nhas more - Not yet done counting.\nno more - Done counting. This will only be returned once, then counting restarts.\nfailure - Something went wrong.\n</pre>
3702a3c2-9fd3-4ffd-8e61-ab95a7c2d4a0.11b93717-7b30-4249-ac52-491f3bd23a58.callout=We don't have more then one item
3702a3c2-9fd3-4ffd-8e61-ab95a7c2d4a0.ba062cd3-2152-49ff-98db-0ad8e94cdca4.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
37703b17-f6c5-4242-89cf-444a13eb9d15.37f6b16e-cf0c-4ec8-a54d-3d5341f7c53c.description=<pre>Checks to see if a path is an existing file or folder.\n\nInputs\:\nSource - The full path path to check. This can be either a local path such as c\:\\test.txt, or a unc path such as \\\\testhost\\test.txt. This path is relative to the Windows RAS host that the operation is running on.\nuser - Username to use for thread impersonation on the RAS host when reading.\npassword - Password for username.\n\nResponses\:\nfailure - The operation failed. The path does not exist.\nsuccess - The operation succeeded.\n</pre>\n
37703b17-f6c5-4242-89cf-444a13eb9d15.4e8bca34-d208-4d7a-b435-61fae1f427b8.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
37703b17-f6c5-4242-89cf-444a13eb9d15.6ea2c63f-ed98-4e18-83dd-80bd362b7da8.description=<pre>\nReads the file specified in the source input parameter.  If Store is true, then all matching lines are pushed into the Session and then subsequent calls to the operation results in the next line being returned.\n\nInputs\:\nsource - Path to the file to be read.\nfilter - Regular expression filter to be applied to each line (can be left blank for all).\nstore - Whether to store results in the session for retrieval. Valid values \: true,false\ndelimiter - If set to null, the file is read line by line, otherwise it is a delimiter placed between read lines (note, the entire file may or may not still be fully read at once, depending on size).\nuser - Username to use for thread impersonation on the RAS host when reading.\npassword - Password for the user.\neofReset - If set to true than after the No More response has been returned once, the operation will restart reading the file from the beginning on the next call.\ncharacterSet - The character encoding used to read the file (for instance, windows-1252). The default is UTF-8.\n\nResponses\:\nmore lines - More lines are available to be read in the session.\nno more lines - No lines are available for reading in the session.\nfailure - If something went wrong. \n\nResults\:\nreturnResult - One line read from the file. \nCOUNT - On the first pass, the total number of lines matched.  On subsequent runs, the number of lines remaining in the session. This result is only returned in line-by-line mode.\n</pre>
37703b17-f6c5-4242-89cf-444a13eb9d15.ac654fcd-3c84-4b49-a6bc-f9e0901dfa9d.prompt=FileName\:
37703b17-f6c5-4242-89cf-444a13eb9d15.c36e2c53-1718-4fc6-a41d-050c6f646b9f.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
37703b17-f6c5-4242-89cf-444a13eb9d15.cccfe67a-fa3a-442e-8c4f-8f858456a07e.description=<pre>Sends an smtp email\n \nInput Parameters\:\nhostname - hostname or ip address of smtp server\nport - port smtp service is listening\nfrom - from email address\nto - email address(s) or recipients\nsubject - email subject\nbody - body of the email\nhtmlEmail - true or false, whether the email should be sent supporting html rich email.\nreadReceipt - true or false, whether or not to request a read receipt\nattachments - comma separated list of files to attach (must be full path)\nusername - if SMTP authentication is needed, the username to send\npassword - the password to use\ncharacterSet - the character set encoding for the entire email which includes subject, body, attached file name and the attached file. Default value is UTF-8\ncontentTransferEncoding - the content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. Default value is - quoted-printable or Q Encoding.\n \n Responses\:\n success - successfully sent the email\n failure - failed to send the email\n\nNote\:\nFor special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n\tFor doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n</pre>
37703b17-f6c5-4242-89cf-444a13eb9d15.d2e36af5-321f-46d7-b3d2-f82064e92827.prompt=${htmlDocument}
37703b17-f6c5-4242-89cf-444a13eb9d15.description=Generic flow to send an e-mail
37703b17-f6c5-4242-89cf-444a13eb9d15.e52cf19e-8f7d-470d-a292-81e9962d2401.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults".\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
37703b17-f6c5-4242-89cf-444a13eb9d15.efbc2896-ff30-41ab-8c51-076ea8021514.description=<pre>Sends an smtp email\n \nInput Parameters\:\nhostname - hostname or ip address of smtp server\nport - port smtp service is listening\nfrom - from email address\nto - email address(s) or recipients\nsubject - email subject\nbody - body of the email\nhtmlEmail - true or false, whether the email should be sent supporting html rich email.\nreadReceipt - true or false, whether or not to request a read receipt\nattachments - comma separated list of files to attach (must be full path)\nusername - if SMTP authentication is needed, the username to send\npassword - the password to use\ncharacterSet - the character set encoding for the entire email which includes subject, body, attached file name and the attached file. Default value is UTF-8\ncontentTransferEncoding - the content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. Default value is - quoted-printable or Q Encoding.\n \n Responses\:\n success - successfully sent the email\n failure - failed to send the email\n\nNote\:\nFor special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n\tFor doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n</pre>
3aab9cf8-f540-406a-a150-1e9d8f20edda.00c3f9c6-b8ae-4f10-9e86-0971cbc00b15.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
3aab9cf8-f540-406a-a150-1e9d8f20edda.19498969-62fe-4cda-b393-83763ebd24d0.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
3aab9cf8-f540-406a-a150-1e9d8f20edda.67699a82-d830-4983-b652-1469fa44df59.description=<pre>\nRuns a SQL query against an Oracle database, using the information in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation. Subsequent calls with the same information return the other rows.\n\nInputs\:\n    TNSPath -The path to the folder of the TNS file tnsnames.ora. This path must be accessible by the OO RAS service. For example, if the RAS and the Oracle server are installed on the same Windows system, the TNSPath might look like \u201CC\:\\app\\Administrator\\product\\11.1.0\\db_1\\network\\admin\u201D. If the RAS and the Oracle server are on different Windows systems, you can copy the tnsnames.ora file  to the RAS system. The TNSPath might look like \u201CC\:\\Program Files\\Hewlett-Packard\\Operations Orchestration\\RAS\\Java\\Default\\webapp\\conf\u201D or \u201CC\:\\Temp\u201D depending on where you place the .ora file. \n    TNSEntry - The entry name in the tnsnames.ora file that contains the connection information. For example, the value for the TNSEntry input is \u201CTestEntry\u201D if the content in the tnsnames.ora file looks like the following\: \n\nTestEntry \=\n  (DESCRIPTION \=\n   (ADDRESS \= (PROTOCOL \= TCP)(HOST \= 16.110.111.111)(PORT \= 1521))\n   (CONNECT_DATA \=\n     (SERVER \= DEDICATED)\n     (SERVICE_NAME \= orcl)\n   )\n )\n\n    Username - The username to connect to the Oracle database. \n    Password - The password for the Username.\n    Command - The command to execute. \n    Delimiter \u2013 The delimiter to use between the columns in the returnResult result.\n    Key \u2013 The key to use to keep multiple query results distinct.\n    timeout - Seconds to wait before timing out the SQL command execution.\nDefault values\: 0 \n\nResults\:\n    returnResult - This is the primary output. Returned the data returned for each row separated by the value you specified in the Delimiter input (for example, \u201Ckey16|lst|16\u201D).\n    columnNames - The names of the columns returned, separated by the value you specified in the Delimiter input (for example, \u201CMYKEY|NAME|ID\u201D).\n    rowsLeft - The number of rows remaining that match the query. \n\nResponses\:\n    more items - More rows are available for retrieval.\n    no more items - No more rows are available.\n    failure - There was an error executing the command.\n\nNotes\:\n1. This operation only supports Oracle. \n2. This operation can only execute the "SELECT" statement. For statements that modify the database, use the TNS Names SQL Command operation.\n\n</pre>\n\n\n
3aab9cf8-f540-406a-a150-1e9d8f20edda.f736c8f3-87f3-42cd-be8a-0e1acce51149.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
3bcd62ee-f25a-4a1d-a472-dc2184b479fd.02008cc1-3e3f-4e76-a0d8-5c114e6cf234.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
3bcd62ee-f25a-4a1d-a472-dc2184b479fd.62855181-81d0-4035-a53a-a6d19d94f310.description=Generic flow to send an e-mail
3bcd62ee-f25a-4a1d-a472-dc2184b479fd.6291a47c-fd32-4594-8efc-d4bb823ea8d8.description=Generic flow to send an e-mail
3bcd62ee-f25a-4a1d-a472-dc2184b479fd.66ecb263-81e6-4386-86ec-33d4650edfb0.description=<pre>Retrieve information about a virtual machine's snapshot. If name of snapshot not specified, returns the snapshot tree.\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation (true, false).\nvirtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\nvmIdentifierType - Virtual machine identifier type (inventorypath, name, ip, hostname, uuid, vmid).\nsnapshotName - Name of snapshot\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n\nReturns\:\nreturnResult - Task completion return message\nsnapshotInfo - Snapshot information.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
3bcd62ee-f25a-4a1d-a472-dc2184b479fd.8aab9256-8999-426f-bbda-0fdf98f0e216.description=Revert a virtual machine to an existing named snapshot or the most current one if none specified.\n\nInputs\:\nhost - VMWare host hostname or IP\nuser - VMWare username\npassword - VMWare user's password\nport - Port to connect on\nprotocol - Connection protocol (http or https)\nasync - Asynchronously perform the task\ntaskTimeOut - Time to wait before the operation is considered to have failed (seconds)\nvirtualMachine - Primary Virtual Machine identifier. IP (IPv4 or IPv6 depending upon ESX version), hostname (full), inventorypath (Datacenter/vm/MyResourcePool/MyVM), UUID, or the VM id (vm-123,123)\nvmIdentifierType - Virtual machine identifier type\nsnapshotName - Name of snapshot\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n\nReturns\:\nreturnResult - Task ID or task completion return message
3bcd62ee-f25a-4a1d-a472-dc2184b479fd.ab9cda08-d47c-4e55-adc8-af07a1be97c9.description=Generic flow to send an e-mail
3bcd62ee-f25a-4a1d-a472-dc2184b479fd.dce8e381-4892-43ea-bc1e-80c5ff4323db.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
3bcd62ee-f25a-4a1d-a472-dc2184b479fd.fc5357e0-37ef-4d1c-88fe-48468aa2aa9b.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
3bef7cd1-b89d-4a27-96b2-bf09a84509f1.097db7d2-e998-45af-981f-edcf948bc6bc.description=Generic flow to send an e-mail
3bef7cd1-b89d-4a27-96b2-bf09a84509f1.1f6d736f-e5a0-42c0-bead-201272de0665.description=<pre>\nThe operation invokes web service methods.  This operation should not be used directly\!  Please use the wizard to build flows that use this operation.\n\nInputs\:\n    xmlTemplate - The template of the soap request to make.\n    inputMap - A map used to map between template names and user-friendly names. The template names are pipe-delimited xpaths of the xmltemplate location, with a numerical element for lists.\nValue format\: A list of elements separated by the new line delimiter. Eache element hes the format\: <name>\=<new name>.\nExample\: A line in the "inputMap" could be\: "Request|Details|0|Input|x\=input0.x"\n    url - The url to Post to. \n    header_SOAPAction - The SOAPAction http header field, defined by many web services for indicating the intent of the request\n    wswAuthenticationType - The authentication type to use for the "username" and "password" input.\nDefault value\: http\nValid values\: http, ntlm, ws-security digest, ws-security text\n    WSSecuritySignRequest - Should the SOAP request be signed using WS-Security.\nDefault value\: false\nValid values true, false\n    WSSecurityEncryptRequest - Should the entire SOAP request be signed using WS-Security.\nDefault value\: false\nValid values true, false\n    WSSecurityTimestampRequest - Should the Timestamp attribute be added to the WS-Security header\nDefault value\: false\nValid values true, false\n    WSSecurityKeystore - Keystore to use for encrypting and signing requests.\n    WSSecurityKeystoreType - The type of "WSSecurityKeystore".\n    WSSecurityKeystorePassword - The password for "WSSecurityKeystore".\n    contentType - Value to be used in the Content-Type HTTP header.\nDefault value\: text/xml\n    characterSet - The character set for HTTP Get request and response.\nDefault value\: UTF-8\n    username - The username to use for authenticating with the web service.\nValue format\: For NTLM authentication, the required format is domain\\user.\n    password - The password to use for authenticating with the web service.\n    trustAllRoots - Enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it.\nDefault value\: false\nValid values\: true, false\n    useCookies - Enables cookie tracking. Cookies will be stored between consecutive calls.\nDefault value\: false\nValid values\: true, false\n    usesJSON - Use JSON arrays for the SOAP Request for all Array types.\nDefault value\: false\nValid values\: true, false\n    timeout - a timeout after which the connection should be terminated or 0 for no timeout.\n    socketTimeout - The time to wait for data to be retrieved, in milliseconds. This input needs a value greater than or equal to zero. A "socketTimeout" value of '0' represents an infinite timeout.\nDefault value\: 0\n    proxy - A proxy to use when accessing the web service.\n    proxyPort - A port on the proxy to connect to.\n    proxyUsername - A username to use when connecting to the proxy.\n    proxyPassword - A password to use when connecting to the proxy.\n    keystore - The path to the keystore to use for SSL Client Certificates when using http authentication.\n    keystorePassword - The password for the keystore when using http authentication.\n    ICONCLUDE_WSW_VERSION - This value is used internally by the operation.\n    returnXMLRequest - If this input is set to true, a new output named "rawXMLRequest" is returned from the operation which contains the text of the SOAP request that will be sent. This can be very valuable in troubleshooting.\nDefault value\: false\nValid values\: true, false\n\nResults\:\n    returnCode - This is the primary output. It contains the value 0 if the operation successfully completes and the value -1 otherwise.\n    document - Raw XML response.\n    documentStripped - Raw XML response stripped of namespaces for ease in parsing with XML XPath operations.\n    jsonStripped - Raw XML response stripped of namespaces for ease in parsing with JSON operations, input usesJSON must be set to true for this to be populated.\n\nResponses\:\n    success - SOAP request completed successfully.\n    failure - Something went wrong.\n\nNotes\:\n1.If wswAuthenticationType\=ws-security text then this operation transmits passwords in clear-text.\n2.Any additional inputs that follow these are added by the Web Service Wizard, and they are specific to the particular web service method being called.\n3.If you add new step-level inputs with the name header_<headername>, where <headername> is the name of an html header, then that html header will be set to the given value in the HTTP request.\n4.This operation will not allow connection through secure transport layers below TLS 1.0.\n</pre>
3bef7cd1-b89d-4a27-96b2-bf09a84509f1.44181d38-ecab-44b9-ac14-2dd754c7786c.description=<pre>This operation checks whether a string matches another string, using a specific matching rule. The "toMatch" input is the string that is checked for matching the "matchTo" expression. \n\nInputs\:\n    matchType - The type of match to perform.\nValid values\: Exact Match, Contains, Contains Once, Does Not Contain, Match All Words, Match No Words, Regex\nDefault value\: Exact Match\n    toMatch - The string that is checked for matching.\n    matchTo - The string to match against.\nExample\: If "matchType" is \u201CRegEx\u201D, the "matchTo" input is a regular expression such as\: ^-?\\d+(([\\.,]\\d+)?)+$. \n    ignoreCase - Specifies whether to ignore case when matching or not.\nValid values\: False, True\nDefault value\: False\n\nResults\:\n    returnResult - This is the primary output. It contains the string "Matches" if the "toMatch" string matches the "matchTo" string. Otherwise, it contains the string "Does Not Match".  \n\nResponses\:\n    success - The operation completed as stated in the description.\n    failure - The operation completed unsuccessfully.\n</pre>
3bef7cd1-b89d-4a27-96b2-bf09a84509f1.4b6a7d16-465b-4929-8f28-87be97f006e2.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
3bef7cd1-b89d-4a27-96b2-bf09a84509f1.5118056a-48af-40ce-a59a-df62b4e0327b.description=<pre>This operation checks whether a string matches another string, using a specific matching rule. The "toMatch" input is the string that is checked for matching the "matchTo" expression. \n\nInputs\:\n    matchType - The type of match to perform.\nValid values\: Exact Match, Contains, Contains Once, Does Not Contain, Match All Words, Match No Words, Regex\nDefault value\: Exact Match\n    toMatch - The string that is checked for matching.\n    matchTo - The string to match against.\nExample\: If "matchType" is \u201CRegEx\u201D, the "matchTo" input is a regular expression such as\: ^-?\\d+(([\\.,]\\d+)?)+$. \n    ignoreCase - Specifies whether to ignore case when matching or not.\nValid values\: False, True\nDefault value\: False\n\nResults\:\n    returnResult - This is the primary output. It contains the string "Matches" if the "toMatch" string matches the "matchTo" string. Otherwise, it contains the string "Does Not Match".  \n\nResponses\:\n    success - The operation completed as stated in the description.\n    failure - The operation completed unsuccessfully.\n</pre>
3bef7cd1-b89d-4a27-96b2-bf09a84509f1.51cfab5a-1ea5-47e2-8a68-4f91198b716a.description=<pre>\nThe operation invokes web service methods.  This operation should not be used directly\!  Please use the wizard to build flows that use this operation.\n\nInputs\:\n    xmlTemplate - The template of the soap request to make.\n    inputMap - A map used to map between template names and user-friendly names. The template names are pipe-delimited xpaths of the xmltemplate location, with a numerical element for lists.\nValue format\: A list of elements separated by the new line delimiter. Eache element hes the format\: <name>\=<new name>.\nExample\: A line in the "inputMap" could be\: "Request|Details|0|Input|x\=input0.x"\n    url - The url to Post to. \n    header_SOAPAction - The SOAPAction http header field, defined by many web services for indicating the intent of the request\n    wswAuthenticationType - The authentication type to use for the "username" and "password" input.\nDefault value\: http\nValid values\: http, ntlm, ws-security digest, ws-security text\n    WSSecuritySignRequest - Should the SOAP request be signed using WS-Security.\nDefault value\: false\nValid values true, false\n    WSSecurityEncryptRequest - Should the entire SOAP request be signed using WS-Security.\nDefault value\: false\nValid values true, false\n    WSSecurityTimestampRequest - Should the Timestamp attribute be added to the WS-Security header\nDefault value\: false\nValid values true, false\n    WSSecurityKeystore - Keystore to use for encrypting and signing requests.\n    WSSecurityKeystoreType - The type of "WSSecurityKeystore".\n    WSSecurityKeystorePassword - The password for "WSSecurityKeystore".\n    contentType - Value to be used in the Content-Type HTTP header.\nDefault value\: text/xml\n    characterSet - The character set for HTTP Get request and response.\nDefault value\: UTF-8\n    username - The username to use for authenticating with the web service.\nValue format\: For NTLM authentication, the required format is domain\\user.\n    password - The password to use for authenticating with the web service.\n    trustAllRoots - Enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it.\nDefault value\: false\nValid values\: true, false\n    useCookies - Enables cookie tracking. Cookies will be stored between consecutive calls.\nDefault value\: false\nValid values\: true, false\n    usesJSON - Use JSON arrays for the SOAP Request for all Array types.\nDefault value\: false\nValid values\: true, false\n    timeout - a timeout after which the connection should be terminated or 0 for no timeout.\n    socketTimeout - The time to wait for data to be retrieved, in milliseconds. This input needs a value greater than or equal to zero. A "socketTimeout" value of '0' represents an infinite timeout.\nDefault value\: 0\n    proxy - A proxy to use when accessing the web service.\n    proxyPort - A port on the proxy to connect to.\n    proxyUsername - A username to use when connecting to the proxy.\n    proxyPassword - A password to use when connecting to the proxy.\n    keystore - The path to the keystore to use for SSL Client Certificates when using http authentication.\n    keystorePassword - The password for the keystore when using http authentication.\n    ICONCLUDE_WSW_VERSION - This value is used internally by the operation.\n    returnXMLRequest - If this input is set to true, a new output named "rawXMLRequest" is returned from the operation which contains the text of the SOAP request that will be sent. This can be very valuable in troubleshooting.\nDefault value\: false\nValid values\: true, false\n\nResults\:\n    returnCode - This is the primary output. It contains the value 0 if the operation successfully completes and the value -1 otherwise.\n    document - Raw XML response.\n    documentStripped - Raw XML response stripped of namespaces for ease in parsing with XML XPath operations.\n    jsonStripped - Raw XML response stripped of namespaces for ease in parsing with JSON operations, input usesJSON must be set to true for this to be populated.\n\nResponses\:\n    success - SOAP request completed successfully.\n    failure - Something went wrong.\n\nNotes\:\n1.If wswAuthenticationType\=ws-security text then this operation transmits passwords in clear-text.\n2.Any additional inputs that follow these are added by the Web Service Wizard, and they are specific to the particular web service method being called.\n3.If you add new step-level inputs with the name header_<headername>, where <headername> is the name of an html header, then that html header will be set to the given value in the HTTP request.\n4.This operation will not allow connection through secure transport layers below TLS 1.0.\n</pre>
3bef7cd1-b89d-4a27-96b2-bf09a84509f1.66822665-2daf-48a2-a983-59798139a156.description=Generic flow to send an e-mail
3bef7cd1-b89d-4a27-96b2-bf09a84509f1.70cb5a65-98a6-4cfd-afb7-d987495caec9.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\n    string1 - The first string. \nDefault value\: "" (empty)\n    string2 - The second string.\nDefault value\: "" (empty)\n    ignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nResponses\:\n    true - If the two strings are equal.\n    false - If the two strings are not equal.\n\n</pre>
3bef7cd1-b89d-4a27-96b2-bf09a84509f1.8046c5a5-395b-4eab-9c3f-0bfcf578c79f.callout=Call API to create data in ESL.\nThis sub flow is used by post_deploy process.
3bef7cd1-b89d-4a27-96b2-bf09a84509f1.823976f1-3398-4422-8fbe-ab4276a4fd0b.description=Generic flow to send an e-mail
3bef7cd1-b89d-4a27-96b2-bf09a84509f1.a7c76f71-6117-43e0-9211-ab7faad53b90.description=<pre>\nThe operation invokes web service methods.  This operation should not be used directly\!  Please use the wizard to build flows that use this operation.\n\nInputs\:\n    xmlTemplate - The template of the soap request to make.\n    inputMap - A map used to map between template names and user-friendly names. The template names are pipe-delimited xpaths of the xmltemplate location, with a numerical element for lists.\nValue format\: A list of elements separated by the new line delimiter. Eache element hes the format\: <name>\=<new name>.\nExample\: A line in the "inputMap" could be\: "Request|Details|0|Input|x\=input0.x"\n    url - The url to Post to. \n    header_SOAPAction - The SOAPAction http header field, defined by many web services for indicating the intent of the request\n    wswAuthenticationType - The authentication type to use for the "username" and "password" input.\nDefault value\: http\nValid values\: http, ntlm, ws-security digest, ws-security text\n    WSSecuritySignRequest - Should the SOAP request be signed using WS-Security.\nDefault value\: false\nValid values true, false\n    WSSecurityEncryptRequest - Should the entire SOAP request be signed using WS-Security.\nDefault value\: false\nValid values true, false\n    WSSecurityTimestampRequest - Should the Timestamp attribute be added to the WS-Security header\nDefault value\: false\nValid values true, false\n    WSSecurityKeystore - Keystore to use for encrypting and signing requests.\n    WSSecurityKeystoreType - The type of "WSSecurityKeystore".\n    WSSecurityKeystorePassword - The password for "WSSecurityKeystore".\n    contentType - Value to be used in the Content-Type HTTP header.\nDefault value\: text/xml\n    characterSet - The character set for HTTP Get request and response.\nDefault value\: UTF-8\n    username - The username to use for authenticating with the web service.\nValue format\: For NTLM authentication, the required format is domain\\user.\n    password - The password to use for authenticating with the web service.\n    trustAllRoots - Enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it.\nDefault value\: false\nValid values\: true, false\n    useCookies - Enables cookie tracking. Cookies will be stored between consecutive calls.\nDefault value\: false\nValid values\: true, false\n    usesJSON - Use JSON arrays for the SOAP Request for all Array types.\nDefault value\: false\nValid values\: true, false\n    timeout - a timeout after which the connection should be terminated or 0 for no timeout.\n    socketTimeout - The time to wait for data to be retrieved, in milliseconds. This input needs a value greater than or equal to zero. A "socketTimeout" value of '0' represents an infinite timeout.\nDefault value\: 0\n    proxy - A proxy to use when accessing the web service.\n    proxyPort - A port on the proxy to connect to.\n    proxyUsername - A username to use when connecting to the proxy.\n    proxyPassword - A password to use when connecting to the proxy.\n    keystore - The path to the keystore to use for SSL Client Certificates when using http authentication.\n    keystorePassword - The password for the keystore when using http authentication.\n    ICONCLUDE_WSW_VERSION - This value is used internally by the operation.\n    returnXMLRequest - If this input is set to true, a new output named "rawXMLRequest" is returned from the operation which contains the text of the SOAP request that will be sent. This can be very valuable in troubleshooting.\nDefault value\: false\nValid values\: true, false\n\nResults\:\n    returnCode - This is the primary output. It contains the value 0 if the operation successfully completes and the value -1 otherwise.\n    document - Raw XML response.\n    documentStripped - Raw XML response stripped of namespaces for ease in parsing with XML XPath operations.\n    jsonStripped - Raw XML response stripped of namespaces for ease in parsing with JSON operations, input usesJSON must be set to true for this to be populated.\n\nResponses\:\n    success - SOAP request completed successfully.\n    failure - Something went wrong.\n\nNotes\:\n1.If wswAuthenticationType\=ws-security text then this operation transmits passwords in clear-text.\n2.Any additional inputs that follow these are added by the Web Service Wizard, and they are specific to the particular web service method being called.\n3.If you add new step-level inputs with the name header_<headername>, where <headername> is the name of an html header, then that html header will be set to the given value in the HTTP request.\n4.This operation will not allow connection through secure transport layers below TLS 1.0.\n</pre>
3bef7cd1-b89d-4a27-96b2-bf09a84509f1.fbf73b0e-776e-4348-8b51-4deb1bd690b4.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\n    string1 - The first string. \nDefault value\: "" (empty)\n    string2 - The second string.\nDefault value\: "" (empty)\n    ignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nResponses\:\n    true - If the two strings are equal.\n    false - If the two strings are not equal.\n\n</pre>
3c0db43a-9364-4e9c-a1fc-ff12de19c9c5.a3926cc5-e4c2-4d55-abfe-03518f941c0f.description=Retrieves the server(s) ServerVO properties\n\nInputs\:\ncoreHost - The DNS name or IP Address of your SAS core.\ncorePort - The port to Connect to your SAS core on.\ncoreProtocol - The protocol to connect to your SAS core with. Either HTTP or HTTPS.\ncoreUsername - The username for host.\ncorePassword - The password for host.\ncoreVersion - The version of SAS to use.\nagent - The agent name search string (can be a partial name and multiple return results can be returned; the matching type for this input can be selected by using the 'matching' flag). \nmatching - A flag that indicates if the search performed using the agent name should be based on a partial or exact match. The default value for this input is 'Begins With'.\nserverID - The ID of the searched server. This input should be used for unique identification. If provided, then the 'agent' input is ignored.\ndelimiter - The delimiter used to separate the result values. By default the values are comma delimited.\n\nResponses\:\nsuccess - retrieved successfully\nfailure - failed to retrieve data\n\nReturns\:\ncreatedBy - The name of the user who created this object.\ncreatedDate - The date that this object was created.\nid - The unique ID of this object.\ncreatedBy - The name of the user who created this object.\ncreatedDate - The date that this object was created.\ndirtyAttributes - A ; delimited list of attributes that are dirty (Modified and not yet fully propagated).\nmodifiedBy - The user who last modified this object.\nmodifiedDate - The date that this object was last modified on.\ndescription - The description of this object.\nhostname - The DNS hostname of this object.\nmodel - The model of this object.\nosVersion - The version of the OS running on the object.\nprimaryIP - The primary IP address of this object.\nserialNumber - This object's serial number.\nmanufacturer - The manufacturer of this object.\nname - The name of this object\nversion - The version of this object\ncodeset - The Code set of this object.\ncustomerName - The name of the customer this object was created for.\ndefaultGW - The default gateway used when accessing this object.\ndiscoveredDate - The date when this object was first discovered.\nfacilityName - The name of the facility housing this object.\nlocale - The locale this object is in.\nlockComment - The comment on this object's locked. NOTE\: object may not be locked.\nlockDate - The date this object was last locked.\nlockUser - The user who locked this object last.\nisLocked - A boolean value specifying whether or not this object is currently locked.\nloopbackIP - The loopback ip address used by this object.\nmanagementIP - The management ip address used by this object.\nmid - mid The server's management identifier.\nNetBIOSName - The full netBIOS (Windows networking) name for this object.\nlifecycle - The state in the Opsware lifecycle that this object is currently in.\norigin - The origin of the managed server. ASSIMILATED or PROVISIONED\nosFlavor - The flavor of the OS running on this object. For example\: Windows.\nosSPVersion - The service pack version of the OS running on the object.\npeerIP - The managed server's peer IP address.\nplatformName - The name of the platform.\npreviousSWRegDate -The last time the Opsware agent reported the installed software on the server.\nrealmName - The name of the realm this object is in.\nstage - The stage of the managed server.\nstate - The current state of the managed server\: OK, UNREACHABLE or MAINTENANCE\nuse - The intended use of the managed server (i.e. its role in a deployment)\: DEVELOPMENT, STAGING, PRODUCTION or UNKNOWN. \nvirtualizationType - The virtualization type.
3c0db43a-9364-4e9c-a1fc-ff12de19c9c5.a4c8e59c-110e-4faa-a767-127e5c08d986.description=Sleeps for "X" seconds.\n\n<pre>\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason\n</pre>
3c0db43a-9364-4e9c-a1fc-ff12de19c9c5.c0696c01-934a-4449-9a44-007af61dcbf2.description=<pre>Runs a command and allows user to specify that it runs locally (in this case no port should be specified), via ssh, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\nhost - Hostname or ip address.\nport - Port number for connecting to the host.\nusername - Username to connect as.\npassword - Password of the user.\nprotocol - The protocol used to run the command (can be one of ssh, ROSH, GlobalShell, Telnet, RSH, local, WMI, NASConnectTelnet, or HPOM).\ntimeout - (optional, default 90 seconds) time in milliseconds to wait for the command to complete; increase its value if you are getting incomplete output results or timeout.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\nenvironment - Specifies environment variables/values that need to be defined when running command.\nstartDir - The path to the starting directory.\npty - Whether to use pty (used by ssh, GlobalShell. Valid values\: true, false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on RAS host.\nsasHost - The host we want to run the ROSH command on.\nsasHostUsername - The username used to run the ROSH command on sasHost.\nusernamePrompt - The prompt that when seen should send the username; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'\npasswordPrompt - The prompt that when given should send the password; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'Password\:'\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default, the path will have to be  changed on Windows 2000 systems\nnasDevice - The NAS device to run the command on when using the NASConnect protocol.\nnasDeviceConsoleMode - The NAS device console mode used to run the command scripts that run the command on the given NAS device. If this input is empty, command scripts are not used, and the connection to the NAS device and the command are issued directly in the console; this is not recommended, since its error handling capabilities are limited and it might result in success even when the command fails to execute. The values for this input can be found in the NAS web interface, as a drop-down list when a new command script is created (ex. Cisco IOS enable).\nhpomNode - Node on which the command is to be executed.\nhpomProtocol - Protocol to communicate with HPOM (http or https).\ncharacterSet - The characterSet name for stream encoding and decoding between the RAS and target machine. For example, SJIS,EUC-JP, UTF-8.  By default it is UTF-8 (used by ssh, GlobalShell, Telnet, RSH).\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nstdErr - The STDERR of the command.\nstdOut - The STDOUT of the command.\n</pre>
3c0db43a-9364-4e9c-a1fc-ff12de19c9c5.d21ae277-9480-4050-b20a-1319ecb31bd0.description=<pre>Runs a command and allows user to specify that it runs locally (in this case no port should be specified), via ssh, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\nhost - Hostname or ip address.\nport - Port number for connecting to the host.\nusername - Username to connect as.\npassword - Password of the user.\nprotocol - The protocol used to run the command (can be one of ssh, ROSH, GlobalShell, Telnet, RSH, local, WMI, NASConnectTelnet, or HPOM).\ntimeout - (optional, default 90 seconds) time in milliseconds to wait for the command to complete; increase its value if you are getting incomplete output results or timeout.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\nenvironment - Specifies environment variables/values that need to be defined when running command.\nstartDir - The path to the starting directory.\npty - Whether to use pty (used by ssh, GlobalShell. Valid values\: true, false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on RAS host.\nsasHost - The host we want to run the ROSH command on.\nsasHostUsername - The username used to run the ROSH command on sasHost.\nusernamePrompt - The prompt that when seen should send the username; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'\npasswordPrompt - The prompt that when given should send the password; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'Password\:'\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default, the path will have to be  changed on Windows 2000 systems\nnasDevice - The NAS device to run the command on when using the NASConnect protocol.\nnasDeviceConsoleMode - The NAS device console mode used to run the command scripts that run the command on the given NAS device. If this input is empty, command scripts are not used, and the connection to the NAS device and the command are issued directly in the console; this is not recommended, since its error handling capabilities are limited and it might result in success even when the command fails to execute. The values for this input can be found in the NAS web interface, as a drop-down list when a new command script is created (ex. Cisco IOS enable).\nhpomNode - Node on which the command is to be executed.\nhpomProtocol - Protocol to communicate with HPOM (http or https).\ncharacterSet - The characterSet name for stream encoding and decoding between the RAS and target machine. For example, SJIS,EUC-JP, UTF-8.  By default it is UTF-8 (used by ssh, GlobalShell, Telnet, RSH).\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nstdErr - The STDERR of the command.\nstdOut - The STDOUT of the command.\n</pre>
3c0db43a-9364-4e9c-a1fc-ff12de19c9c5.dbc5fc04-09a5-491a-b669-6620384bf3e5.description=<pre>This operation checks whether a string matches another string, using a specific matching rule. The "toMatch" input is the string that is checked for matching the "matchTo" expression. \n\nInputs\:\n    matchType - The type of match to perform.\nValid values\: Exact Match, Contains, Contains Once, Does Not Contain, Match All Words, Match No Words, Regex\nDefault value\: Exact Match\n    toMatch - The string that is checked for matching.\n    matchTo - The string to match against.\nExample\: If "matchType" is \u201CRegEx\u201D, the "matchTo" input is a regular expression such as\: ^-?\\d+(([\\.,]\\d+)?)+$. \n    ignoreCase - Specifies whether to ignore case when matching or not.\nValid values\: False, True\nDefault value\: False\n\nResults\:\n    returnResult - This is the primary output. It contains the string "Matches" if the "toMatch" string matches the "matchTo" string. Otherwise, it contains the string "Does Not Match".  \n\nResponses\:\n    success - The operation completed as stated in the description.\n    failure - The operation completed unsuccessfully.\n</pre>
3c0db43a-9364-4e9c-a1fc-ff12de19c9c5.ff59c644-42f4-4dbe-b58a-7dbfcb45c7b8.description=Counts from one number to another number.\n\n<pre>\nInputs\:\ncount - number of loops to complete\nreset - If true, then the counter will restart counting from the beginning.\n\nReturns\:\nThe number that was just counted.\n\nResponses\:\nhas more - Not yet done counting.\nno more - Done counting. This will only be returned once, then counting restarts.\nfailure - Something went wrong.\n</pre>
3c249845-fc57-4603-b023-52f36efd6e86.25ea3ab9-e4c0-47ac-8d15-2245d3db8229.description=<pre>Adds a flow variable into the local context (available to itself and child flows only)\n\nInput Parameters\:\nkeyName - the name of the flow variable to use\nmyValue - the value to assign the flow variable\n\nResponses\:\nsuccess - assigned the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, $myValue];</pre>
3c249845-fc57-4603-b023-52f36efd6e86.437f2ad5-5572-4cf5-8e33-c0c37d0af3cc.description=Runs Service Center Virtual Machine Manager (SCVMM) Cmdlets using Windows PowerShell. The complete syntax and descriptions of all cmdlets that can be used with this operation can be found at http\://www.microsoft.com/download/en/details.aspx?displaylang\=en&id\=20419. The operation creates a remote powershell session to the target host, loads the "Microsoft.SystemCenter.VirtualMachineManager" snap-in and executes the given command(s). \n\nInputs\:\n    host - The hostname or ip address of the SCVMM server.\n    username - The username to use when connecting to the server.\nValue format\: username@domain or domain\\username.\n    password - The password to use when connecting to the server.\n    authType - Specifies the mechanism that is used to authenticate the user's credentials. \nValid values\: Default, Negotiate, Credssp, Kerberos. (case-insensitive)\nDefault value\: Default.\n    commands - The PowerShell cmdlets to execute. For more that one command, you should write each one on a separate row and they will be executed sequentially. \nExample\: get-vmmserver -computerName "1.2.3.4"\n                get-virtualharddisk -all\n    delimiter - The delimiter used to separate each property name from the property value in the output table. \nDefault value\: "\:".\n    colDelimiter - The delimiter used to separate columns in the output table.\nDefault value\: ','\n    rowDelimiter - The delimiter used to separate rows in the output table. \nDefault value\: newline\n    version - The SCVMM Server version.\nDefault value\: 2008 R2\n\nResults\:\n    outputString - A string representation of the results returned by the operation. Essentially any command returns a PowerShell object which has properties, as you can observe from the returnResult. OutputString result converts each object to string and merges all the values into one string. If you want outputString to contain results similar to PowerShell console you should pipe Out-String at the end of the cmdlet  (e.g. Get-VirtualHardDisk -al l Format-List Location, Directory, Name, ID, HostName | Out-String). Doing this will determine returnResult to be something like Length\:xx, because the object is now of type String and Lenth is the only property of this type. This result can be useful in other situations where the PowerShell objects override ToString() method. Therefore, the outputString obtained running PowerShell command Get-Process (without Out-String pipe), will contain the names of the processes running on server.\n    returnResult - A table containing a row for each PSObject that the cmdlets emit. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format.\n    warnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\n\nResponses\:\nsuccess \t- The cmdlets were executed successfully.\nfailure \t- The cmdlets could not be executed.\n\nNotes\:\n1. Installation of Powershell 2.0 with winrm 2.0 on your client is required. The kit can be downloaded from here\: http\://support.microsoft.com/kb/968930.\n2. Before using this operation, please make sure you have enabled PowerShell remoting, by using the Enable-PSRemoting cmdlet.\n3. Windows Remote Management service must be running.\n4. In workgroup environments, enabling classic mode authentication for network logons may be needed. This can be performed by opening the "Local Security Policy" from Control Panel and selecting "Administrative Tools". Navigate to "Local Policies" -> "Security Options", double click on "Network Access\: Sharing and Security Model for local accounts" and set it to classic.\n5. Also, please modify the WSMan trusted hosts setting, by adding the IP addresses of all remoting clients to the list of trusted hosts. This can be done using one of the following commands\:\n        5.1. Set-item wsman\:localhost\\client\\trustedhosts -value * (adds all computers as trusted hosts)\n        5.2. Set-item wsman\:localhost\\client\\trustedhosts -value Computer (only adds Computer to the trusted hosts)\n        5.3. Set-item wsman\:localhost\\client\\trustedhosts -value *.domain.com (adds all computers in the specified domain)\n        5.4. Set-item wsman\:localhost\\client\\trustedhosts -value 10.10.10.1 (adds the remote computer with the IP address 10.10.10.1 to the trusted hosts list)\n6. Please read the folder's description for information on how to enable CredSSP authentication.\n</pre>
3c249845-fc57-4603-b023-52f36efd6e86.bcfe9238-61e3-44d1-b073-83be65de86e9.prompt=Input command(s)\:
3c9b3a64-5f4e-481f-8b34-6b81376c5a38.08d88ab8-449e-47f9-8861-ab58f15f34fa.description=<pre>Iterates through a list of values. If the list changes while running, the updates will be appended to the list.\n\nInputs\:\nseparator - The list separator (or delimiter).\nlist - The list to be split\n\nResponses\:\nhas more - Another value was in the list, and has been returned.\nfailure - failed to process the list.\nno more - The iterator has gone fully through the list. This response will only be returned once per iteration through the list, a subsequent call to the Iterator will restart the Iteration through the list.\n\nReturns\:\nThe current element of the list, if the response is has more</pre>
3caa53ad-ad5b-4195-8294-dbef95dac4ac.description=Operations Manager for Linux Server for monitoring
3cff8088-0c2c-4798-a04e-026e338050b5.description=attributes which will be used in ESL_CreateCI
3f8122c7-dd4d-4aac-997d-9a1ef3603789.0343aa40-2ad5-44fe-aeed-fced676b1744.description=<pre>Runs a command and allows user to specify that it runs locally (in this case no port should be specified), via ssh, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\nhost - Hostname or ip address.\nport - Port number for connecting to the host.\nusername - Username to connect as.\npassword - Password of the user. If using a private key file this will be used as the passphrase for the file.\nprotocol - The protocol used to run the command (can be one of ssh, ROSH, GlobalShell, Telnet, RSH, REXEC, local, WMI, NASConnectTelnet, or HPOM).\ntimeout - (optional, default 90 seconds) time in milliseconds to wait for the command to complete; increase its value if you are getting incomplete output results or timeout.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\nenvironment - Specifies environment variables/values that need to be defined when running command.\nstartDir - The path to the starting directory.\npty - Whether to use pty (used by ssh, GlobalShell. Valid values\: true, false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on RAS host (used by ssh, GlobalShell).\nsasHost - The host we want to run the ROSH command on.\nsasHostUsername - The username used to run the ROSH command on sasHost.\nusernamePrompt - The prompt that when seen should send the username; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'\npasswordPrompt - The prompt that when given should send the password; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'Password\:'\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default, the path will have to be  changed on Windows 2000 systems\nnasDevice - The NAS device to run the command on when using the NASConnect protocol.\nnasDeviceConsoleMode - The NAS device console mode used to run the command scripts that run the command on the given NAS device. If this input is empty, command scripts are not used, and the connection to the NAS device and the command are issued directly in the console; this is not recommended, since its error handling capabilities are limited and it might result in success even when the command fails to execute. The values for this input can be found in the NAS web interface, as a drop-down list when a new command script is created (ex. Cisco IOS enable).\nhpomNode - Node on which the command is to be executed.\nhpomProtocol - Protocol to communicate with HPOM (http or https).\ncharacterSet - The characterSet name for stream encoding and decoding between the RAS and target machine. For example, SJIS,EUC-JP, UTF-8.  By default it is UTF-8 (used by ssh, GlobalShell, Telnet, RSH, REXEC).\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nstdErr - The STDERR of the command.\nstdOut - The STDOUT of the command.\n\nNotes\:\nTelnet protocol - Since telnet is not a remote execution protocol but a shell protocol the response will always be successful if the command was executed in the remote shell.  The return code of the specified command cannot be determined in this protocol.  If you must use the telnet protocol with this operation besure to check the command results. Consider using ssh or rexec protocol instead.\n</pre>
3f8122c7-dd4d-4aac-997d-9a1ef3603789.0dc7d22e-a698-4f48-bdfa-3aaee9d7e566.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
3f8122c7-dd4d-4aac-997d-9a1ef3603789.2daabe23-3cc0-4bba-bf1d-c8d033442250.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
3f8122c7-dd4d-4aac-997d-9a1ef3603789.45bafbeb-8d40-4fc8-bbdc-4cb302a23211.description=<pre>Search for VMWare objects of type propsType and their properties (propsPathset) from a root object (if any) specified by propsRootObjType and propsRootObj. Retrieves each object's properties one at a time from an initial search query as the one used for the SQL Query operation. Please see VMWare Integration Guide for more details.\n\nInputs\:\n    host - VMWare host hostname or IP.\n    user - VMWare username.\n    password - VMWare user's password.\n    port - Port to connect on.\n    protocol - Connection protocol.\nValid values\: "https", "http"\n    closeSession - Close the internally kept VMware Infrastructure API session at completion of operation.\nValid values\: "true", "false"\n    propsType - VMWare properties type to filter on.\nExample\: Task, Datacenter, VirtualMachine, Network.\n    propsPathset - Comma-delimited list of property filters pathsets\nExample\: name, info.name, runtime.host, config.hardware.memoryMB.\n    propsRootObjType - The type of the Managed Object Reference (such as VirtualMachine, HostSystem, ComputeResource, ResourcePool, Alarm, Datacenter, Datastore) to begin the search on. Leaving this blank will default the root object to the root   folder of the ESX or VC host. \n    propsRootObj - The value of the reference (such as vm-123, datastore-123, network-123) used as a root object. Leaving this blank will default the root object to be the root folder of the ESX or VC host. \n\nResponses\:\n    success - The operation completed successfully.\n    failure - Something went wrong. See returnResult for details.\n    no more - There are no more results to retrieve.\n\nReturns\:\n    numberOfResults - Number of results from the query remaining to be retrieved.\n    returnResult - Query result item or reason for failure.</pre>
3f8122c7-dd4d-4aac-997d-9a1ef3603789.482b83f9-de4d-4b7d-9a16-51d7dec1cfbd.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
3f8122c7-dd4d-4aac-997d-9a1ef3603789.49b23403-edcb-444f-889e-c5ca54cc0762.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
3f8122c7-dd4d-4aac-997d-9a1ef3603789.542162ca-0465-4e76-a52d-6ddb5bbab286.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
3f8122c7-dd4d-4aac-997d-9a1ef3603789.5585a63f-8d3c-4a14-a4d3-1f550fe5c93c.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
3f8122c7-dd4d-4aac-997d-9a1ef3603789.5b50da59-20a5-4567-8deb-004a665b586c.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
3f8122c7-dd4d-4aac-997d-9a1ef3603789.5dcb22d0-4b17-46c7-bf60-88d163a0c85c.description=<pre> Calls "Get Virtual Machine" to get details about the virtual machines from the Virtual Machine Manager database, and then filter the result to get the VMId (or UUID) of the virtual machine\n\nInputs\:\n    \n    vmName - The name of the virtual machine. It is ${server.hostname}_${server.hostname}\n\n\nResults\:\n    vmUUID - The UUID string of the virtual machine \n   \nResponses\:\n    Failure - Could not retrieve the list of virtual machines or failed to extract the UUID.\n    Success - The operation executed with success and the result contains the UUID. \n\n</pre>
3f8122c7-dd4d-4aac-997d-9a1ef3603789.6ab1bcc8-fee7-4a6a-93bb-003d58fcabb6.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
3f8122c7-dd4d-4aac-997d-9a1ef3603789.6fe3af6d-c3e6-4384-9d6d-9b26ff482ecd.description=<pre>Runs a command and allows user to specify that it runs locally (in this case no port should be specified), via ssh, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\nhost - Hostname or ip address.\nport - Port number for connecting to the host.\nusername - Username to connect as.\npassword - Password of the user. If using a private key file this will be used as the passphrase for the file.\nprotocol - The protocol used to run the command (can be one of ssh, ROSH, GlobalShell, Telnet, RSH, REXEC, local, WMI, NASConnectTelnet, or HPOM).\ntimeout - (optional, default 90 seconds) time in milliseconds to wait for the command to complete; increase its value if you are getting incomplete output results or timeout.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\nenvironment - Specifies environment variables/values that need to be defined when running command.\nstartDir - The path to the starting directory.\npty - Whether to use pty (used by ssh, GlobalShell. Valid values\: true, false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on RAS host (used by ssh, GlobalShell).\nsasHost - The host we want to run the ROSH command on.\nsasHostUsername - The username used to run the ROSH command on sasHost.\nusernamePrompt - The prompt that when seen should send the username; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'\npasswordPrompt - The prompt that when given should send the password; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'Password\:'\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default, the path will have to be  changed on Windows 2000 systems\nnasDevice - The NAS device to run the command on when using the NASConnect protocol.\nnasDeviceConsoleMode - The NAS device console mode used to run the command scripts that run the command on the given NAS device. If this input is empty, command scripts are not used, and the connection to the NAS device and the command are issued directly in the console; this is not recommended, since its error handling capabilities are limited and it might result in success even when the command fails to execute. The values for this input can be found in the NAS web interface, as a drop-down list when a new command script is created (ex. Cisco IOS enable).\nhpomNode - Node on which the command is to be executed.\nhpomProtocol - Protocol to communicate with HPOM (http or https).\ncharacterSet - The characterSet name for stream encoding and decoding between the RAS and target machine. For example, SJIS,EUC-JP, UTF-8.  By default it is UTF-8 (used by ssh, GlobalShell, Telnet, RSH, REXEC).\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nstdErr - The STDERR of the command.\nstdOut - The STDOUT of the command.\n\nNotes\:\nTelnet protocol - Since telnet is not a remote execution protocol but a shell protocol the response will always be successful if the command was executed in the remote shell.  The return code of the specified command cannot be determined in this protocol.  If you must use the telnet protocol with this operation besure to check the command results. Consider using ssh or rexec protocol instead.\n</pre>
3f8122c7-dd4d-4aac-997d-9a1ef3603789.71ba8bba-ddf3-49df-b7c4-d7e524ff3b5c.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
3f8122c7-dd4d-4aac-997d-9a1ef3603789.76338000-3ac8-4e58-9e8e-be7bff3f5a76.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
3f8122c7-dd4d-4aac-997d-9a1ef3603789.81d4a6a4-f4ff-4725-a0b1-bd2dd832600b.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
3f8122c7-dd4d-4aac-997d-9a1ef3603789.83350096-cf20-42dc-8880-d103d6ba8e97.description=<pre> Calls "DB_GetHostGroupByResourcepool" to get the host group name in SCVMM, and then run SCVMM cmdlets to get the Cluster under this host group. The clusterName is filtered based on the output of the SCVMM cmdlet.\n\nInputs\:\n    \n    resourcePool - The name of the resource Pool. It is usually from server.respool. \n\n\nResults\:\n    clusterName - The name string of the cluster. \n   \nResponses\:\n    Failure - Could not retrieve the list of virtual machines or failed to extract the UUID.\n    Success - The operation executed with success and the result contains the UUID. \n\n</pre>
3f8122c7-dd4d-4aac-997d-9a1ef3603789.83bbc2b1-e94a-467e-b334-37b57b8b3103.prompt=Select from vm platforms
3f8122c7-dd4d-4aac-997d-9a1ef3603789.91fb1f5c-aa7c-4d47-86f8-524220246c9d.description=<pre>\nRuns a SQL query against an Oracle database, using the information in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation. Subsequent calls with the same information return the other rows.\n\nInputs\:\n    TNSPath -The path to the folder of the TNS file tnsnames.ora. This path must be accessible by the OO RAS service. For example, if the RAS and the Oracle server are installed on the same Windows system, the TNSPath might look like \u201CC\:\\app\\Administrator\\product\\11.1.0\\db_1\\network\\admin\u201D. If the RAS and the Oracle server are on different Windows systems, you can copy the tnsnames.ora file  to the RAS system. The TNSPath might look like \u201CC\:\\Program Files\\Hewlett-Packard\\Operations Orchestration\\RAS\\Java\\Default\\webapp\\conf\u201D or \u201CC\:\\Temp\u201D depending on where you place the .ora file. \n    TNSEntry - The entry name in the tnsnames.ora file that contains the connection information. For example, the value for the TNSEntry input is \u201CTestEntry\u201D if the content in the tnsnames.ora file looks like the following\: \n\nTestEntry \=\n  (DESCRIPTION \=\n   (ADDRESS \= (PROTOCOL \= TCP)(HOST \= 16.110.111.111)(PORT \= 1521))\n   (CONNECT_DATA \=\n     (SERVER \= DEDICATED)\n     (SERVICE_NAME \= orcl)\n   )\n )\n\n    Username - The username to connect to the Oracle database. \n    Password - The password for the Username.\n    Command - The command to execute. \n    Delimiter \u2013 The delimiter to use between the columns in the returnResult result.\n    Key \u2013 The key to use to keep multiple query results distinct.\n    timeout - Seconds to wait before timing out the SQL command execution.\nDefault values\: 0 \n\nResults\:\n    returnResult - This is the primary output. Returned the data returned for each row separated by the value you specified in the Delimiter input (for example, \u201Ckey16|lst|16\u201D).\n    columnNames - The names of the columns returned, separated by the value you specified in the Delimiter input (for example, \u201CMYKEY|NAME|ID\u201D).\n    rowsLeft - The number of rows remaining that match the query. \n\nResponses\:\n    more items - More rows are available for retrieval.\n    no more items - No more rows are available.\n    failure - There was an error executing the command.\n\nNotes\:\n1. This operation only supports Oracle. \n2. This operation can only execute the "SELECT" statement. For statements that modify the database, use the TNS Names SQL Command operation.\n\n</pre>\n\n\n
3f8122c7-dd4d-4aac-997d-9a1ef3603789.b61e9a3f-4c81-44c4-b947-aeb26e53929c.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
3f8122c7-dd4d-4aac-997d-9a1ef3603789.e8666326-1c7f-4c1b-9748-0fbebc87c975.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
3f8122c7-dd4d-4aac-997d-9a1ef3603789.ed4147ee-edae-496a-9ecc-54f00c075721.description=<pre>Retrieve information about a virtual machine or a set of virtual machines in a datacenter or host system. Retrieve each object one at a time from an initial search query ala SQL Query operation.\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation (true, false).\nvmDatacenter - Datacenter to get virtual machines from.\nhostSystem - Host system to get virtual machines from.\nvmIdentifierType - Virtual machine identifier type (inventorypath, name, ip, hostname, uuid, vmid).  Required if virtualMachine input is used.\nvirtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\ngetDetailed - Retrieve detailed information?\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.  See returnResult for details.\nno more - There are no more results to retrieve.\n\nReturns\:\nreturnResult - Virtual machine ID (vmid) or reason for failure.\nvmInfo - Detailed virtual machine information when getDetailed is true.  Properties in this result are pipe delimited.\nnumberOfResults - Number of results from the query remaining to be retrieved.\nname - Name of the virtual machine.\nuuid - UUID of the virtual machine.\ninventoryPath - Inventory path of the virtual machine.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
3fbb62b8-1082-41a0-af5a-dbdcf385ea0c.07e4352d-bc9a-4d5e-ab91-e5bd289376b4.description=<pre>\nCompares two dates. If the locale is not specified, the inputs must be in the format of date/time format of OO Central Server's, which is dependant of Java Locale. You can use flow " Get Current Date and Time" to check upon the default date/time format. If locale is specified, the inputs must be in the format of the locale. If locale is not specified, then default locale will be used.\n\nInputs\:\nd1 - The first date. For example, if locale is not specified and the OS default locale is English, the format could be "July 12, 2006 4\:23\:20 PM" or "July 12, 2006 4\:23\:20 PM PST". If locale en is specified, the format should be "July 12, 2006 4\:23\:20 PM PST".\nd2 - The second date.  It must be in the format that is the same as d1.\nthreshold -The number of milliseconds around each date that still allows the dates to be considered equal.\nlocaleLang - The locale language for date and time string. For example,  en or ja.\nlocaleCountry - The locale country for date and time string. For example, US or JP. If localeLang is not specified, this input will be ingored.\n\nResponses\:\nbefore - If d1 is before d2.\nequal - If d1 is < d2 + threshold and d1 > d2-threshold.\nafter - If d1 is after d2.\nfailure - Something went wrong.\n\nReturns\:\nThe value of d1-d2 in milliseconds.\n</pre>
3fbb62b8-1082-41a0-af5a-dbdcf385ea0c.bf6eb221-e338-4eca-a33c-3a8bcb32d3cc.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
3fbb62b8-1082-41a0-af5a-dbdcf385ea0c.cc014a14-db13-4b11-b08b-ce3e490e0f90.description=<pre>\nCheck the current date and time, and returns a java DateAndTime formatted string of it. If locale is specified, it will return the date and time string based on the locale.Otherwise, default locale will be used.\n\nInputs\:\nlocaleLang - The locale language for date and time string. For example,  en or ja.\nlocaleCountry - The locale country for date and time string. For example, US or JP. If localeLang is not specified, this input will be ingored.\n\nResult\:\nCurrent date and time.\n\nResponses\:\nsuccess - Date/time retrieved successfully.\nfailure - Date/time could not be retrieved.\n</pre>
3fbb62b8-1082-41a0-af5a-dbdcf385ea0c.fff06f2d-12e8-4cb9-a2a0-4bf0cc695df0.description=<pre>\nIf the input dateFormat is not specified, it converts a date in the format of date/time of OO Central Server's, which is dependant on the Java locale, to a date either in the format of date/time of OO Central Server's or in the format specified in the input outFormat. \n\nIf the input dateFormat is specified, it converts a date in the format in dateFormat to a date either in the format of date/time of OO Central Server's or in the format specified in the input outFormat.\n\nYou can use flow "Get Current Date and Time" to check upon the default date/time format.  \n\nFor exmaple, if OO Central Server's locale is English, the input dateFormat is empty and the input outFormat is empty, the input date should be in the format of "July 13, 2006 10\:04\:08 AM". If the user specifies dateFormat as "dd-MM-YYYY HH\:mm\:ss", the input date should be in the format of "13-07-2006 10\:04\:08". If the input outFormat is empty, the result will be "July 13, 2006 10\:04\:08 AM". If the input outFormat is "yyyy-MM-dd", the result will be "2006-07-13". The dateFormat for "July 13, 2006 10\:04\:078 AM" is "MMM dd, yyyy HH\:mm\:ss a". \n\n\nSpecify the date format with the following patterns\:\n\nLetter \tDate or Time Component \tPresentation \tExamples\nG \tEra designator \tText \t                     AD\ny \tYear \t                     Year \t                     1996; 96\nM \tMonth in year \tMonth \t                     July; Jul; 07\nw \tWeek in year \tNumber \t                     27\nW \tWeek in month \tNumber \t                     2\nD \tDay in year \t                     Number \t                     189\nd \tDay in month \tNumber \t                     10\nF \tDay of week in month \tNumber \t                     2\nE \tDay in week   \tText \t                     Tuesday; Tue\na \tAm/pm marker \tText \t                     PM\nH \tHour in day (0-23) \tNumber \t                     0\nk \tHour in day (1-24) \tNumber \t                     24\nK \tHour in am/pm (0-11) \tNumber \t                     0\nh \tHour in am/pm (1-12) \tNumber \t                     12\nm \tMinute in hour \tNumber \t                     30\ns \tSecond in minute \tNumber \t                     55\nS \tMillisecond \t                     Number \t                     978\nz \tTime zone \t                     General time zone \tPacific Standard Time; PST; GMT-08\:00\nZ \tTime zone \t                     RFC 822 time zone \t-0800\n\nSo, for example\: the date "2006-07-10 15\:16\:14.766 PDT" would have the dateFormat "yyyy-MM-dd HH\:mm\:ss.SSS z".\n\nYou can also use single quotes (') to avoid text interpretation. The quoted text will simply be copied into the output string during formatting (if present in the outFormat) or matched against the input string during parsing (if present in the dateFormat). For example, the date value "2006-07-10T15\:16\:14.766Z" would have the dateFormat "yyyy-MM-dd'T'HH\:mm\:ss.SSS'Z'". \n\n\nInputs\:\ndate - The date to parse. If the input dateFormat is empty, the date must be in the format of date/time of OO Central Server's, which is dependant on the Java locale. If the input dateFormat is not empty, the date must be in the format specified in the input dateFormat.\ndateFormat - The format of the input date. \ndateLocaleLang - The locale language for input dateFormat string. For example,  en or ja.  It will be ignored if dateFormat is empty. \ndateLocaleCountry - The locale country for input dateFormat string. For example, US or JP.  It will be ignored if dateFormat is empty or dateLocaleLang is empty. \noutFormat - The format of the output date/time. If it is empty, the output date/time will be in the format of date/time of OO Cental Server's, which is dependant on the Java locale.\noutLocaleLang - The locale language for output string. For example,  en or ja. It will be ignored if outFormat is empty. \noutLocaleCountry - The locale country for output string. For example, US or JP. It will be ignored if outFormat is empty or outLocaleLang is empty.\n\nResponses\:\nsuccess - The date was converted.\nfailure - The date could not be converted.\n\nResult\:\nThe date in the new format.\nThe date in the new format.\n</pre>
40135b59-9cca-4b5b-9697-3ece032ba4d0.15431c60-32e0-4aac-a3a8-c8ceee4557f8.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
40cd4a93-0950-4341-8e42-555dec0898e5.25968e87-9d94-490c-b6ee-f2e6fe3d188b.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
40cd4a93-0950-4341-8e42-555dec0898e5.345b4ef2-f41d-45a1-a1ec-402739d5bb1f.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
40cd4a93-0950-4341-8e42-555dec0898e5.7b1f3069-61b4-433a-9a90-d95dcb62d1ec.description=Counts from one number to another number.\n\n<pre>\nInputs\:\ncount - number of loops to complete\nreset - If true, then the counter will restart counting from the beginning.\n\nReturns\:\nThe number that was just counted.\n\nResponses\:\nhas more - Not yet done counting.\nno more - Done counting. This will only be returned once, then counting restarts.\nfailure - Something went wrong.\n</pre>
40cd4a93-0950-4341-8e42-555dec0898e5.93474c1d-7db1-4284-9b92-38f940747bee.description=Sleeps for "X" seconds.\n\n<pre>\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason\n</pre>
40cd4a93-0950-4341-8e42-555dec0898e5.bafda1c3-c598-409e-8c7b-38afc5f144a2.description=<pre>This is an operation that does nothing, and can be used to display information to the user by editing the display tab. It can also be used for filtering flow variables by feeding them in as inputs, and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
40cd4a93-0950-4341-8e42-555dec0898e5.c8166fe0-a7ef-4d99-aa23-11d5f01b1137.description=generates a random password consisting og lowercase letters, uppercase letter and number\n\nInputs\:\npasswordLength - specifies length of the password to be generated\n\nOutputs\:\ngeneratedPassword - the generated password string
40cd4a93-0950-4341-8e42-555dec0898e5.d6faab6d-54aa-4e50-8e85-105acb8696a6.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
40cd4a93-0950-4341-8e42-555dec0898e5.e558237c-0693-4ba4-818d-0131d8c78469.description=Sleeps for "X" seconds.\n\n<pre>\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason\n</pre>
40cd4a93-0950-4341-8e42-555dec0898e5.f1feba1c-fb7e-4f66-958b-3a228d40d61f.description=<pre>Scan opened ports on give host  \n\nInputs\: \n host - IP address Host name to be scanned\n lowestPort - lowest port range\n highestPort - highest port range\n portType - the type of ports to be scanned (TCP or UDP). If not specified, the TCP ports are scanned.\n\nNote\:\n To scan specific port give same port as parameter for both Lowest Port and Highest Port, \n\nResponses\:\n success - the command was executed successfully\n failure - the command could not be executed\n\nResult\:\n finalResult - Information about the ports' statuses on a given machine.\n\nExtra results\:\n host - the IP of the host for which the ports are scanned\n ports - Number of ports scanned\n opened - Number of ports open\n closed - Number of ports closed\n dropped - Number of ports dropped\n</pre>\n
41d00124-3eb9-4a89-9873-86892cdf1c20.0dc7b816-1bc1-416e-a85a-5ea4daedc554.description=<pre>\nPower off and terminate a VM.\n\nInput Parameters\:\n VMID - the unique Identifier of the VM on a vCenter.\n hostname - hostname of the VM to terminate\n host -  vCenter host to execute against\n user - vCenter username\n password - vCenter password\n vmDatacenter -  target Datacenter on the vCenter host for the VM\n hostSystem - current ESX host for the VM\n\nResponses\:\n   success - if the command completes execution and its exit code is 0\n   failure - otherwise\n</pre>
41d00124-3eb9-4a89-9873-86892cdf1c20.8351e075-f688-4f15-a027-7557c3c06423.prompt=Select from vm platforms
423510a2-c29f-4a9f-84fd-068f6b0e637c.2727d834-0efa-454c-a756-67c2770ea868.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
423510a2-c29f-4a9f-84fd-068f6b0e637c.51666165-e9a6-4b96-8ad3-21f090c615df.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
423510a2-c29f-4a9f-84fd-068f6b0e637c.662518b5-10db-43de-8712-3e17c96cee7f.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
423510a2-c29f-4a9f-84fd-068f6b0e637c.7d608e42-ff8c-472d-bd8c-05a1b716fd7c.description=Generic flow to send an e-mail
423510a2-c29f-4a9f-84fd-068f6b0e637c.8e582dc2-012c-43d9-8b58-4eef9095d8b8.description=Generic flow to send an e-mail
423510a2-c29f-4a9f-84fd-068f6b0e637c.908f5eda-f4f5-49c6-a1a6-9d5a28c3250a.description=Generic flow to send an e-mail
423510a2-c29f-4a9f-84fd-068f6b0e637c.a22a365e-ad19-43df-ae28-e32a6d726ed8.description=Generic flow to send an e-mail
423510a2-c29f-4a9f-84fd-068f6b0e637c.aa5f58e4-aa90-4747-9ee1-6298aea79269.description=Generic flow to send an e-mail
423510a2-c29f-4a9f-84fd-068f6b0e637c.b5b44e6e-d229-4c28-afd4-7e370d302b22.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
423510a2-c29f-4a9f-84fd-068f6b0e637c.d3da279c-7314-4c5b-9251-89fc2ec925dc.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
42b964e3-4264-43b9-8b88-f3fa68eace9b.a7b9c0ed-4fc9-459c-84d5-46e088aef268.description=<pre>Sets the power state of virtual machine (poweredOn,poweredOff,suspended). Does nothing if the virtual machine is already in the power state.\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation (true, false).\nasync - Asynchronously perform the task (true, false).\ntaskTimeOut - Time to wait before the operation is considered to have failed (seconds).\nvirtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\nvmIdentifierType - Virtual machine identifier type (inventorypath, name, ip, hostname, uuid, vmid).\nvmPowerState - Virtual machine power state to set (poweredOn, poweredOff, suspended).\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\nno action - The operation completed with no action performed.\n\nReturns\:\nreturnResult - Task ID or task completion return message.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
42b964e3-4264-43b9-8b88-f3fa68eace9b.description=\nThe PowerOff should be a guest shutdown + power off, or there might be damage to the guest OS if power off abruptly.\n
42b964e3-4264-43b9-8b88-f3fa68eace9b.f94bfc47-9590-4295-8211-c4014295b175.prompt=Select from vm platforms
42d2a9e9-0711-4653-b1f5-dfa598f0bc52.description=get the result of oracle's installing and dbs
44715ee9-bd4b-4828-a112-830b96ea18fa.088eaf1f-3ab8-4829-97e9-8f2274661348.description=Generic flow to send an e-mail
44715ee9-bd4b-4828-a112-830b96ea18fa.201de70b-b546-41c9-aede-ceb929ddf51b.description=<pre>This subflow was created by the Web Services Wizard to invoke the powerOnService operation on https\://tufnellpark\:51443/hpio/controller/soap/v2?wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nserviceName - The input named powerOnService|serviceName of the complex type\: powerOnService\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\nrequestId - The output given by the XPath\: /Envelope/Body/powerOnServiceResponse/requestId/text()</pre>
44715ee9-bd4b-4828-a112-830b96ea18fa.45e70ecb-711d-4629-8fd3-a2bdb83321fb.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
44715ee9-bd4b-4828-a112-830b96ea18fa.45ed3791-3921-4462-a7d6-a21c8bc89368.description=Generic flow to send an e-mail
44715ee9-bd4b-4828-a112-830b96ea18fa.5d1906fc-9519-474d-8724-7a39f6b94069.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
44715ee9-bd4b-4828-a112-830b96ea18fa.8379c58a-b735-4357-a648-9ebce7b04c9e.description=<pre>This subflow was created by the Web Services Wizard to invoke the powerOffService operation on https\://tufnellpark\:51443/hpio/controller/soap/v2?wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nserviceName - The input named powerOffService|serviceName of the complex type\: powerOffService\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\nrequestId - The output given by the XPath\: /Envelope/Body/powerOffServiceResponse/requestId/text()</pre>
44715ee9-bd4b-4828-a112-830b96ea18fa.ae860e7a-eea3-4d19-9fd0-2012265f5415.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
44715ee9-bd4b-4828-a112-830b96ea18fa.b07e7c43-c0b4-4663-a69f-622dc91f37a7.description=\nThe PowerOff should be a guest shutdown + power off, or there might be damage to the guest OS if power off abruptly.\n
44715ee9-bd4b-4828-a112-830b96ea18fa.c5b8a50d-a6f2-4824-879c-4633ed0e26dc.description=Generic flow to send an e-mail
44a89415-40e8-4100-bbfb-c57b37842944.177a7e88-41b2-45ab-a37e-81f5f728fa11.callout=Create IO Service Flow copied from the CSA 3 Kit
44a89415-40e8-4100-bbfb-c57b37842944.44198d86-7bbf-497f-a2bb-d69c17c3b8ff.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
44a89415-40e8-4100-bbfb-c57b37842944.5781f880-e05e-4d31-a4b1-5741cda57e47.description=<pre>\nCreate a VM from a VM template. This is the controller flow to check and dispatch to vCenter or SCVMM accordingly.\n\nInput Parameters\:\n vmName - name of the VM that will be created with this flow\n templateName -  name of the VM template to clone in vCenter\n osType - linux or windows\n host -  vCenter ?? from outside or from inside?\n user - vCenter username\n password - vCenter password\n vmDatacenter -  target Datacenter on the vCenter host for the VMs\n dataStore -  target datastore on the vCenter host for the VMs\n vmResourcePool - target resource pool for the VMs\n\nserver.bakvlangid\t\nserver.vlan1gid\t\nserver.vlan2gid\t\nserver.slalevel\t\nserver.tshirtsize\t\n\n\nResponses\:\n success - The operation completed successfully.\n failure - Something went wrong.\n   \n\nResult Fields\:\n vmId - VMID of the Clone \n</pre>
44a89415-40e8-4100-bbfb-c57b37842944.97f25a6d-736d-480f-a627-947a3b967d8f.callout=VM Deploy goes to vCenter or SCVMM
44a89415-40e8-4100-bbfb-c57b37842944.b843b380-a0c6-4e13-ac65-64b1afdf5066.description=<pre>This subflow was created by the Web Services Wizard to invoke the powerOnLogicalServers operation on https\://tufnellpark\:51443/hpio/controller/soap/v2?wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nlogicalServerNames0 - The input named powerOnLogicalServers|0|logicalServerNames of the complex type\: powerOnLogicalServers|0\nserviceName - The input named powerOnLogicalServers|serviceName of the complex type\: powerOnLogicalServers\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\nrequestId - The output given by the XPath\: /Envelope/Body/powerOnLogicalServersResponse/requestId/text()</pre>
44a89415-40e8-4100-bbfb-c57b37842944.de7c0451-e4df-4607-897f-d9f4103ed6c3.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
44a89415-40e8-4100-bbfb-c57b37842944.description=This flow when provided an InfrastructureService id, will deploy IO based service. It will update the provided Infrastructure Service with Server Groups followed by Servers present in a Server Group.\n\nInput Parameters\:\n   id\: Infrastructure Service id.\n\nResponses\:\n   success - if the IO deploy operation is successful.\n   failure - otherwise\n\nResult Fields\:
44a89415-40e8-4100-bbfb-c57b37842944.e36224c0-cf95-4bf0-8a09-c167db168ed9.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
458c90d7-85f1-42f4-99cd-9915dc34caae.2cde198b-b75a-472f-aa7d-1870bce7ad6c.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
458c90d7-85f1-42f4-99cd-9915dc34caae.7220d204-c104-4317-8b95-d9818e04812f.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
458ff11f-91b0-4b55-8398-4df6a6dd3974.b2a3d7d4-c71a-4a10-ad83-c67160ddbabf.description=<pre>\nRuns Microsoft PowerShell script on a RAS.\n\nRemoting must be enabled on the target computer to run this operation on remote targets. Go to http\://technet.microsoft.com/en-us/magazine/ff700227.aspx for instructions on how to enable remoting on a Windows computer\n\nInputs\:\nhost\t- The host name or the IP address of the target Windows computer.\nusername \t- Username to use to connect to the target computer. \npassword \t- Password of the user.\nscript\t- PowerShell script code.\nssl         \t- Whether SSL should be used while invoking the script remotely. This input defaults to false, and is ignored for local script execution. If SSL is not available on the port used for the operation, the operation will fail.\n\nResponses\:\nsuccess\t- The script execution was successful.\nfailure\t- The script execution failed.\n\nResult\:\nThe return code of the operation.\n\nExtra Results\:\nreturnResult\t- The result of the script execution.\n\nNote\: \n1. This operation does not support Remoting on PowerShell 1.0.\n\n2. Remoting could fail with a generic error in configuration. This can happen if an SSL connection is enforced. The remote computer must be configured for HTTPS transport or the IP address of the remote computer must be included in the WinRM TrustedHosts list on the local computer. For instructions to add a computer name to the TrustedHosts list, see "How to Add a Computer to the Trusted Host List" in http\://technet.microsoft.com/en-us/library/dd347642.aspx\n</pre>\n
46a9a183-2bf9-4c86-892c-3c1d1e1c5c94.description=json template for ESL API - create CI.
47a11205-2550-4896-bad6-b6d31a9df27c.47594ca1-1b49-4a01-85e3-e8222ba58944.description=<pre>This is an operation that does nothing, and can be used to display information to the user by editing the display tab. It can also be used for filtering flow variables by feeding them in as inputs, and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
47a11205-2550-4896-bad6-b6d31a9df27c.50987410-fcc5-4675-8629-0950fbc3bba9.description=<pre>Scan opened ports on give host  \n\nInputs\: \n host - IP address Host name to be scanned\n lowestPort - lowest port range\n highestPort - highest port range\n portType - the type of ports to be scanned (TCP or UDP). If not specified, the TCP ports are scanned.\n\nNote\:\n To scan specific port give same port as parameter for both Lowest Port and Highest Port, \n\nResponses\:\n success - the command was executed successfully\n failure - the command could not be executed\n\nResult\:\n finalResult - Information about the ports' statuses on a given machine.\n\nExtra results\:\n host - the IP of the host for which the ports are scanned\n ports - Number of ports scanned\n opened - Number of ports open\n closed - Number of ports closed\n dropped - Number of ports dropped\n</pre>\n
47a11205-2550-4896-bad6-b6d31a9df27c.6a1b5376-4681-47c9-a5bd-a152c5934c5b.description=<pre>This is an operation that does nothing, and can be used to display information to the user by editing the display tab. It can also be used for filtering flow variables by feeding them in as inputs, and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
47a11205-2550-4896-bad6-b6d31a9df27c.93c4c04e-e321-4c3c-9f35-1e070fdfac4b.description=<pre>Runs a command and allows user to specify that it runs locally (in this case no port should be specified), via ssh, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\nhost - Hostname or ip address.\nport - Port number for connecting to the host.\nusername - Username to connect as.\npassword - Password of the user. If using a private key file this will be used as the passphrase for the file.\nprotocol - The protocol used to run the command (can be one of ssh, ROSH, GlobalShell, Telnet, RSH, REXEC, local, WMI, NASConnectTelnet, or HPOM).\ntimeout - (optional, default 90 seconds) time in milliseconds to wait for the command to complete; increase its value if you are getting incomplete output results or timeout.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\nenvironment - Specifies environment variables/values that need to be defined when running command.\nstartDir - The path to the starting directory.\npty - Whether to use pty (used by ssh, GlobalShell. Valid values\: true, false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on RAS host (used by ssh, GlobalShell).\nsasHost - The host we want to run the ROSH command on.\nsasHostUsername - The username used to run the ROSH command on sasHost.\nusernamePrompt - The prompt that when seen should send the username; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'\npasswordPrompt - The prompt that when given should send the password; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'Password\:'\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default, the path will have to be  changed on Windows 2000 systems\nnasDevice - The NAS device to run the command on when using the NASConnect protocol.\nnasDeviceConsoleMode - The NAS device console mode used to run the command scripts that run the command on the given NAS device. If this input is empty, command scripts are not used, and the connection to the NAS device and the command are issued directly in the console; this is not recommended, since its error handling capabilities are limited and it might result in success even when the command fails to execute. The values for this input can be found in the NAS web interface, as a drop-down list when a new command script is created (ex. Cisco IOS enable).\nhpomNode - Node on which the command is to be executed.\nhpomProtocol - Protocol to communicate with HPOM (http or https).\ncharacterSet - The characterSet name for stream encoding and decoding between the RAS and target machine. For example, SJIS,EUC-JP, UTF-8.  By default it is UTF-8 (used by ssh, GlobalShell, Telnet, RSH, REXEC).\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nstdErr - The STDERR of the command.\nstdOut - The STDOUT of the command.\n\nNotes\:\nTelnet protocol - Since telnet is not a remote execution protocol but a shell protocol the response will always be successful if the command was executed in the remote shell.  The return code of the specified command cannot be determined in this protocol.  If you must use the telnet protocol with this operation besure to check the command results. Consider using ssh or rexec protocol instead.\n</pre>
47a11205-2550-4896-bad6-b6d31a9df27c.973e95e7-a9b3-4476-873e-b50af9b9c060.description=Sleeps for "X" seconds.\n\n<pre>\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason\n</pre>
47a11205-2550-4896-bad6-b6d31a9df27c.994e9865-3c7f-49ed-9637-1bc32521a216.description=Counts from one number to another number.\n\n<pre>\nInputs\:\ncount - number of loops to complete\nreset - If true, then the counter will restart counting from the beginning.\n\nReturns\:\nThe number that was just counted.\n\nResponses\:\nhas more - Not yet done counting.\nno more - Done counting. This will only be returned once, then counting restarts.\nfailure - Something went wrong.\n</pre>
47a11205-2550-4896-bad6-b6d31a9df27c.ad67d54c-1e3b-4957-965b-f5bb0656ead8.description=generates a random password consisting og lowercase letters, uppercase letter and number\n\nInputs\:\npasswordLength - specifies length of the password to be generated\n\nOutputs\:\ngeneratedPassword - the generated password string
47a11205-2550-4896-bad6-b6d31a9df27c.c1fc7be6-e990-487e-a867-2b4fcfde4840.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
47a11205-2550-4896-bad6-b6d31a9df27c.d74ff8fa-eb9d-4ccc-bf62-f0bb260a0617.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
4822bb20-7984-4c16-bf7e-fc84c6f991cd.95d3a5e3-eb2d-47c8-bc8b-b38adcb109bf.description=<pre>\nService to perform an HTTP GET via the Java HTTP Client\n\nInputs\:\nurl - the url to attempt to retrieve.\nusername - the username to authenticate to url with.\npassword - the password for username.\ntimeout - a timeout after which the connection should be terminated, or 0 for no timeout.\nuseCookies - Enables cookie tracking. Cookies will be stored between consecutive calls. valid options are\: true/false\nfollowRedirects - specifies whether or not the get command should automatically follow redirects.\ntrustAllRoots - enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it. valid options are\: true/false\nproxy - a proxy to use when accessing the web site.\nproxyPort - a port on the proxy to connect to.\nproxyUsername - a username to use when connecting to the proxy.\nproxyPassword - a password to use when connecting to the proxy.\nencodeURL - perform URL encoding.\nuserAgent - if the HTTP header USER_AGENT needs to be overridden, pass in the value here\ncharacterSet - the characterSet for HTTP Get request and response. Default is UTF-8.\n\nResponses\:\nsuccess - URL retrieved successfully.\nfailure - The url could not be retrieved.\n</pre>
4975f6f8-9cf1-466b-8957-92f98aa78e49.description=Address of the ESL(EIT2 100) web service for GetCI/GetCIDetail
4aa50395-fb9e-47e7-ac4f-dbf81dce8cd7.description=pc.vcenter.port
4aaefc76-4d51-47e6-b78d-a82fb803a1ef.073d4336-48ce-46c2-ad12-83e0d29058fb.description=<pre>\nIterates through a JavaScript array, i.e. a string value that contains an array\nin the JavaScript Object Notation format (JSON).  Each time that this operation\nis called it places the value of the current array element into the Result\noutput and advances the iterator to the array element.\n\nThe JSON format is basically a way to encode arrays and other values using\nJavaScript notation.  For arrays, this means that the values need to be\nsurrounded by square brackets, and each element in the array can be a string\n(which needs surrounding quotes), a number, true, false, null, or a nested array\nor object.  Commas are always used as delimiters between array elements, and\nthey can appear within string elements without confusion.  For example, the\nfollowing is a simple JSON array\:\n   [ "cat", "dog", "horse" ]\nNote that the equivalent OO list would be \n   cat,dog,horse\nThe benefits of JavaScript arrays are that delimiters are fixed and cannot be\nconfused with data, and that complex nesting of arrays and objects are\nsupported.  The description of the enclosing folder, /Library/Utility\nOperations/Container/JavaScript Objects has more examples, and the JSON format\nis described completely at http\://www.json.org.\n\nModifying the contents of the array during iteration is not generally supported,\nbut will be safe as long as the affected item(s) are beyond the current position\nof the iterator.  The iterator keeps track of where it is in the array by\nposition.  If items are added or removed to the list in a position preceding the\niterator, it may cause the iterator to return results that are not obvious.  For\nexample, if the array contains [ "a", "b", "c" ] and the iterator is positioned\non the second element, "b" and the first element is removed, then the iterator\nwill now be at the last element in the list, "c".\n\nThere is currently a limitation that a flow can only have one of these array\niterator steps active at a time without causing possible conflicts.  In other\nwords, if you need to iterate through a nested array, you will should use a\nsub-flow to process the inner array.  You may have two or more of these array\niterators in the same flow as long as each iterator reaches the end of its array\nbefore the next one begins.\n\nInputs\n\n   array\n      The JavaScript array that will be iterated through.  The operation will\n      return a failure if the array is not a JavaScript array; a normal OO list\n      is NOT a JavaScript array.\n\nResponses\n\n   has more\n      The iterator has not yet reached the end of the array. The Result output\n      will be populated with the value of the current element in the array, and\n      the iterator will advance to the next element in the array.\n\n   no more\n      The iterator has reached the end of the array, and there is no more data\n      to return.  The iterator will become undefined after this call, which\n      basically will reset it so that if called again, this operation will begin\n      another iteration at the beginning of the array.\n\n   failure\n      There was some error in iterating through the list, and the Result output\n      will contain information about the error.  This will occur if the input\n      array is not a valid JavaScript array.  For example, if presented with a\n      common list value such as a,b,c it will fail because it lacks the\n      enclosing brackets and the quotes around each string element.  You may\n      wish to use a tool such as http\://www.jsonlint.com/ to help diagnose\n      problems with JavaScript Object Notation.\n\nOutputs\n\n   Result\n      The current array element.  When incorporating this operation into a flow,\n      you should assign a meaningful result value from this field.  Note that\n      since JavaScript arrays may contain nested arrays or other objects, the\n      value returned in Result may also require further processing.\n\n</pre>\n
4aaefc76-4d51-47e6-b78d-a82fb803a1ef.0edc060f-ce49-4012-9e75-711f7d3f24a4.description=<pre>Adds a flow variable into the local context (available to itself and child flows only)\n\nInput Parameters\:\nkeyName - the name of the flow variable to use\nmyValue - the value to assign the flow variable\n\nResponses\:\nsuccess - assigned the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, $myValue];</pre>
4aaefc76-4d51-47e6-b78d-a82fb803a1ef.52b5978f-22e7-42c5-8c3e-83c8eda6c1df.description=<pre>Adds a flow variable into the local context (available to itself and child flows only)\n\nInput Parameters\:\nkeyName - the name of the flow variable to use\nmyValue - the value to assign the flow variable\n\nResponses\:\nsuccess - assigned the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, $myValue];</pre>
4aaefc76-4d51-47e6-b78d-a82fb803a1ef.7bdd54dc-70c1-42e2-a696-d951bef43acc.description=<pre>\nAccepts an object in the JavaScript Object Notation format (JSON) and and\ncreates and populates a flow variable for each member in the object.\n\nThe JSON format encodes objects as a set of unordered key/value pairs, which is\nsimilar to a structure or map in other programming languages.  For example,\n   { "city" \: "Palo Alto", \n     "state" \: "CA" }\nis an object with two elements one with the name "city" having the value "Palo\nAlto", and the other being the name "state" with the value "CA".  This operation\nwould create the flow variables city and state with the values "Palo Alto" and\n"CA".\n\nA optional prefix string can be specified that will be prepended to each flow\nvariable that is created.  For example, if the prefix is set to "my.", then\nthen the above object would result in the variables my.city (with value "Palo\nAlto") and my.state (with value "CA").  This can be useful if flow variables\nalready exist with the given names to avoid overwriting their values.\n\nJavaScript objects are useful for representing structured data, and are\nespecially when used within an array.  For example, an operation that retrieves\na set of incidents from an external system may return the entire list in one\narray of incident objects.  The description of the enclosing folder,\n/Library/Utility Operations/Container/JavaScript Objects has more examples, and\nthe JSON format is described completely at http\://www.json.org.\n\nInputs\n\n   object\n      The JavaScript object that will be converted into flow variables.  The\n      operation will return a failure if the it is not a JavaScript object.\n\n   prefix\n      The prefix to prepend to each flow variable name that will be created.\n      This is useful for creating unique variable names.\n\nResponses\n\n   success\n      The flow variables were successfully created from the object.\n\n   failure\n      There was some error in processing the object, most likely because the\n      object is not in valid JavaScript Object Notation.  You may wish to use a\n      tool such as http\://www.jsonlint.com/ to help diagnose problems with\n      JavaScript Object Notation.\n\nOutputs\n\n   A separate output will be created for each member of the object.  Each of\n   these outputs may in turn contain another object or array.\n</pre>
4aaefc76-4d51-47e6-b78d-a82fb803a1ef.9558aaa8-2679-4ff3-8508-86dbdb19e8b4.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
4aaefc76-4d51-47e6-b78d-a82fb803a1ef.f5a355b1-2e9a-4e4b-a26e-e38ef34a7769.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
4ae7a502-d484-4951-b2fd-eec6ae38c91a.f68c71d9-8fdd-4847-909e-23b64894397d.description=<pre>Invokes web service methods.  This operation should not be used directly\!  Please use the wizard to build flows that use this operation.\n\nInputs\:\nxmlTemplate - The template of the soap request to make.\ninputMap - A map used to map between template names and user-friendly names. The tamplate names are pipe-delimited xpaths of the xmltemplate location, with a numerical element for lists.\nurl - The url to post to. \nheader_SOAPAction - The SOAPAction http header field, defined by many web services for indicating the intent of the request\nwswAuthenticationType - The authentication type to use for the username and password input. http is default (Uses http authentication), other options are 'ws-security digest' and 'ws-security text' WARNING\: ws-security text transmits passwords in clear-text\nWSSecuritySignRequest - true or false, should the SOAP request be signed using WS-Security.\nWSSecurityEncryptRequest - true or false, should the entire SOAP request be signed using WS-Security\nWSSecurityTimestampRequest - true or false, should the Timestamp attribute be added to the WS-Security header\nWSSecurityKeystore - keystore to use for encrypting and signing requests.\nWSSecurityKeystoreType - The type of WSSecurityKeystore.\nWSSecurityKeystorePassword - The password for WSSecurityKeystore.\ncontentType - Value to be used in the Content-Type http header\nusername - The username to use for authenticating with the web service\npassword - The password to use for authenticating with the web service\ntrustAllRoots - Enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it. valid options are\: true/false.\nuseCookies - Enables cookie tracking. Cookies will be stored between consecutive calls. valid options are\: true/false.\ntimeout - a timeout after which the connection should be terminated, or 0 for no timeout.\nproxy - A proxy to use when accessing the web service.\nproxyPort - A port on the proxy to connect to.\nproxyUsername - A username to use when connecting to the proxy.\nproxyPassword - A password to use when connecting to the proxy.\nkeystore - the path to the keystore to use for SSL Client Certificates when using http authentication\nkeystorePassword - the password for the keystore when using http authentication\nICONCLUDE_WSW_VERSION - This value is used internally by the operation\n\nAny additional inputs that follow these are added by the Web Service Wizard, and they are specific to the particular web service method being called.\n\nResponses\:\nsuccess - SOAP request completed successfully.\nfailure - something went wrong.\n\nReturns\:\ndocument - raw XML response\ndocumentStripped - raw XML response stripped of namespaces for ease in parsing with XML XPath operations\n\nNotes\:\nIf you add new step-level inputs with the name header_<headername>, where <headername> is the name of an html header, then that html header will be set to the given value in the HTTP request.\n\n</pre>
4b300e20-56f1-4926-a09a-6c9c6f02401d.description=DNS server host for cloud machine entries / IP addresses
4ba2d9ac-e566-464f-9ae8-d387009ad298.352df643-f2d9-46ad-a04e-81ded3296545.prompt=Name of HP IO user account\:
4ba2d9ac-e566-464f-9ae8-d387009ad298.36f91337-d54f-4aaa-843f-9260c8d29b1d.description=<pre>This subflow was created by the Web Services Wizard to invoke the getService operation on https\://tufnellpark\:51443/hpio/controller/soap/v2?wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nserviceName - The input named getService|serviceName of the complex type\: getService\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\nbasedOnTemplate - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/basedOnTemplate/text()\nbillingCode - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/billingCode/text()\ncost.units - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/cost/units/text()\ncost.value - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/cost/value/text()\ncreateEpoch - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/createEpoch/text()\nendEpoch - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/leasePeriod/endEpoch/text()\nenumValue - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/status/enumValue/text()\nfixedCost.units - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/fixedCost/units/text()\nfixedCost.value - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/fixedCost/value/text()\nlastModifiedEpoch - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/lastModifiedEpoch/text()\nname - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/name/text()\nnotes - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/notes/text()\notherValue - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/status/otherValue/text()\nownerName - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/ownerName/text()\nservice - The output given by the XPath\: /Envelope/Body/getServiceResponse/service\nstartEpoch - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/leasePeriod/startEpoch/text()</pre>
4ba2d9ac-e566-464f-9ae8-d387009ad298.56469d2c-309c-474b-95f6-fe8365e2d823.prompt=Name of HP IO service\:
4ba2d9ac-e566-464f-9ae8-d387009ad298.8fbe41a0-f4fd-4cfd-bb06-7afd07eb3943.prompt=Password of HP IO user account\:
4ba2d9ac-e566-464f-9ae8-d387009ad298.a75eb3ce-46f1-44c0-97cf-5c7de742f2d2.description=<pre>Invokes web service methods.  This operation should not be used directly\!  Please use the wizard to build flows that use this operation.\n\nInputs\:\nxmlTemplate - The template of the soap request to make.\ninputMap - A map used to map between template names and user-friendly names. The tamplate names are pipe-delimited xpaths of the xmltemplate location, with a numerical element for lists.\nurl - The url to post to. \nheader_SOAPAction - The SOAPAction http header field, defined by many web services for indicating the intent of the request\nwswAuthenticationType - The authentication type to use for the username and password input. http is default (Uses http authentication), other options are 'ws-security digest' and 'ws-security text' WARNING\: ws-security text transmits passwords in clear-text\nWSSecuritySignRequest - true or false, should the SOAP request be signed using WS-Security.\nWSSecurityEncryptRequest - true or false, should the entire SOAP request be signed using WS-Security\nWSSecurityTimestampRequest - true or false, should the Timestamp attribute be added to the WS-Security header\nWSSecurityKeystore - keystore to use for encrypting and signing requests.\nWSSecurityKeystoreType - The type of WSSecurityKeystore.\nWSSecurityKeystorePassword - The password for WSSecurityKeystore.\ncontentType - Value to be used in the Content-Type http header\nusername - The username to use for authenticating with the web service\npassword - The password to use for authenticating with the web service\ntrustAllRoots - Enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it. valid options are\: true/false.\nuseCookies - Enables cookie tracking. Cookies will be stored between consecutive calls. valid options are\: true/false.\ntimeout - a timeout after which the connection should be terminated, or 0 for no timeout.\nproxy - A proxy to use when accessing the web service.\nproxyPort - A port on the proxy to connect to.\nproxyUsername - A username to use when connecting to the proxy.\nproxyPassword - A password to use when connecting to the proxy.\nkeystore - the path to the keystore to use for SSL Client Certificates when using http authentication\nkeystorePassword - the password for the keystore when using http authentication\nICONCLUDE_WSW_VERSION - This value is used internally by the operation\n\nAny additional inputs that follow these are added by the Web Service Wizard, and they are specific to the particular web service method being called.\n\nResponses\:\nsuccess - SOAP request completed successfully.\nfailure - something went wrong.\n\nReturns\:\ndocument - raw XML response\ndocumentStripped - raw XML response stripped of namespaces for ease in parsing with XML XPath operations\n\nNotes\:\nIf you add new step-level inputs with the name header_<headername>, where <headername> is the name of an html header, then that html header will be set to the given value in the HTTP request.\n\n</pre>
4ba2d9ac-e566-464f-9ae8-d387009ad298.description=<pre>This subflow was created by the Web Services Wizard to invoke the powerOnService operation on https\://tufnellpark\:51443/hpio/controller/soap/v2?wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nserviceName - The input named powerOnService|serviceName of the complex type\: powerOnService\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\nrequestId - The output given by the XPath\: /Envelope/Body/powerOnServiceResponse/requestId/text()</pre>
4ba5a316-72f5-465c-a434-3527a54e18d3.00779c31-701d-4127-a7a9-06f0871d1246.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
4ba5a316-72f5-465c-a434-3527a54e18d3.066a7cc7-6614-46b1-aaa5-ef8def373baf.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
4ba5a316-72f5-465c-a434-3527a54e18d3.06c2bb38-0910-4ef4-8556-1db18e7f4daf.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
4ba5a316-72f5-465c-a434-3527a54e18d3.183e39ac-395d-441a-a3fd-b1c780c84613.description=<pre>Runs a SQL query against an Oracle database, using the information available in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation.\nSubsequent calls with the same information will return the other rows.\n\nInputs\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name).\nTNSEntry - The entry name from the tnsnames.ora file which contains the connecting information.\nUsername - The username used for connecting to the database.\nPassword - The password used for connecting to the database.\nCommand - The command to execute.\nDelimiter - Delimiter to use between columns in returnResult.\nKey - Key to help keep multiple query results distinct.\n\nResponses\:\nmore items - More rows are available for retrieval.\nno more items - No more rows are available.\nfailure - There was an error executing the command.\n\nExtra Results\:\ncolumnNames - The names of all the columns returned, separated by Delimiter.\nrowsLeft - The number of rows remaining that match the query.\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should be correctly configured on the RAS machine.\n\nORACLE NOTE\:\nOnly the "SELECT" statement can be executed using this operation. For statements that modify the database, use "TNS Names SQL Command".\n</pre>
4ba5a316-72f5-465c-a434-3527a54e18d3.3c043e06-bc92-402c-8bae-ed484fecaa4a.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
4ba5a316-72f5-465c-a434-3527a54e18d3.3c22eacf-11ca-4dc3-902e-1dbbfd94aed8.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
4ba5a316-72f5-465c-a434-3527a54e18d3.512d9856-a8c9-4939-b45f-8deaad4b33bc.prompt=VMWare User\:
4ba5a316-72f5-465c-a434-3527a54e18d3.82595d9a-fb27-4a42-9517-1c354517704f.description=Search for VMWare objects and their properties from a root object (if any). Retrieve each object's properties one at a time from an initial search query ala SQL Query operation.\n\nInputs\:\nhost - VMWare host hostname or IP\nuser - VMWare username\npassword - VMWare user's password\nport - Port to connect on\nprotocol - Connection protocol (http or https)\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation?\npropsType - VMWare properties type (Task, Datacenter, VirtualMachine, etc.) to filter on\npropsPathset - Property filter's pathset\npropsRootObjType - VMWare object type (eg. VirtualMachine, HostSystem, ComputeResource,ResourcePool,Alarm)\npropsRootObj - VMWare object ID\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\nno more - there are no more results to retrieve.\n\nReturns\:\nnumberOfResults - Number of results from the query remaining to be retrieved\nreturnResult - Query result item or operation result
4ba5a316-72f5-465c-a434-3527a54e18d3.82915729-c7bd-4cfd-b5f6-84e298154763.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
4ba5a316-72f5-465c-a434-3527a54e18d3.82d60821-9ee9-4661-81ec-aaa4db474bdf.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
4ba5a316-72f5-465c-a434-3527a54e18d3.8f10c1b4-db1e-4772-80e3-3b5f55aec63d.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
4ba5a316-72f5-465c-a434-3527a54e18d3.919ab135-312f-4c87-97dc-6e62bd47307b.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
4ba5a316-72f5-465c-a434-3527a54e18d3.a67aca20-8557-4732-b3af-a56d59451c22.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
4ba5a316-72f5-465c-a434-3527a54e18d3.a986a48b-f6f5-4d2b-8ca2-1883a89a6671.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
4ba5a316-72f5-465c-a434-3527a54e18d3.b7d2e758-7e92-49ab-b5ce-b9fcab43daec.description=<pre>Sends an smtp email\n \nInput Parameters\:\nhostname - hostname or ip address of smtp server\nport - port smtp service is listening\nfrom - from email address\nto - email address(s) or recipients\nsubject - email subject\nbody - body of the email\nhtmlEmail - true or false, whether the email should be sent supporting html rich email.\nreadReceipt - true or false, whether or not to request a read receipt\nattachments - comma separated list of files to attach (must be full path)\nusername - if SMTP authentication is needed, the username to send\npassword - the password to use\ncharacterSet - the character set encoding for the entire email which includes subject, body, attached file name and the attached file. Default value is UTF-8\ncontentTransferEncoding - the content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. Default value is - quoted-printable or Q Encoding.\n \n Responses\:\n success - successfully sent the email\n failure - failed to send the email\n\nNote\:\nFor special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n\tFor doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n</pre>
4ba5a316-72f5-465c-a434-3527a54e18d3.b91c494f-277c-4a9e-86e9-04d715ac5bb7.prompt=Password\:
4ba5a316-72f5-465c-a434-3527a54e18d3.c8a81848-c58c-4bcf-b085-82ee83a42188.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
4ba5a316-72f5-465c-a434-3527a54e18d3.d194182a-108d-40a1-90a6-f1bc1dcc31bb.description=<pre>\nIterates through a list of values. Modifying the value of the list and delimiter inputs during iteration is not generally supported.\n\nInputs\:\nlist - The list to iterate through.\nseparator - A delimiter that separates elements in the list.\n\nReturns\:\nThe current element of the list, if the response is has more\n\nResponses\:\nhas more - Another value was in the list, and has been returned.\nhas no more - The iterator has gone fully through the list. This response will only be returned once per iteration through the list, a subsequent call to the Iterator will restart the Iteration through the list.\nfailure - failed to process the list.\n\nNote\: Where the iterator is in the list is tracked by each step's unique id. Therefore you can iterate on the same list from multiple steps simultaneously.\n\nWARNING\: Any step that will use the results of this Iterator operation will, by default, attempt to assign that step's inputs from a flow variable. If this is left checked, then the first element of the iterator will be used for every cycle of iteration.\n\n</pre>
4ba5a316-72f5-465c-a434-3527a54e18d3.e8e9aff2-3130-490d-ae77-0c4fab6f7873.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
4ba5a316-72f5-465c-a434-3527a54e18d3.eff8f3ed-613e-4999-ae67-4f0af452d996.description=<pre>\nIterates through a list of values. Modifying the value of the list and delimiter inputs during iteration is not generally supported.\n\nInputs\:\nlist - The list to iterate through.\nseparator - A delimiter that separates elements in the list.\n\nReturns\:\nThe current element of the list, if the response is has more\n\nResponses\:\nhas more - Another value was in the list, and has been returned.\nhas no more - The iterator has gone fully through the list. This response will only be returned once per iteration through the list, a subsequent call to the Iterator will restart the Iteration through the list.\nfailure - failed to process the list.\n\nNote\: Where the iterator is in the list is tracked by each step's unique id. Therefore you can iterate on the same list from multiple steps simultaneously.\n\nWARNING\: Any step that will use the results of this Iterator operation will, by default, attempt to assign that step's inputs from a flow variable. If this is left checked, then the first element of the iterator will be used for every cycle of iteration.\n\n</pre>
4ba5a316-72f5-465c-a434-3527a54e18d3.f190b462-b222-45d6-b58c-8dacc1f9d6cf.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
4e8855a4-361e-48bf-9895-61c6fa7c86a1.description=Path to SA Agent installer on Windows Virtual Machines.
4f3a5fff-2cfe-4bb7-8d39-246ec2f6a67e.6781262d-3b05-4ee4-9895-8f6e03e1dad0.description=<pre>Sends an smtp email\n \nInput Parameters\:\nhostname - hostname or ip address of smtp server\nport - port smtp service is listening\nfrom - from email address\nto - email address(s) or recipients\nsubject - email subject\nbody - body of the email\nhtmlEmail - true or false, whether the email should be sent supporting html rich email.\nreadReceipt - true or false, whether or not to request a read receipt\nattachments - comma separated list of files to attach (must be full path)\nusername - if SMTP authentication is needed, the username to send\npassword - the password to use\ncharacterSet - the character set encoding for the entire email which includes subject, body, attached file name and the attached file. Default value is UTF-8\ncontentTransferEncoding - the content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. Default value is - quoted-printable or Q Encoding.\n \n Responses\:\n success - successfully sent the email\n failure - failed to send the email\n\nNote\:\nFor special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n\tFor doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n</pre>
4fe6ddd3-3127-4f84-9702-8ddf1116e2ea.description=hostname / IP of the MOE  server
5110c3d2-3d5e-4560-95f1-f3223386f0d8.description=Path to the SA installer on Linux Machines
528767c7-00a0-4928-aa3b-eca27d54a3fa.0e807abf-9a29-42fc-af01-36fa042482f0.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
528767c7-00a0-4928-aa3b-eca27d54a3fa.333618a3-c87d-49ba-94a1-4f9701d2cf2b.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
528767c7-00a0-4928-aa3b-eca27d54a3fa.7b594979-e20a-4d3f-ae3b-2b745e494abc.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
528767c7-00a0-4928-aa3b-eca27d54a3fa.94acc526-31f6-4c82-b660-861d02bc5cb6.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
528767c7-00a0-4928-aa3b-eca27d54a3fa.991c772b-b783-48d4-942c-234f297c29b4.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
528767c7-00a0-4928-aa3b-eca27d54a3fa.9d3173d8-bd20-42a8-ba03-08c41a80d313.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
528767c7-00a0-4928-aa3b-eca27d54a3fa.aa1d97fb-aac7-4753-b604-fb7e3fcdd4b9.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
528767c7-00a0-4928-aa3b-eca27d54a3fa.b2f06629-6534-4a80-ac50-e7c569263203.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
52cf3139-efac-455a-9168-84bf9fcb6bc3.description=This serves as a switch to install CCS client on the provisioned machine.
52f4275e-bde9-4435-9725-fc76a232a4b1.0d0a16a9-056d-415b-b3b3-98a89244d571.description=<pre>Sets the power state of virtual machine (poweredOn,poweredOff,paused). Does nothing if the virtual machine is already in the power state.\n\nInputs\:\nhost - VMWare host hostname or IP\nuser - VMWare username\npassword - VMWare user's password\nport - Port to connect on\nprotocol - Connection protocol (http or https)\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation?\nasync - Asynchronously perform the task\ntaskTimeOut - Time to wait before the operation is considered to have failed (seconds)\nvirtualMachine - Primary Virtual Machine identifier. IP (IPv4 or IPv6 depending upon ESX version), hostname (full), inventorypath (Datacenter/vm/MyResourcePool/MyVM), UUID, or the VM id (vm-123,123)\nvmIdentifierType - Virtual machine identifier type\nvmPowerState - Virtual machine power state to set (poweredOn, poweredOff, suspended).\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\nno action - The operation completed with no action performed.\n\nReturns\:\nreturnResult - Task ID or task completion return message.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter or vSphere server the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter or vSphere client. The inventory path is case sensitive.\n</pre>
52f4275e-bde9-4435-9725-fc76a232a4b1.24d14fb9-72d3-4ece-adbe-1f6b48e9e388.description=<pre>Destroy / delete an object in VMWare.\n\nInputs\:\nhost - VMWare host hostname or IP\nuser - VMWare username\npassword - VMWare user's password\nport - Port to connect on\nprotocol - Connection protocol (http or https)\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation?\nasync - Asynchronously perform the task\ntaskTimeOut - Time to wait before the operation is considered to have failed (seconds)\npropsRootObjType - VMWare object type (eg. VirtualMachine, HostSystem, ComputeResource,ResourcePool,Alarm)\npropsRootObj - VMWare object ID\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n\nReturns\:\nreturnResult - Task ID or task completion return message</pre>
52f4275e-bde9-4435-9725-fc76a232a4b1.360d4ae0-6018-47a7-a4ad-ea502e0ded7f.description=<pre>Retrieve information about a virtual machine or a group of virtual machines in a datacenter or host system (pipe-delimited). Retrieve each object one at a time from an initial search query ala SQL Query operation.\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation?\nvmDatacenter - Virtual machine's datacenter.\nvmIdentifierType - Virtual machine identifier type.\nhostSystem - Target virtual machine host system.\nvirtualMachine - Primary Virtual Machine identifier. IP (IPv4 or IPv6 depending upon ESX version), hostname (full), inventorypath (Datacenter/vm/MyResourcePool/MyVM), UUID, or the VM id (vm-123,123).\ngetDetailed - Retrieve detailed information?\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\nno more - there are no more results to retrieve.\n\nReturns\:\nvmInfo - Virtual machine information.\nnumberOfResults - Number of results from the query remaining to be retrieved.\nreturnResult - Virtual machine ID or operation results.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter or vSphere server the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter or vSphere client. The inventory path is case sensitive.\n</pre>
52f4275e-bde9-4435-9725-fc76a232a4b1.8982e520-e785-47b2-a814-1fac9f6e6aac.prompt=Virtual Machine\:
52f4275e-bde9-4435-9725-fc76a232a4b1.description=<pre>\nPower off and terminate a VM.\n\nInput Parameters\:\n VMID - the unique Identifier of the VM on a vCenter.\n hostname - hostname of the VM to terminate\n host -  vCenter host to execute against\n user - vCenter username\n password - vCenter password\n vmDatacenter -  target Datacenter on the vCenter host for the VM\n hostSystem - current ESX host for the VM\n\nResponses\:\n   success - if the command completes execution and its exit code is 0\n   failure - otherwise\n</pre>
534038e3-3bf2-47e6-8d11-0925611b9dc7.088299d4-7e4a-4c27-8ad7-8a7d403d96b6.prompt=Retrieve all virtual machines regardless of their parent object?
534038e3-3bf2-47e6-8d11-0925611b9dc7.add7699e-a464-4764-84b5-3bdf3d80d237.description=<pre>Runs the powershell command "Get-VM" in order to get details about the virtual machines from the Virtual Machine Manager database. A virtual machine can be deployed on a virtual machine host or can be stored in the Virtual Machine Manager library.\n\nInputs\:\n    host - The hostname or ip address of the SCVMM server.\n    username - The username to use when connecting to the server.\nValue format\: username@domain or domain\\username.\n    password - The password to use when connecting to the server.\n    authType - Specifies the mechanism that is used to authenticate the user's credentials. \nValid values\: Default, Negotiate, Credssp, Kerberos. (case-insensitive)\nDefault value\: Default.\n    delimiter - The delimiter used to separate each property name from the property value in the output table. \nDefault value\: "\:".\n    rowDelimiter - The delimiter used to separate rows in the output table. \nDefault value\: newline\n    colDelimiter - The delimiter used to separate columns in the output table.\nDefault value\: ','\n    name - The name of the virtual machine. \n    id - The identifier of the virtual machine. \nValue format\: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxx\nExamples\: "12345678-abcd-efgh-ijkl-1234567890".\n    vmHost - The name of the virtual machine host as it appears in the 'Name' property of the object. . This can be a managed Hyper-V or Virtual Server host.\nExamples\: "myVmHost.domain", "1.2.3.4".\n    all - If true, it retrieves a list of virtual machines regardless of their parent object. For any other value except "true" the flag is considered to be false.\n    version - The SCVMM Server version.\nDefault value\: 2008 R2 \n\nResults\:\n    returnResult - A table containing a row for each virtual machine retrieved or an exception message if the operation failed. The table's columns represent the properties of the virtual machines, in the propertyName<delimiter>propertyValue format. If there are no virtual machines that match the given criteria the result will be empty. \n    warnings - A list of warnings that the powershell commands emit. If the commands were executed without warnings, then this result will be an empty string.\n\nResponses\:\n    Failure - Could not retrieve the list of virtual machines.\n    Success - The operation executed with success and the result contains the virtual machines that matched the given criteria. \n\nNotes\:\n1. Read the "System Center Virtual Machine Manage" folder description and the "Run SCVMM Commands" operation description for details about the required settings. \n2. Not all of the available filters can be applied at the same time. Use "Get-Help Get-VM -Detailed" powershell command to see the valid filter combinations and a set of examples.  \n</pre>
534038e3-3bf2-47e6-8d11-0925611b9dc7.description=<pre> Calls "Get Virtual Machine" to get details about the virtual machines from the Virtual Machine Manager database, and then filter the result to get the VMId (or UUID) of the virtual machine\n\nInputs\:\n    \n    vmName - The name of the virtual machine. It is ${server.hostname}_${server.hostname}\n\n\nResults\:\n    vmUUID - The UUID string of the virtual machine \n   \nResponses\:\n    Failure - Could not retrieve the list of virtual machines or failed to extract the UUID.\n    Success - The operation executed with success and the result contains the UUID. \n\n</pre>
534d63c8-92d1-44eb-8476-830f90e0f683.0321cb99-14cc-4888-9c84-97cf610354d7.description=<pre>This subflow was created by the Web Services Wizard to invoke the getService operation on https\://tufnellpark\:51443/hpio/controller/soap/v2?wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nserviceName - The input named getService|serviceName of the complex type\: getService\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\nbasedOnTemplate - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/basedOnTemplate/text()\nbillingCode - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/billingCode/text()\ncost.units - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/cost/units/text()\ncost.value - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/cost/value/text()\ncreateEpoch - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/createEpoch/text()\nendEpoch - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/leasePeriod/endEpoch/text()\nenumValue - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/status/enumValue/text()\nfixedCost.units - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/fixedCost/units/text()\nfixedCost.value - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/fixedCost/value/text()\nlastModifiedEpoch - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/lastModifiedEpoch/text()\nname - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/name/text()\nnotes - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/notes/text()\notherValue - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/status/otherValue/text()\nownerName - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/ownerName/text()\nservice - The output given by the XPath\: /Envelope/Body/getServiceResponse/service\nstartEpoch - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/leasePeriod/startEpoch/text()</pre>
534d63c8-92d1-44eb-8476-830f90e0f683.2ec2e7dc-20ba-4089-81d6-0a1ac1294a73.prompt=Name of HP IO user account\:
534d63c8-92d1-44eb-8476-830f90e0f683.5059f834-4363-40e0-af24-312850f70922.prompt=Name of HP IO user account\:
534d63c8-92d1-44eb-8476-830f90e0f683.5bbea058-9434-45a2-87be-3d7072821f2b.description=<pre>Invokes web service methods.  This operation should not be used directly\!  Please use the wizard to build flows that use this operation.\n\nInputs\:\nxmlTemplate - The template of the soap request to make.\ninputMap - A map used to map between template names and user-friendly names. The tamplate names are pipe-delimited xpaths of the xmltemplate location, with a numerical element for lists.\nurl - The url to post to. \nheader_SOAPAction - The SOAPAction http header field, defined by many web services for indicating the intent of the request\nwswAuthenticationType - The authentication type to use for the username and password input. http is default (Uses http authentication), other options are 'ws-security digest' and 'ws-security text' WARNING\: ws-security text transmits passwords in clear-text\nWSSecuritySignRequest - true or false, should the SOAP request be signed using WS-Security.\nWSSecurityEncryptRequest - true or false, should the entire SOAP request be signed using WS-Security\nWSSecurityTimestampRequest - true or false, should the Timestamp attribute be added to the WS-Security header\nWSSecurityKeystore - keystore to use for encrypting and signing requests.\nWSSecurityKeystoreType - The type of WSSecurityKeystore.\nWSSecurityKeystorePassword - The password for WSSecurityKeystore.\ncontentType - Value to be used in the Content-Type http header\nusername - The username to use for authenticating with the web service\npassword - The password to use for authenticating with the web service\ntrustAllRoots - Enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it. valid options are\: true/false.\nuseCookies - Enables cookie tracking. Cookies will be stored between consecutive calls. valid options are\: true/false.\ntimeout - a timeout after which the connection should be terminated, or 0 for no timeout.\nproxy - A proxy to use when accessing the web service.\nproxyPort - A port on the proxy to connect to.\nproxyUsername - A username to use when connecting to the proxy.\nproxyPassword - A password to use when connecting to the proxy.\nkeystore - the path to the keystore to use for SSL Client Certificates when using http authentication\nkeystorePassword - the password for the keystore when using http authentication\nICONCLUDE_WSW_VERSION - This value is used internally by the operation\n\nAny additional inputs that follow these are added by the Web Service Wizard, and they are specific to the particular web service method being called.\n\nResponses\:\nsuccess - SOAP request completed successfully.\nfailure - something went wrong.\n\nReturns\:\ndocument - raw XML response\ndocumentStripped - raw XML response stripped of namespaces for ease in parsing with XML XPath operations\n\nNotes\:\nIf you add new step-level inputs with the name header_<headername>, where <headername> is the name of an html header, then that html header will be set to the given value in the HTTP request.\n\n</pre>
534d63c8-92d1-44eb-8476-830f90e0f683.95aa1ba9-3c4d-4f9f-a5ff-4f438db59eb3.prompt=Name of HP IO service\:
534d63c8-92d1-44eb-8476-830f90e0f683.description=<pre>This subflow was created by the Web Services Wizard to invoke the powerOffService operation on https\://tufnellpark\:51443/hpio/controller/soap/v2?wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nserviceName - The input named powerOffService|serviceName of the complex type\: powerOffService\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\nrequestId - The output given by the XPath\: /Envelope/Body/powerOffServiceResponse/requestId/text()</pre>
540a4c6e-3ced-40fb-8dc6-6ada5655fc14.description=IP of the ESL server (Linux Jump Server for now)
5702f44c-8326-4696-9454-e49787b2296b.1e0a318a-8a2f-44cc-a379-11128524de53.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
5702f44c-8326-4696-9454-e49787b2296b.371ea566-4343-4b77-b1b3-86aa1158f548.callout=check ESL response message to determine if succeed
5702f44c-8326-4696-9454-e49787b2296b.41c94698-26f2-442c-a7c3-695eaf977245.callout=Call API to update data status in ESL.\nThis sub flow is used by post_undeploy process
5702f44c-8326-4696-9454-e49787b2296b.63ebcf68-fb19-4990-8746-75a3c16d640f.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
5702f44c-8326-4696-9454-e49787b2296b.950aa741-c997-4ec4-9bf2-65ed1e0eda01.description=<pre>\nThe operation invokes web service methods.  This operation should not be used directly\!  Please use the wizard to build flows that use this operation.\n\nInputs\:\n    xmlTemplate - The template of the soap request to make.\n    inputMap - A map used to map between template names and user-friendly names. The template names are pipe-delimited xpaths of the xmltemplate location, with a numerical element for lists.\nValue format\: A list of elements separated by the new line delimiter. Eache element hes the format\: <name>\=<new name>.\nExample\: A line in the "inputMap" could be\: "Request|Details|0|Input|x\=input0.x"\n    url - The url to Post to. \n    header_SOAPAction - The SOAPAction http header field, defined by many web services for indicating the intent of the request\n    wswAuthenticationType - The authentication type to use for the "username" and "password" input.\nDefault value\: http\nValid values\: http, ntlm, ws-security digest, ws-security text\n    WSSecuritySignRequest - Should the SOAP request be signed using WS-Security.\nDefault value\: false\nValid values true, false\n    WSSecurityEncryptRequest - Should the entire SOAP request be signed using WS-Security.\nDefault value\: false\nValid values true, false\n    WSSecurityTimestampRequest - Should the Timestamp attribute be added to the WS-Security header\nDefault value\: false\nValid values true, false\n    WSSecurityKeystore - Keystore to use for encrypting and signing requests.\n    WSSecurityKeystoreType - The type of "WSSecurityKeystore".\n    WSSecurityKeystorePassword - The password for "WSSecurityKeystore".\n    contentType - Value to be used in the Content-Type HTTP header.\nDefault value\: text/xml\n    characterSet - The character set for HTTP Get request and response.\nDefault value\: UTF-8\n    username - The username to use for authenticating with the web service.\nValue format\: For NTLM authentication, the required format is domain\\user.\n    password - The password to use for authenticating with the web service.\n    trustAllRoots - Enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it.\nDefault value\: false\nValid values\: true, false\n    useCookies - Enables cookie tracking. Cookies will be stored between consecutive calls.\nDefault value\: false\nValid values\: true, false\n    usesJSON - Use JSON arrays for the SOAP Request for all Array types.\nDefault value\: false\nValid values\: true, false\n    timeout - a timeout after which the connection should be terminated or 0 for no timeout.\n    socketTimeout - The time to wait for data to be retrieved, in milliseconds. This input needs a value greater than or equal to zero. A "socketTimeout" value of '0' represents an infinite timeout.\nDefault value\: 0\n    proxy - A proxy to use when accessing the web service.\n    proxyPort - A port on the proxy to connect to.\n    proxyUsername - A username to use when connecting to the proxy.\n    proxyPassword - A password to use when connecting to the proxy.\n    keystore - The path to the keystore to use for SSL Client Certificates when using http authentication.\n    keystorePassword - The password for the keystore when using http authentication.\n    ICONCLUDE_WSW_VERSION - This value is used internally by the operation.\n    returnXMLRequest - If this input is set to true, a new output named "rawXMLRequest" is returned from the operation which contains the text of the SOAP request that will be sent. This can be very valuable in troubleshooting.\nDefault value\: false\nValid values\: true, false\n\nResults\:\n    returnCode - This is the primary output. It contains the value 0 if the operation successfully completes and the value -1 otherwise.\n    document - Raw XML response.\n    documentStripped - Raw XML response stripped of namespaces for ease in parsing with XML XPath operations.\n    jsonStripped - Raw XML response stripped of namespaces for ease in parsing with JSON operations, input usesJSON must be set to true for this to be populated.\n\nResponses\:\n    success - SOAP request completed successfully.\n    failure - Something went wrong.\n\nNotes\:\n1.If wswAuthenticationType\=ws-security text then this operation transmits passwords in clear-text.\n2.Any additional inputs that follow these are added by the Web Service Wizard, and they are specific to the particular web service method being called.\n3.If you add new step-level inputs with the name header_<headername>, where <headername> is the name of an html header, then that html header will be set to the given value in the HTTP request.\n4.This operation will not allow connection through secure transport layers below TLS 1.0.\n</pre>
5702f44c-8326-4696-9454-e49787b2296b.a4fc60a9-331f-423d-8b2d-ba53de4acfda.description=Generic flow to send an e-mail
5702f44c-8326-4696-9454-e49787b2296b.ccc00890-a18e-4d1f-8a6d-3b3a0cb30b14.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\n    string1 - The first string. \nDefault value\: "" (empty)\n    string2 - The second string.\nDefault value\: "" (empty)\n    ignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nResponses\:\n    true - If the two strings are equal.\n    false - If the two strings are not equal.\n\n</pre>
575efc32-b147-405e-8f05-a657c711df4d.description=E-Mail address for the cCell admins
58180621-ecbc-44f0-8aa8-40b1e9566e2f.486ed446-47ce-4877-94e3-e641ec74335c.description=Deactivate a server in Server Automation Server (SAS) and then delete the server from SAS. \n\nInputs\:\nsaHost - SAS core hostname or IP address\nsaUsername - SAS username to access the saHost\nsaPassword - SAS user's password to access the saHost\nserverName - name of the server to be deactivated and deleted \n\nResponses\:\nsuccess - operation completed successfully\nfailure - otherwise\n
58822c95-3e5e-4cce-aa26-255ff2b5ac44.10c8a655-e2e1-4772-a11d-82b0dfec4d37.prompt=Close session?\:
58822c95-3e5e-4cce-aa26-255ff2b5ac44.11f7ceb7-f787-4bf0-8aff-ced98ae922a9.prompt=Root object ID\:
58822c95-3e5e-4cce-aa26-255ff2b5ac44.18f09672-2fb7-4f7e-94e6-4e06b0dbe569.description=<pre>Search for VMWare objects of type propsType and their properties (propsPathset) from a root object (if any) specified by propsRootObjType and propsRootObj. Retrieve each object's properties one at a time from an initial search query ala SQL Query operation. Please see VMWare Integration Guide for more details.\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation (true, false).\npropsType - VMWare properties type (Task, Datacenter, VirtualMachine, Network etc.) to filter on. Type of object results desired.\npropsPathset - Property filter's pathset, comma-delimited (eg. name, info.name, runtime.host).\npropsRootObjType - The type of the Managed Object Reference (such as VirtualMachine, HostSystem, ComputeResource, ResourcePool, Alarm, Datacenter, Datastore) to begin the search on. Leaving this blank will default the root object to the root folder of the ESX or VC host. \npropsRootObj - The value of the reference (such as vm-123, datastore-123, network-123) used as a root object. Leaving this blank will default the root object to be the root folder of the ESX or VC host. \n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong. See returnResult for details.\nno more - There are no more results to retrieve.\n\nReturns\:\nnumberOfResults - Number of results from the query remaining to be retrieved.\nreturnResult - Query result item or reason for failure.</pre>
58822c95-3e5e-4cce-aa26-255ff2b5ac44.45142dbf-fb47-49d8-b94a-376e877d87ad.description=<pre>Retrieve information about a virtual machine or a group of virtual machines in a datacenter or host system (pipe-delimited). Retrieve each object one at a time from an initial search query ala SQL Query operation.\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation?\nvmDatacenter - Virtual machine's datacenter.\nvmIdentifierType - Virtual machine identifier type.\nhostSystem - Target virtual machine host system.\nvirtualMachine - Primary Virtual Machine identifier. IP (IPv4 or IPv6 depending upon ESX version), hostname (full), inventorypath (Datacenter/vm/MyResourcePool/MyVM), UUID, or the VM id (vm-123,123).\ngetDetailed - Retrieve detailed information?\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\nno more - there are no more results to retrieve.\n\nReturns\:\nvmInfo - Virtual machine information.\nnumberOfResults - Number of results from the query remaining to be retrieved.\nreturnResult - Virtual machine ID or operation results.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter or vSphere server the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter or vSphere client. The inventory path is case sensitive.\n</pre>
58822c95-3e5e-4cce-aa26-255ff2b5ac44.70fbc628-6f47-4e38-89b0-69057031ca8f.description=<pre>Search for VMWare objects of type propsType and their properties (propsPathset) from a root object (if any) specified by propsRootObjType and propsRootObj. Retrieve each object's properties one at a time from an initial search query ala SQL Query operation. Please see VMWare Integration Guide for more details.\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation (true, false).\npropsType - VMWare properties type (Task, Datacenter, VirtualMachine, Network etc.) to filter on. Type of object results desired.\npropsPathset - Property filter's pathset, comma-delimited (eg. name, info.name, runtime.host).\npropsRootObjType - The type of the Managed Object Reference (such as VirtualMachine, HostSystem, ComputeResource, ResourcePool, Alarm, Datacenter, Datastore) to begin the search on. Leaving this blank will default the root object to the root folder of the ESX or VC host. \npropsRootObj - The value of the reference (such as vm-123, datastore-123, network-123) used as a root object. Leaving this blank will default the root object to be the root folder of the ESX or VC host. \n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong. See returnResult for details.\nno more - There are no more results to retrieve.\n\nReturns\:\nnumberOfResults - Number of results from the query remaining to be retrieved.\nreturnResult - Query result item or reason for failure.</pre>
58822c95-3e5e-4cce-aa26-255ff2b5ac44.87d164d8-1b01-484b-92fe-169ccb240678.prompt=Root object ID\:
58822c95-3e5e-4cce-aa26-255ff2b5ac44.8b396154-ba26-48b3-93df-1510712ba624.prompt=Password\:
58822c95-3e5e-4cce-aa26-255ff2b5ac44.aa8911f5-7ba0-40b3-8128-f5fdbce498d2.prompt=VMWare User\:
58822c95-3e5e-4cce-aa26-255ff2b5ac44.aab31eea-bf18-4f11-a27e-820c4e860237.prompt=VMWare Host\:
58822c95-3e5e-4cce-aa26-255ff2b5ac44.b3742ede-fb0f-4c1a-83fe-70fae52795f9.prompt=Close session?\:
58822c95-3e5e-4cce-aa26-255ff2b5ac44.cd251359-6cf1-4f82-8daf-1d6ff7bc128a.prompt=Password\:
58822c95-3e5e-4cce-aa26-255ff2b5ac44.e5140475-413d-4c23-b2c0-d08fafd6099f.prompt=VMWare Host\:
58822c95-3e5e-4cce-aa26-255ff2b5ac44.fc9bcdbf-aeff-4460-9312-6ef317ce7c55.prompt=VMWare User\:
5a9012d1-798d-4540-b4b5-7bdff065d763.description=Folder location on ESL host for upload
5bb1f710-8bfa-41ad-a307-62fb2fb52479.description=user for vms before rename to localadmin
5d2be9ab-96d0-488e-8465-a13555fac3c5.description=User account for SA
5d888ae5-fac2-4431-b430-d9ba38c5e795.20ce3edd-d406-4018-8f7f-2e9a74c5ffbc.description=<pre>\nRuns a SQL query against an Oracle database, using the information in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation. Subsequent calls with the same information return the other rows.\n\nInputs\:\n    TNSPath -The path to the folder of the TNS file tnsnames.ora. This path must be accessible by the OO RAS service. For example, if the RAS and the Oracle server are installed on the same Windows system, the TNSPath might look like \u201CC\:\\app\\Administrator\\product\\11.1.0\\db_1\\network\\admin\u201D. If the RAS and the Oracle server are on different Windows systems, you can copy the tnsnames.ora file  to the RAS system. The TNSPath might look like \u201CC\:\\Program Files\\Hewlett-Packard\\Operations Orchestration\\RAS\\Java\\Default\\webapp\\conf\u201D or \u201CC\:\\Temp\u201D depending on where you place the .ora file. \n    TNSEntry - The entry name in the tnsnames.ora file that contains the connection information. For example, the value for the TNSEntry input is \u201CTestEntry\u201D if the content in the tnsnames.ora file looks like the following\: \n\nTestEntry \=\n  (DESCRIPTION \=\n   (ADDRESS \= (PROTOCOL \= TCP)(HOST \= 16.110.111.111)(PORT \= 1521))\n   (CONNECT_DATA \=\n     (SERVER \= DEDICATED)\n     (SERVICE_NAME \= orcl)\n   )\n )\n\n    Username - The username to connect to the Oracle database. \n    Password - The password for the Username.\n    Command - The command to execute. \n    Delimiter \u2013 The delimiter to use between the columns in the returnResult result.\n    Key \u2013 The key to use to keep multiple query results distinct.\n    timeout - Seconds to wait before timing out the SQL command execution.\nDefault values\: 0 \n\nResults\:\n    returnResult - This is the primary output. Returned the data returned for each row separated by the value you specified in the Delimiter input (for example, \u201Ckey16|lst|16\u201D).\n    columnNames - The names of the columns returned, separated by the value you specified in the Delimiter input (for example, \u201CMYKEY|NAME|ID\u201D).\n    rowsLeft - The number of rows remaining that match the query. \n\nResponses\:\n    more items - More rows are available for retrieval.\n    no more items - No more rows are available.\n    failure - There was an error executing the command.\n\nNotes\:\n1. This operation only supports Oracle. \n2. This operation can only execute the "SELECT" statement. For statements that modify the database, use the TNS Names SQL Command operation.\n\n</pre>\n\n\n
5d888ae5-fac2-4431-b430-d9ba38c5e795.36f15ee2-1d5b-412a-9ca2-f14b5d102d06.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
5d888ae5-fac2-4431-b430-d9ba38c5e795.40d0b7d2-05f5-4470-9e7f-5b82bc9a80b3.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
5d888ae5-fac2-4431-b430-d9ba38c5e795.b9b6d595-5955-4ad4-9ea5-6eeff80991f8.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
603ae502-7fcd-419b-bfa4-b328801cf073.61180147-d97e-44ef-8236-9b22427d3431.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
603ae502-7fcd-419b-bfa4-b328801cf073.8ed41942-0340-48ad-b464-c15a170bead6.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
603ae502-7fcd-419b-bfa4-b328801cf073.b1df3fab-402a-4a30-ab4b-530c90967438.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
603ae502-7fcd-419b-bfa4-b328801cf073.cd9de576-34a3-4949-8b6c-d90b9657302b.description=<pre>\nRuns a SQL query against an Oracle database, using the information in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation. Subsequent calls with the same information return the other rows.\n\nInputs\:\n    TNSPath -The path to the folder of the TNS file tnsnames.ora. This path must be accessible by the OO RAS service. For example, if the RAS and the Oracle server are installed on the same Windows system, the TNSPath might look like \u201CC\:\\app\\Administrator\\product\\11.1.0\\db_1\\network\\admin\u201D. If the RAS and the Oracle server are on different Windows systems, you can copy the tnsnames.ora file  to the RAS system. The TNSPath might look like \u201CC\:\\Program Files\\Hewlett-Packard\\Operations Orchestration\\RAS\\Java\\Default\\webapp\\conf\u201D or \u201CC\:\\Temp\u201D depending on where you place the .ora file. \n    TNSEntry - The entry name in the tnsnames.ora file that contains the connection information. For example, the value for the TNSEntry input is \u201CTestEntry\u201D if the content in the tnsnames.ora file looks like the following\: \n\nTestEntry \=\n  (DESCRIPTION \=\n   (ADDRESS \= (PROTOCOL \= TCP)(HOST \= 16.110.111.111)(PORT \= 1521))\n   (CONNECT_DATA \=\n     (SERVER \= DEDICATED)\n     (SERVICE_NAME \= orcl)\n   )\n )\n\n    Username - The username to connect to the Oracle database. \n    Password - The password for the Username.\n    Command - The command to execute. \n    Delimiter \u2013 The delimiter to use between the columns in the returnResult result.\n    Key \u2013 The key to use to keep multiple query results distinct.\n    timeout - Seconds to wait before timing out the SQL command execution.\nDefault values\: 0 \n\nResults\:\n    returnResult - This is the primary output. Returned the data returned for each row separated by the value you specified in the Delimiter input (for example, \u201Ckey16|lst|16\u201D).\n    columnNames - The names of the columns returned, separated by the value you specified in the Delimiter input (for example, \u201CMYKEY|NAME|ID\u201D).\n    rowsLeft - The number of rows remaining that match the query. \n\nResponses\:\n    more items - More rows are available for retrieval.\n    no more items - No more rows are available.\n    failure - There was an error executing the command.\n\nNotes\:\n1. This operation only supports Oracle. \n2. This operation can only execute the "SELECT" statement. For statements that modify the database, use the TNS Names SQL Command operation.\n\n</pre>\n\n\n
604eb26a-a1c2-4edb-982d-1c9a8c00f199.046b88ba-7896-48cb-85c5-1f9f69c07bc9.prompt=Input command(s)\:
604eb26a-a1c2-4edb-982d-1c9a8c00f199.349f4b04-4346-4381-bdb8-63896853b4dc.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
604eb26a-a1c2-4edb-982d-1c9a8c00f199.39ace440-526a-4a91-9cc8-eb122d8731ea.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
604eb26a-a1c2-4edb-982d-1c9a8c00f199.3d8fb01e-45f3-462b-b981-1e7c85a03381.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
604eb26a-a1c2-4edb-982d-1c9a8c00f199.46678ba0-a0f5-4f31-beb3-acd779c75397.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
604eb26a-a1c2-4edb-982d-1c9a8c00f199.9b939ea0-fd2e-4b44-9532-10c11fcb04ce.description=Runs Service Center Virtual Machine Manager (SCVMM) Cmdlets using Windows PowerShell. The complete syntax and descriptions of all cmdlets that can be used with this operation can be found at http\://www.microsoft.com/download/en/details.aspx?displaylang\=en&id\=20419. The operation creates a remote powershell session to the target host, loads the "Microsoft.SystemCenter.VirtualMachineManager" snap-in and executes the given command(s). \n\nInputs\:\n    host - The hostname or ip address of the SCVMM server.\n    username - The username to use when connecting to the server.\nValue format\: username@domain or domain\\username.\n    password - The password to use when connecting to the server.\n    authType - Specifies the mechanism that is used to authenticate the user's credentials. \nValid values\: Default, Negotiate, Credssp, Kerberos. (case-insensitive)\nDefault value\: Default.\n    commands - The PowerShell cmdlets to execute. For more that one command, you should write each one on a separate row and they will be executed sequentially. \nExample\: get-vmmserver -computerName "1.2.3.4"\n                get-virtualharddisk -all\n    delimiter - The delimiter used to separate each property name from the property value in the output table. \nDefault value\: "\:".\n    colDelimiter - The delimiter used to separate columns in the output table.\nDefault value\: ','\n    rowDelimiter - The delimiter used to separate rows in the output table. \nDefault value\: newline\n    version - The SCVMM Server version.\nDefault value\: 2008 R2\n\nResults\:\n    outputString - A string representation of the results returned by the operation. Essentially any command returns a PowerShell object which has properties, as you can observe from the returnResult. OutputString result converts each object to string and merges all the values into one string. If you want outputString to contain results similar to PowerShell console you should pipe Out-String at the end of the cmdlet  (e.g. Get-VirtualHardDisk -al l Format-List Location, Directory, Name, ID, HostName | Out-String). Doing this will determine returnResult to be something like Length\:xx, because the object is now of type String and Lenth is the only property of this type. This result can be useful in other situations where the PowerShell objects override ToString() method. Therefore, the outputString obtained running PowerShell command Get-Process (without Out-String pipe), will contain the names of the processes running on server.\n    returnResult - A table containing a row for each PSObject that the cmdlets emit. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format.\n    warnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\n\nResponses\:\nsuccess \t- The cmdlets were executed successfully.\nfailure \t- The cmdlets could not be executed.\n\nNotes\:\n1. Installation of Powershell 2.0 with winrm 2.0 on your client is required. The kit can be downloaded from here\: http\://support.microsoft.com/kb/968930.\n2. Before using this operation, please make sure you have enabled PowerShell remoting, by using the Enable-PSRemoting cmdlet.\n3. Windows Remote Management service must be running.\n4. In workgroup environments, enabling classic mode authentication for network logons may be needed. This can be performed by opening the "Local Security Policy" from Control Panel and selecting "Administrative Tools". Navigate to "Local Policies" -> "Security Options", double click on "Network Access\: Sharing and Security Model for local accounts" and set it to classic.\n5. Also, please modify the WSMan trusted hosts setting, by adding the IP addresses of all remoting clients to the list of trusted hosts. This can be done using one of the following commands\:\n        5.1. Set-item wsman\:localhost\\client\\trustedhosts -value * (adds all computers as trusted hosts)\n        5.2. Set-item wsman\:localhost\\client\\trustedhosts -value Computer (only adds Computer to the trusted hosts)\n        5.3. Set-item wsman\:localhost\\client\\trustedhosts -value *.domain.com (adds all computers in the specified domain)\n        5.4. Set-item wsman\:localhost\\client\\trustedhosts -value 10.10.10.1 (adds the remote computer with the IP address 10.10.10.1 to the trusted hosts list)\n6. Please read the folder's description for information on how to enable CredSSP authentication.\n</pre>
604eb26a-a1c2-4edb-982d-1c9a8c00f199.9e108d74-0da6-4653-a11a-a42df560f056.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
604eb26a-a1c2-4edb-982d-1c9a8c00f199.a141527c-2157-4053-9473-ec2814fe919c.description=<pre>Adds a flow variable into the local context (available to itself and child flows only)\n\nInput Parameters\:\nkeyName - the name of the flow variable to use\nmyValue - the value to assign the flow variable\n\nResponses\:\nsuccess - assigned the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, $myValue];</pre>
604eb26a-a1c2-4edb-982d-1c9a8c00f199.a2af2054-eb1d-4702-adef-156e4aad55f8.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
604eb26a-a1c2-4edb-982d-1c9a8c00f199.description=SCVMM_CloneVM will create a new VM based on a template VM in Hyper-V.\n\n
60d8880b-e0c6-4857-87d8-21fc30b9c74d.d5700126-3c43-47ff-933c-70fc63d7e64a.description=<pre>\nService to perform an HTTP GET via the Java HTTP Client\n\nInputs\:\nurl - the url to attempt to retrieve.\nusername - the username to authenticate to url with.\npassword - the password for username.\ntimeout - a timeout after which the connection should be terminated, or 0 for no timeout.\nuseCookies - Enables cookie tracking. Cookies will be stored between consecutive calls. valid options are\: true/false\nfollowRedirects - specifies whether or not the get command should automatically follow redirects.\ntrustAllRoots - enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it. valid options are\: true/false\nproxy - a proxy to use when accessing the web site.\nproxyPort - a port on the proxy to connect to.\nproxyUsername - a username to use when connecting to the proxy.\nproxyPassword - a password to use when connecting to the proxy.\nencodeURL - perform URL encoding.\nuserAgent - if the HTTP header USER_AGENT needs to be overridden, pass in the value here\ncharacterSet - the characterSet for HTTP Get request and response. Default is UTF-8.\n\nResponses\:\nsuccess - URL retrieved successfully.\nfailure - The url could not be retrieved.\n</pre>
60d8880b-e0c6-4857-87d8-21fc30b9c74d.eae48eb3-17ce-4726-acb9-96ad52bb7198.description=<pre>\nService to perform an HTTP GET via the Java HTTP Client\n\nInputs\:\nurl - the url to attempt to retrieve.\nusername - the username to authenticate to url with.\npassword - the password for username.\ntimeout - a timeout after which the connection should be terminated, or 0 for no timeout.\nuseCookies - Enables cookie tracking. Cookies will be stored between consecutive calls. valid options are\: true/false\nfollowRedirects - specifies whether or not the get command should automatically follow redirects.\ntrustAllRoots - enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it. valid options are\: true/false\nproxy - a proxy to use when accessing the web site.\nproxyPort - a port on the proxy to connect to.\nproxyUsername - a username to use when connecting to the proxy.\nproxyPassword - a password to use when connecting to the proxy.\nencodeURL - perform URL encoding.\nuserAgent - if the HTTP header USER_AGENT needs to be overridden, pass in the value here\ncharacterSet - the characterSet for HTTP Get request and response. Default is UTF-8.\n\nResponses\:\nsuccess - URL retrieved successfully.\nfailure - The url could not be retrieved.\n</pre>
61917b7f-c994-49ab-b908-1efeac160004.description=Depricate - Use System Account
63c55fd4-2ce3-4251-b586-42a2b5fcde4c.104b7de7-89ef-4a45-a8c1-9be69fed0c9f.description=Generic flow to send an e-mail
63c55fd4-2ce3-4251-b586-42a2b5fcde4c.50562e97-8a91-4fc4-841d-089926bdabc1.description=Generic flow to send an e-mail
63c55fd4-2ce3-4251-b586-42a2b5fcde4c.6e7bede6-e42b-41cc-b13b-ad93bd268f96.description=\nThe PowerOff should be a guest shutdown + power off, or there might be damage to the guest OS if power off abruptly.\n
63c55fd4-2ce3-4251-b586-42a2b5fcde4c.93cda484-3918-4510-b0e8-cc7448362f5e.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
63c55fd4-2ce3-4251-b586-42a2b5fcde4c.9d30f31a-14e4-4a26-8f3a-81120a46eb73.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
63c55fd4-2ce3-4251-b586-42a2b5fcde4c.c9e597a3-d329-4676-b287-16f703bb41ff.description=<pre>This subflow was created by the Web Services Wizard to invoke the powerOnService operation on https\://tufnellpark\:51443/hpio/controller/soap/v2?wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nserviceName - The input named powerOnService|serviceName of the complex type\: powerOnService\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\nrequestId - The output given by the XPath\: /Envelope/Body/powerOnServiceResponse/requestId/text()</pre>
64372c6b-01c4-456f-848a-a4a1ddb4b72f.description=SMTP server to send out E-Mails
64423f23-6afb-45ec-b962-e12df50401c2.6adb11d7-4402-4b1f-93b3-d7b9650243a3.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
64423f23-6afb-45ec-b962-e12df50401c2.72a2f720-5f1d-4f75-9b26-96a058f46f7a.description=<pre>\nRuns a SQL query against an Oracle database, using the information in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation. Subsequent calls with the same information return the other rows.\n\nInputs\:\n    TNSPath -The path to the folder of the TNS file tnsnames.ora. This path must be accessible by the OO RAS service. For example, if the RAS and the Oracle server are installed on the same Windows system, the TNSPath might look like \u201CC\:\\app\\Administrator\\product\\11.1.0\\db_1\\network\\admin\u201D. If the RAS and the Oracle server are on different Windows systems, you can copy the tnsnames.ora file  to the RAS system. The TNSPath might look like \u201CC\:\\Program Files\\Hewlett-Packard\\Operations Orchestration\\RAS\\Java\\Default\\webapp\\conf\u201D or \u201CC\:\\Temp\u201D depending on where you place the .ora file. \n    TNSEntry - The entry name in the tnsnames.ora file that contains the connection information. For example, the value for the TNSEntry input is \u201CTestEntry\u201D if the content in the tnsnames.ora file looks like the following\: \n\nTestEntry \=\n  (DESCRIPTION \=\n   (ADDRESS \= (PROTOCOL \= TCP)(HOST \= 16.110.111.111)(PORT \= 1521))\n   (CONNECT_DATA \=\n     (SERVER \= DEDICATED)\n     (SERVICE_NAME \= orcl)\n   )\n )\n\n    Username - The username to connect to the Oracle database. \n    Password - The password for the Username.\n    Command - The command to execute. \n    Delimiter \u2013 The delimiter to use between the columns in the returnResult result.\n    Key \u2013 The key to use to keep multiple query results distinct.\n    timeout - Seconds to wait before timing out the SQL command execution.\nDefault values\: 0 \n\nResults\:\n    returnResult - This is the primary output. Returned the data returned for each row separated by the value you specified in the Delimiter input (for example, \u201Ckey16|lst|16\u201D).\n    columnNames - The names of the columns returned, separated by the value you specified in the Delimiter input (for example, \u201CMYKEY|NAME|ID\u201D).\n    rowsLeft - The number of rows remaining that match the query. \n\nResponses\:\n    more items - More rows are available for retrieval.\n    no more items - No more rows are available.\n    failure - There was an error executing the command.\n\nNotes\:\n1. This operation only supports Oracle. \n2. This operation can only execute the "SELECT" statement. For statements that modify the database, use the TNS Names SQL Command operation.\n\n</pre>\n\n\n
64423f23-6afb-45ec-b962-e12df50401c2.7f0e5ea3-1e68-42d1-9294-27db69da935f.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
64423f23-6afb-45ec-b962-e12df50401c2.8ed6fb34-6368-4ca0-be1c-7a6843a4285c.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
64be4332-b3ac-4566-9cce-49762384ec1a.aed9824b-cb68-41f3-9676-d5a6e75b9109.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
64be4332-b3ac-4566-9cce-49762384ec1a.b9f8d110-c1d1-412d-8cca-c3fb8e558e59.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
66812258-b8b5-4825-be0f-49da3b56277c.5bd03758-f1eb-434c-b9ef-37d155e9f764.description=<pre>Runs a command and allows user to specify that it runs locally (in this case no port should be specified), via ssh, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\nhost - Hostname or ip address.\nport - Port number for connecting to the host.\nusername - Username to connect as.\npassword - Password of the user. If using a private key file this will be used as the passphrase for the file.\nprotocol - The protocol used to run the command (can be one of ssh, ROSH, GlobalShell, Telnet, RSH, REXEC, local, WMI, NASConnectTelnet, or HPOM).\ntimeout - (optional, default 90 seconds) time in milliseconds to wait for the command to complete; increase its value if you are getting incomplete output results or timeout.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\nenvironment - Specifies environment variables/values that need to be defined when running command.\nstartDir - The path to the starting directory.\npty - Whether to use pty (used by ssh, GlobalShell. Valid values\: true, false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on RAS host (used by ssh, GlobalShell).\nsasHost - The host we want to run the ROSH command on.\nsasHostUsername - The username used to run the ROSH command on sasHost.\nusernamePrompt - The prompt that when seen should send the username; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'\npasswordPrompt - The prompt that when given should send the password; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'Password\:'\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default, the path will have to be  changed on Windows 2000 systems\nnasDevice - The NAS device to run the command on when using the NASConnect protocol.\nnasDeviceConsoleMode - The NAS device console mode used to run the command scripts that run the command on the given NAS device. If this input is empty, command scripts are not used, and the connection to the NAS device and the command are issued directly in the console; this is not recommended, since its error handling capabilities are limited and it might result in success even when the command fails to execute. The values for this input can be found in the NAS web interface, as a drop-down list when a new command script is created (ex. Cisco IOS enable).\nhpomNode - Node on which the command is to be executed.\nhpomProtocol - Protocol to communicate with HPOM (http or https).\ncharacterSet - The characterSet name for stream encoding and decoding between the RAS and target machine. For example, SJIS,EUC-JP, UTF-8.  By default it is UTF-8 (used by ssh, GlobalShell, Telnet, RSH, REXEC).\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nstdErr - The STDERR of the command.\nstdOut - The STDOUT of the command.\n\nNotes\:\nTelnet protocol - Since telnet is not a remote execution protocol but a shell protocol the response will always be successful if the command was executed in the remote shell.  The return code of the specified command cannot be determined in this protocol.  If you must use the telnet protocol with this operation besure to check the command results. Consider using ssh or rexec protocol instead.\n</pre>
66812258-b8b5-4825-be0f-49da3b56277c.968c64e5-ec28-4518-bb06-c9f8432f3bf8.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
66812258-b8b5-4825-be0f-49da3b56277c.98a5caee-cbea-4ed0-a72d-e8a1993df8d5.description=<pre>Runs a command and allows user to specify that it runs locally (in this case no port should be specified), via ssh, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\nhost - Hostname or ip address.\nport - Port number for connecting to the host.\nusername - Username to connect as.\npassword - Password of the user. If using a private key file this will be used as the passphrase for the file.\nprotocol - The protocol used to run the command (can be one of ssh, ROSH, GlobalShell, Telnet, RSH, REXEC, local, WMI, NASConnectTelnet, or HPOM).\ntimeout - (optional, default 90 seconds) time in milliseconds to wait for the command to complete; increase its value if you are getting incomplete output results or timeout.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\nenvironment - Specifies environment variables/values that need to be defined when running command.\nstartDir - The path to the starting directory.\npty - Whether to use pty (used by ssh, GlobalShell. Valid values\: true, false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on RAS host (used by ssh, GlobalShell).\nsasHost - The host we want to run the ROSH command on.\nsasHostUsername - The username used to run the ROSH command on sasHost.\nusernamePrompt - The prompt that when seen should send the username; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'\npasswordPrompt - The prompt that when given should send the password; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'Password\:'\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default, the path will have to be  changed on Windows 2000 systems\nnasDevice - The NAS device to run the command on when using the NASConnect protocol.\nnasDeviceConsoleMode - The NAS device console mode used to run the command scripts that run the command on the given NAS device. If this input is empty, command scripts are not used, and the connection to the NAS device and the command are issued directly in the console; this is not recommended, since its error handling capabilities are limited and it might result in success even when the command fails to execute. The values for this input can be found in the NAS web interface, as a drop-down list when a new command script is created (ex. Cisco IOS enable).\nhpomNode - Node on which the command is to be executed.\nhpomProtocol - Protocol to communicate with HPOM (http or https).\ncharacterSet - The characterSet name for stream encoding and decoding between the RAS and target machine. For example, SJIS,EUC-JP, UTF-8.  By default it is UTF-8 (used by ssh, GlobalShell, Telnet, RSH, REXEC).\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nstdErr - The STDERR of the command.\nstdOut - The STDOUT of the command.\n\nNotes\:\nTelnet protocol - Since telnet is not a remote execution protocol but a shell protocol the response will always be successful if the command was executed in the remote shell.  The return code of the specified command cannot be determined in this protocol.  If you must use the telnet protocol with this operation besure to check the command results. Consider using ssh or rexec protocol instead.\n</pre>
66812258-b8b5-4825-be0f-49da3b56277c.99a0e7fd-6916-420d-9860-545fc18b52e8.description=<pre>Runs a command and allows user to specify that it runs locally (in this case no port should be specified), via ssh, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\nhost - Hostname or ip address.\nport - Port number for connecting to the host.\nusername - Username to connect as.\npassword - Password of the user. If using a private key file this will be used as the passphrase for the file.\nprotocol - The protocol used to run the command (can be one of ssh, ROSH, GlobalShell, Telnet, RSH, REXEC, local, WMI, NASConnectTelnet, or HPOM).\ntimeout - (optional, default 90 seconds) time in milliseconds to wait for the command to complete; increase its value if you are getting incomplete output results or timeout.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\nenvironment - Specifies environment variables/values that need to be defined when running command.\nstartDir - The path to the starting directory.\npty - Whether to use pty (used by ssh, GlobalShell. Valid values\: true, false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on RAS host (used by ssh, GlobalShell).\nsasHost - The host we want to run the ROSH command on.\nsasHostUsername - The username used to run the ROSH command on sasHost.\nusernamePrompt - The prompt that when seen should send the username; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'\npasswordPrompt - The prompt that when given should send the password; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'Password\:'\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default, the path will have to be  changed on Windows 2000 systems\nnasDevice - The NAS device to run the command on when using the NASConnect protocol.\nnasDeviceConsoleMode - The NAS device console mode used to run the command scripts that run the command on the given NAS device. If this input is empty, command scripts are not used, and the connection to the NAS device and the command are issued directly in the console; this is not recommended, since its error handling capabilities are limited and it might result in success even when the command fails to execute. The values for this input can be found in the NAS web interface, as a drop-down list when a new command script is created (ex. Cisco IOS enable).\nhpomNode - Node on which the command is to be executed.\nhpomProtocol - Protocol to communicate with HPOM (http or https).\ncharacterSet - The characterSet name for stream encoding and decoding between the RAS and target machine. For example, SJIS,EUC-JP, UTF-8.  By default it is UTF-8 (used by ssh, GlobalShell, Telnet, RSH, REXEC).\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nstdErr - The STDERR of the command.\nstdOut - The STDOUT of the command.\n\nNotes\:\nTelnet protocol - Since telnet is not a remote execution protocol but a shell protocol the response will always be successful if the command was executed in the remote shell.  The return code of the specified command cannot be determined in this protocol.  If you must use the telnet protocol with this operation besure to check the command results. Consider using ssh or rexec protocol instead.\n</pre>
66812258-b8b5-4825-be0f-49da3b56277c.afa2acb5-ad13-4468-b8ae-9d60bd7639c4.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
66812258-b8b5-4825-be0f-49da3b56277c.d29cfcc4-b465-41ba-873a-56b8994a33c7.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
67040373-4f89-4e24-a419-55b700ce1a6d.description=MPC NTP servers hostnames
677e9930-dabb-43d3-a6ea-f5a5b24db060.description=DNS domain for the NAT IP addresses
67bfd8a3-715c-49b1-ba6a-c979399f5517.1f871783-c316-4eef-a31e-328ba29bb6cc.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
67bfd8a3-715c-49b1-ba6a-c979399f5517.2016d2b9-043d-499b-b29e-1f1737ab1093.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
67bfd8a3-715c-49b1-ba6a-c979399f5517.78e0e5aa-0d4f-40c7-8f38-3e10590578a5.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
67bfd8a3-715c-49b1-ba6a-c979399f5517.792d9b43-f5f0-4901-8b7c-880189b7918e.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
67bfd8a3-715c-49b1-ba6a-c979399f5517.86c0df1b-0e3c-4d24-9e4d-3ecf2a6be240.description=Inputs\:\nscript.code\t- The source code of the script to invoke.\nscript.type\t- The type of the source code. It can have one of the following values\: SH (for unix scripts), BAT (for windows BAT scripts), VBS (for Windows Visual Basic scripts), PS1 (for Windows PowerShell scripts), PY2 (for Python scripts).\nscript.args\t- The arguments to be passed to the script.\nserver.name\ttrue\t- The list of names of the managed server on which the script should be executed. The elements from the list should be separated by ','.
67bfd8a3-715c-49b1-ba6a-c979399f5517.c679be47-e649-47bc-9b72-05035737f736.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
69740c08-1ac7-4991-b33f-be6a0ab8ae37.2b6c6cf0-afc9-4f7a-8976-1dd70029baf4.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
69740c08-1ac7-4991-b33f-be6a0ab8ae37.58e696af-6a19-48dd-bc2f-e67c7454fab4.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
6b5b50be-214f-48c4-a895-fed7e5a5ce1a.12f782e0-3778-45d6-b27f-d9ca348d80fd.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
6b5b50be-214f-48c4-a895-fed7e5a5ce1a.7b1b3142-203b-456d-9afd-82c12b7ad4e3.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
6b5b50be-214f-48c4-a895-fed7e5a5ce1a.bb75dc46-3442-4e41-b13d-27dc98ca71b9.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
6bf1d1bd-04d9-40c6-a702-91cb91013e49.26fabfec-8f98-4c01-9485-48c9d61f42d7.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
6bf1d1bd-04d9-40c6-a702-91cb91013e49.75627c7d-3bf2-4948-8a1d-8e2eb7acf6ba.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
6c0c16a8-5693-4616-ab6d-0116d5b6a103.44572ad8-06f0-4e67-bab5-65a544aa1604.description=<pre>\nRuns a SQL query against an Oracle database, using the information in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation. Subsequent calls with the same information return the other rows.\n\nInputs\:\n    TNSPath -The path to the folder of the TNS file tnsnames.ora. This path must be accessible by the OO RAS service. For example, if the RAS and the Oracle server are installed on the same Windows system, the TNSPath might look like \u201CC\:\\app\\Administrator\\product\\11.1.0\\db_1\\network\\admin\u201D. If the RAS and the Oracle server are on different Windows systems, you can copy the tnsnames.ora file  to the RAS system. The TNSPath might look like \u201CC\:\\Program Files\\Hewlett-Packard\\Operations Orchestration\\RAS\\Java\\Default\\webapp\\conf\u201D or \u201CC\:\\Temp\u201D depending on where you place the .ora file. \n    TNSEntry - The entry name in the tnsnames.ora file that contains the connection information. For example, the value for the TNSEntry input is \u201CTestEntry\u201D if the content in the tnsnames.ora file looks like the following\: \n\nTestEntry \=\n  (DESCRIPTION \=\n   (ADDRESS \= (PROTOCOL \= TCP)(HOST \= 16.110.111.111)(PORT \= 1521))\n   (CONNECT_DATA \=\n     (SERVER \= DEDICATED)\n     (SERVICE_NAME \= orcl)\n   )\n )\n\n    Username - The username to connect to the Oracle database. \n    Password - The password for the Username.\n    Command - The command to execute. \n    Delimiter \u2013 The delimiter to use between the columns in the returnResult result.\n    Key \u2013 The key to use to keep multiple query results distinct.\n    timeout - Seconds to wait before timing out the SQL command execution.\nDefault values\: 0 \n\nResults\:\n    returnResult - This is the primary output. Returned the data returned for each row separated by the value you specified in the Delimiter input (for example, \u201Ckey16|lst|16\u201D).\n    columnNames - The names of the columns returned, separated by the value you specified in the Delimiter input (for example, \u201CMYKEY|NAME|ID\u201D).\n    rowsLeft - The number of rows remaining that match the query. \n\nResponses\:\n    more items - More rows are available for retrieval.\n    no more items - No more rows are available.\n    failure - There was an error executing the command.\n\nNotes\:\n1. This operation only supports Oracle. \n2. This operation can only execute the "SELECT" statement. For statements that modify the database, use the TNS Names SQL Command operation.\n\n</pre>\n\n\n
6c0c16a8-5693-4616-ab6d-0116d5b6a103.c5c1c2e8-974c-426a-aaf7-860aa4db8a15.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
6c0c16a8-5693-4616-ab6d-0116d5b6a103.d43ab4df-6652-4d8d-b05f-33a0e4f9e728.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
6c0c16a8-5693-4616-ab6d-0116d5b6a103.e85afa48-2008-4143-a16c-b37a95e0a53f.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
6c6212d2-803a-4f30-8eb0-c8d575924478.1be55dcb-71ab-4305-9483-830c2d6f148e.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
6c6212d2-803a-4f30-8eb0-c8d575924478.877bb26b-5d76-4012-bd4d-2cc2c8243eeb.callout=Just Reuse existing template guid from input
6c8a33ee-c654-45e9-a933-f1be99c3589e.9a59dd10-ec9f-4bb1-8e02-5bcdaadb2fd1.description=To move the vCenter specific addSnapshot logic to vCenter folder.
6c8a33ee-c654-45e9-a933-f1be99c3589e.d61050ed-f757-4be7-91b5-97779a49e936.description=This flow will first REMOVE existing snapshots and then add a new snapshot.
6c8a33ee-c654-45e9-a933-f1be99c3589e.e986c66e-ded4-45b4-ad6e-180c99ef7f7f.prompt=Select from vm platforms
6c8a777e-75aa-4975-b57e-8b6684a97163.2022dad9-695f-46e0-b700-521955f222c7.prompt=Select from vm platforms
6c8a777e-75aa-4975-b57e-8b6684a97163.description=\nThe PowerOff should be a guest shutdown + power off, or there might be damage to the guest OS if power off abruptly.\n
6e8a5aa7-69f1-4e67-b5df-04331cae3ab7.051178d0-ec20-4b44-a498-fb170ea810c6.description=<pre>This operation checks whether a string matches another string, using a specific matching rule. The "toMatch" input is the string that is checked for matching the "matchTo" expression. \n\nInputs\:\n    matchType - The type of match to perform.\nValid values\: Exact Match, Contains, Contains Once, Does Not Contain, Match All Words, Match No Words, Regex\nDefault value\: Exact Match\n    toMatch - The string that is checked for matching.\n    matchTo - The string to match against.\nExample\: If "matchType" is \u201CRegEx\u201D, the "matchTo" input is a regular expression such as\: ^-?\\d+(([\\.,]\\d+)?)+$. \n    ignoreCase - Specifies whether to ignore case when matching or not.\nValid values\: False, True\nDefault value\: False\n\nResults\:\n    returnResult - This is the primary output. It contains the string "Matches" if the "toMatch" string matches the "matchTo" string. Otherwise, it contains the string "Does Not Match".  \n\nResponses\:\n    success - The operation completed as stated in the description.\n    failure - The operation completed unsuccessfully.\n</pre>
6e8a5aa7-69f1-4e67-b5df-04331cae3ab7.1013e3b3-680d-4a44-a7a0-77ed2958970d.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
6e8a5aa7-69f1-4e67-b5df-04331cae3ab7.113b62e6-4089-4c0d-9262-cd5b7da96232.description=<pre>This operation checks whether a string matches another string, using a specific matching rule. The "toMatch" input is the string that is checked for matching the "matchTo" expression. \n\nInputs\:\n    matchType - The type of match to perform.\nValid values\: Exact Match, Contains, Contains Once, Does Not Contain, Match All Words, Match No Words, Regex\nDefault value\: Exact Match\n    toMatch - The string that is checked for matching.\n    matchTo - The string to match against.\nExample\: If "matchType" is \u201CRegEx\u201D, the "matchTo" input is a regular expression such as\: ^-?\\d+(([\\.,]\\d+)?)+$. \n    ignoreCase - Specifies whether to ignore case when matching or not.\nValid values\: False, True\nDefault value\: False\n\nResults\:\n    returnResult - This is the primary output. It contains the string "Matches" if the "toMatch" string matches the "matchTo" string. Otherwise, it contains the string "Does Not Match".  \n\nResponses\:\n    success - The operation completed as stated in the description.\n    failure - The operation completed unsuccessfully.\n</pre>
6e8a5aa7-69f1-4e67-b5df-04331cae3ab7.6e85cf7d-34f1-4f97-97b9-21c70ade479c.description=<pre>This operation checks whether a string matches another string, using a specific matching rule. The "toMatch" input is the string that is checked for matching the "matchTo" expression. \n\nInputs\:\n    matchType - The type of match to perform.\nValid values\: Exact Match, Contains, Contains Once, Does Not Contain, Match All Words, Match No Words, Regex\nDefault value\: Exact Match\n    toMatch - The string that is checked for matching.\n    matchTo - The string to match against.\nExample\: If "matchType" is \u201CRegEx\u201D, the "matchTo" input is a regular expression such as\: ^-?\\d+(([\\.,]\\d+)?)+$. \n    ignoreCase - Specifies whether to ignore case when matching or not.\nValid values\: False, True\nDefault value\: False\n\nResults\:\n    returnResult - This is the primary output. It contains the string "Matches" if the "toMatch" string matches the "matchTo" string. Otherwise, it contains the string "Does Not Match".  \n\nResponses\:\n    success - The operation completed as stated in the description.\n    failure - The operation completed unsuccessfully.\n</pre>
6e8a5aa7-69f1-4e67-b5df-04331cae3ab7.7958f133-fa4d-43ea-b7b5-2c5461816a1d.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
6e8a5aa7-69f1-4e67-b5df-04331cae3ab7.84c2e21e-2e04-4385-a5f1-437abdfa4b5f.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
6e8a5aa7-69f1-4e67-b5df-04331cae3ab7.b0f8bb8e-0da9-480f-839e-6dac4fcbe9ed.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
6e8a5aa7-69f1-4e67-b5df-04331cae3ab7.e7830275-8097-4935-977a-ffda29c6475b.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
6e8a5aa7-69f1-4e67-b5df-04331cae3ab7.f19022da-e7a3-4d9d-a2ff-3e42f857bdf7.description=<pre>This operation checks whether a string matches another string, using a specific matching rule. The "toMatch" input is the string that is checked for matching the "matchTo" expression. \n\nInputs\:\n    matchType - The type of match to perform.\nValid values\: Exact Match, Contains, Contains Once, Does Not Contain, Match All Words, Match No Words, Regex\nDefault value\: Exact Match\n    toMatch - The string that is checked for matching.\n    matchTo - The string to match against.\nExample\: If "matchType" is \u201CRegEx\u201D, the "matchTo" input is a regular expression such as\: ^-?\\d+(([\\.,]\\d+)?)+$. \n    ignoreCase - Specifies whether to ignore case when matching or not.\nValid values\: False, True\nDefault value\: False\n\nResults\:\n    returnResult - This is the primary output. It contains the string "Matches" if the "toMatch" string matches the "matchTo" string. Otherwise, it contains the string "Does Not Match".  \n\nResponses\:\n    success - The operation completed as stated in the description.\n    failure - The operation completed unsuccessfully.\n</pre>
6ec27f3c-dbc8-4ce3-89d0-81626adb7bf0.69717983-fff9-4751-9f85-e9ca7a78093f.prompt=Input command(s)\:
6ec27f3c-dbc8-4ce3-89d0-81626adb7bf0.ab271c23-025f-413b-a4ef-6e9ccc41d618.description=Runs Service Center Virtual Machine Manager (SCVMM) Cmdlets using Windows PowerShell. The complete syntax and descriptions of all cmdlets that can be used with this operation can be found at http\://www.microsoft.com/download/en/details.aspx?displaylang\=en&id\=20419. The operation creates a remote powershell session to the target host, loads the "Microsoft.SystemCenter.VirtualMachineManager" snap-in and executes the given command(s). \n\nInputs\:\n    host - The hostname or ip address of the SCVMM server.\n    username - The username to use when connecting to the server.\nValue format\: username@domain or domain\\username.\n    password - The password to use when connecting to the server.\n    authType - Specifies the mechanism that is used to authenticate the user's credentials. \nValid values\: Default, Negotiate, Credssp, Kerberos. (case-insensitive)\nDefault value\: Default.\n    commands - The PowerShell cmdlets to execute. For more that one command, you should write each one on a separate row and they will be executed sequentially. \nExample\: get-vmmserver -computerName "1.2.3.4"\n                get-virtualharddisk -all\n    delimiter - The delimiter used to separate each property name from the property value in the output table. \nDefault value\: "\:".\n    colDelimiter - The delimiter used to separate columns in the output table.\nDefault value\: ','\n    rowDelimiter - The delimiter used to separate rows in the output table. \nDefault value\: newline\n    version - The SCVMM Server version.\nDefault value\: 2008 R2\n\nResults\:\n    outputString - A string representation of the results returned by the operation. Essentially any command returns a PowerShell object which has properties, as you can observe from the returnResult. OutputString result converts each object to string and merges all the values into one string. If you want outputString to contain results similar to PowerShell console you should pipe Out-String at the end of the cmdlet  (e.g. Get-VirtualHardDisk -al l Format-List Location, Directory, Name, ID, HostName | Out-String). Doing this will determine returnResult to be something like Length\:xx, because the object is now of type String and Lenth is the only property of this type. This result can be useful in other situations where the PowerShell objects override ToString() method. Therefore, the outputString obtained running PowerShell command Get-Process (without Out-String pipe), will contain the names of the processes running on server.\n    returnResult - A table containing a row for each PSObject that the cmdlets emit. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format.\n    warnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\n\nResponses\:\nsuccess \t- The cmdlets were executed successfully.\nfailure \t- The cmdlets could not be executed.\n\nNotes\:\n1. Installation of Powershell 2.0 with winrm 2.0 on your client is required. The kit can be downloaded from here\: http\://support.microsoft.com/kb/968930.\n2. Before using this operation, please make sure you have enabled PowerShell remoting, by using the Enable-PSRemoting cmdlet.\n3. Windows Remote Management service must be running.\n4. In workgroup environments, enabling classic mode authentication for network logons may be needed. This can be performed by opening the "Local Security Policy" from Control Panel and selecting "Administrative Tools". Navigate to "Local Policies" -> "Security Options", double click on "Network Access\: Sharing and Security Model for local accounts" and set it to classic.\n5. Also, please modify the WSMan trusted hosts setting, by adding the IP addresses of all remoting clients to the list of trusted hosts. This can be done using one of the following commands\:\n        5.1. Set-item wsman\:localhost\\client\\trustedhosts -value * (adds all computers as trusted hosts)\n        5.2. Set-item wsman\:localhost\\client\\trustedhosts -value Computer (only adds Computer to the trusted hosts)\n        5.3. Set-item wsman\:localhost\\client\\trustedhosts -value *.domain.com (adds all computers in the specified domain)\n        5.4. Set-item wsman\:localhost\\client\\trustedhosts -value 10.10.10.1 (adds the remote computer with the IP address 10.10.10.1 to the trusted hosts list)\n6. Please read the folder's description for information on how to enable CredSSP authentication.\n</pre>
6ec27f3c-dbc8-4ce3-89d0-81626adb7bf0.description=<pre> Calls "DB_GetHostGroupByResourcepool" to get the host group name in SCVMM, and then run SCVMM cmdlets to get the Cluster under this host group. The clusterName is filtered based on the output of the SCVMM cmdlet.\n\nInputs\:\n    \n    resourcePool - The name of the resource Pool. It is usually from server.respool. \n\n\nResults\:\n    clusterName - The name string of the cluster. \n   \nResponses\:\n    Failure - Could not retrieve the list of virtual machines or failed to extract the UUID.\n    Success - The operation executed with success and the result contains the UUID. \n\n</pre>
6ec27f3c-dbc8-4ce3-89d0-81626adb7bf0.f72e1ff5-07db-4b5e-a7a0-19c3f0724388.description=<pre>Adds a flow variable into the local context (available to itself and child flows only)\n\nInput Parameters\:\nkeyName - the name of the flow variable to use\nmyValue - the value to assign the flow variable\n\nResponses\:\nsuccess - assigned the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, $myValue];</pre>
6f6c4deb-8e12-4578-b239-4326dd0f1ba4.2e53d92b-3268-4b89-a30c-1834176512e0.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
6f6c4deb-8e12-4578-b239-4326dd0f1ba4.4f41c565-7a04-40b2-af33-2aae3ff87659.description=Generic flow to send an e-mail
6f6c4deb-8e12-4578-b239-4326dd0f1ba4.6829f0ae-dac9-49e9-b9f8-dfd6dc78ee27.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
6f6c4deb-8e12-4578-b239-4326dd0f1ba4.701ed91e-eaa6-4a98-9e9d-a56afc8a9541.description=Generic flow to send an e-mail
6f6c4deb-8e12-4578-b239-4326dd0f1ba4.92cd7901-ae05-4135-9826-b51fa700da04.description=Generic flow to send an e-mail
6f6c4deb-8e12-4578-b239-4326dd0f1ba4.ac7c5c72-2d21-4926-bfba-b5e8c5fcd9ef.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
6f6c4deb-8e12-4578-b239-4326dd0f1ba4.description=This workflow is used to notify the status of the subscription that was requested for provisioning\n\nInput Parameters\:\n   id\: Infrastructure Service id.\n\nResponses\:\n   success - If operation is successful.\n   failure - otherwise\n\nResult Fields\:
6f6c4deb-8e12-4578-b239-4326dd0f1ba4.df922e14-8e7d-4740-991a-e3b949543664.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
6f6c4deb-8e12-4578-b239-4326dd0f1ba4.f54e8208-8595-407c-abf0-d8fa2b4371ec.description=Generic flow to send an e-mail
713bd313-701b-44c9-9f11-3c7259f5a83c.fc26ee55-7449-4664-aab8-23da283ce61a.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
7179c459-61b3-48d5-a9da-1bee65736d34.description=Log entries for CSA for Matrix will be created in this file. Change to another name if the existing file gets too large to maintain and must be retained.
71a879de-a802-4a23-a958-b0f60facd09f.description=Physical, Virtual
733cdfd8-b799-4795-854c-f9af63f5ffd4.b4006fc2-7fcb-4be9-96fb-b65ea29cd000.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
75228d95-a8aa-4950-b2aa-34ee01a81ab3.1ffdb86c-c7e0-48d4-adb7-1a4232aaec59.prompt=Password\:
75228d95-a8aa-4950-b2aa-34ee01a81ab3.4c9b1a71-aee1-4d62-be66-c7e32c95273f.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
75228d95-a8aa-4950-b2aa-34ee01a81ab3.75bee430-7fdb-48e7-84e1-f4944cb14462.prompt=VMWare User\:
75228d95-a8aa-4950-b2aa-34ee01a81ab3.9939a6c5-18cb-49ca-84eb-adcf172500a8.prompt=Password\:
75228d95-a8aa-4950-b2aa-34ee01a81ab3.a3fd4775-6117-430b-be9b-fe49c7a79db3.prompt=Name of guest customization template\:
75228d95-a8aa-4950-b2aa-34ee01a81ab3.a8a31c22-a422-4aab-baa0-100102839c83.prompt=VMWare Host\:
75228d95-a8aa-4950-b2aa-34ee01a81ab3.bc5507e5-6d35-40fa-94af-ab0a63d164a1.prompt=VMWare Host\:
75228d95-a8aa-4950-b2aa-34ee01a81ab3.bf747bbd-f30e-40f8-9295-de0d5e5bdaca.prompt=VMWare User\:
75228d95-a8aa-4950-b2aa-34ee01a81ab3.d3da7fff-6a41-4e85-b85d-c17624f9347b.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
75228d95-a8aa-4950-b2aa-34ee01a81ab3.ea9abfbd-8115-4c1d-a9e0-0c0e6b15201e.description=<pre> Export a guest customization spec to customization spec XML string.\nThe exported customization spec xml string can be modified and imported to the vCenter Customization Specifications Manager using the 'Import Guest Customization Spec' operation.\n\nInputs\:\n    host - VMWare vCenter hostname or IP.\n    user - VMWare username.\n    password - VMWare user's password.\n    port - Port to connect on.\n    protocol - Connection protocol.\nValid values\: "https", "http"\n    closeSession - Close the internally kept VMWare Infrastructure API session at completion of operation.\nValid values\: "true", "false"\n    customizationTemplateName - Name of the customization specification to export. The customization specification should already exist in the vCenter customization specifications manager.\n\nResponses\:\n    success - The operation completed successfully.\n    failure - Something went wrong.\n\nReturns\:\n    returnResult - Returns the customization spec Xml string or the failure message.\n\nNotes\:\nThe returnResult of this operation can be used for the 'customizationSpecXml' input in the 'Clone Virtual Machine' operation, 'Clone Virtual Machine to Template' flow and  'Deploy Virtual Machine from Template' flow.\n</pre>
75228d95-a8aa-4950-b2aa-34ee01a81ab3.ee75786c-a6b1-4fdc-804a-c229c4036209.description=<pre> Export a guest customization spec to customization spec XML string.\nThe exported customization spec xml string can be modified and imported to the vCenter Customization Specifications Manager using the 'Import Guest Customization Spec' operation.\n\nInputs\:\n    host - VMWare vCenter hostname or IP.\n    user - VMWare username.\n    password - VMWare user's password.\n    port - Port to connect on.\n    protocol - Connection protocol.\nValid values\: "https", "http"\n    closeSession - Close the internally kept VMWare Infrastructure API session at completion of operation.\nValid values\: "true", "false"\n    customizationTemplateName - Name of the customization specification to export. The customization specification should already exist in the vCenter customization specifications manager.\n\nResponses\:\n    success - The operation completed successfully.\n    failure - Something went wrong.\n\nReturns\:\n    returnResult - Returns the customization spec Xml string or the failure message.\n\nNotes\:\nThe returnResult of this operation can be used for the 'customizationSpecXml' input in the 'Clone Virtual Machine' operation, 'Clone Virtual Machine to Template' flow and  'Deploy Virtual Machine from Template' flow.\n</pre>
75228d95-a8aa-4950-b2aa-34ee01a81ab3.f96c2e11-6c83-4504-80f6-cd192796d0f9.prompt=Name of guest customization template\:
75cb6b1e-c382-4209-a4c2-855cf8aa7b05.description=If set to true, CSA4M will save log entries to a file as set by CSA_DEBUG_LOGNAME at a location as set by CSA_DEBUG_LOGDIR.
76a827b9-351c-4f32-b50f-fe8b84504bbc.0f7c7a17-311e-4300-808f-8ba50b3c684d.description=<pre>Loops as many number of times as specified in the input, that is, counts from 1 to another number incrementing by 1 for each iteration.\n\nInputs\:\ncount - Number of loops to complete.\nreset - If true, then the counter will restart counting from 1.\n\nReturns\:\nThe number that was just counted.\n\nResponses\:\nhas more \t- Counting has not completed, one or more iterations are pending.\nno more \t- Counting completed. This will only be returned once, then counting restarts.\nfailure \t- Something went wrong.\n</pre>
76a827b9-351c-4f32-b50f-fe8b84504bbc.2e5b1573-3819-4163-a436-1173211700c8.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
76a827b9-351c-4f32-b50f-fe8b84504bbc.32caaa3f-f80e-4403-b5a0-ba92adaced06.description=<pre>Adds a flow variable into the local context (available to itself and child flows only)\n\nInput Parameters\:\nkeyName - the name of the flow variable to use\nmyValue - the value to assign the flow variable\n\nResponses\:\nsuccess - assigned the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, $myValue];</pre>
76a827b9-351c-4f32-b50f-fe8b84504bbc.519de7db-1460-4b38-9256-d3e20fee8553.description=<pre>Adds a flow variable into the local context (available to itself and child flows only)\n\nInput Parameters\:\nkeyName - the name of the flow variable to use\nmyValue - the value to assign the flow variable\n\nResponses\:\nsuccess - assigned the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, $myValue];</pre>
76a827b9-351c-4f32-b50f-fe8b84504bbc.650d397b-71fd-47c1-9da1-af24a1eec0d6.description=<pre>Adds a flow variable into the local context (available to itself and child flows only)\n\nInput Parameters\:\nkeyName - the name of the flow variable to use\nmyValue - the value to assign the flow variable\n\nResponses\:\nsuccess - assigned the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, $myValue];</pre>
76a827b9-351c-4f32-b50f-fe8b84504bbc.7b443383-00df-4fd7-8a26-81c1d9b898c2.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
76a827b9-351c-4f32-b50f-fe8b84504bbc.description=<pre>\nFlex up a VM to the specific CPU Memory and Disk that is requested.\n\nInput Parameters\:\n serviceName -name of the service that will be created with this flow\n VCenterHost -  vCenter host to execute against\n VCenterUsername - vCenter username\n VCenterPassword - vCenter password.\n virtualMachine - This is the virtual machine that will be flexed.\n dataStore -  target datastore on the vCenter host for the VMs\n hostSystem - target ESX host for the VMs\n cpuCount - number of cpus the virtual machine should have.\n memSize - amount of memory the virtual machine should have.\n addDisk - whether or not disk should be added to the vm.\n\nResponses\:\n   success - if the command completes execution and its exit code is 0\n   failure - otherwise\n\nResult Fields\:\n NA\n</pre>
76a827b9-351c-4f32-b50f-fe8b84504bbc.e44e5257-8cdc-4d9d-93a3-efc2bff1362c.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
76a827b9-351c-4f32-b50f-fe8b84504bbc.e980cfc0-d861-44a1-b38a-34bb92fd1001.description=<pre>Adds a flow variable into the local context (available to itself and child flows only)\n\nInput Parameters\:\nkeyName - the name of the flow variable to use\nmyValue - the value to assign the flow variable\n\nResponses\:\nsuccess - assigned the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, $myValue];</pre>
76bb3c72-3da3-4a4d-afbe-c1ae3ded6c90.06c147fb-218c-4639-89e0-45806d79cb7e.prompt=SOAP URL\:
76bb3c72-3da3-4a4d-afbe-c1ae3ded6c90.0b4ddf5a-cb31-4cb2-a5bd-fddfb335af7b.prompt=Password of HP IO user account\:
76bb3c72-3da3-4a4d-afbe-c1ae3ded6c90.0cb00e05-6efa-41d6-ab35-6e0f821c68d3.prompt=SOAP endpoint name\:
76bb3c72-3da3-4a4d-afbe-c1ae3ded6c90.161db421-eded-4bf1-9ba5-a062faf3b5b9.prompt=SOAP URL\:
76bb3c72-3da3-4a4d-afbe-c1ae3ded6c90.40b7b243-1d64-4be4-aad1-3cb434709aac.description=<pre>Checks if a number or word is greater than or equal to another number or word. Word comparison is case-sensitive in alphabetical order.\n\nInputs\:\nvalue1 - The first value.\nvalue2 - The second value.\n\nReturns\:\nvalue1 >\= value2\n\nResponses\:\nsuccess - The boolean operation was evaluated to true.\nfailure - Something went wrong or the boolean operation returned false.\n</pre>
76bb3c72-3da3-4a4d-afbe-c1ae3ded6c90.5d44ce79-1dda-47ff-94b9-f2d75b4e17e5.description=<pre>This subflow was created by the Web Services Wizard to invoke the getRequestInfo operation on https\://tufnellpark\:51443/hpio/controller/soap/v2?wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nrequestId - The input named getRequestInfo|requestId of the complex type\: getRequestInfo\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\ncreatedByUser - The output given by the XPath\: /Envelope/Body/getRequestInfoResponse/request/createdByUser/text()\nendEpoch - The output given by the XPath\: /Envelope/Body/getRequestInfoResponse/request/endEpoch/text()\nid - The output given by the XPath\: /Envelope/Body/getRequestInfoResponse/request/id/text()\npercentComplete - The output given by the XPath\: /Envelope/Body/getRequestInfoResponse/request/percentComplete/text()\nserviceName - The output given by the XPath\: /Envelope/Body/getRequestInfoResponse/request/serviceName/text()\nstartEpoch - The output given by the XPath\: /Envelope/Body/getRequestInfoResponse/request/startEpoch/text()\nstatus.enumValue - The output given by the XPath\: /Envelope/Body/getRequestInfoResponse/request/status/enumValue/text()\nstatus.otherValue - The output given by the XPath\: /Envelope/Body/getRequestInfoResponse/request/status/otherValue/text()\nsubmitEpoch - The output given by the XPath\: /Envelope/Body/getRequestInfoResponse/request/submitEpoch/text()\ntemplateName - The output given by the XPath\: /Envelope/Body/getRequestInfoResponse/request/templateName/text()\ntype.enumValue - The output given by the XPath\: /Envelope/Body/getRequestInfoResponse/request/type/enumValue/text()\ntype.otherValue - The output given by the XPath\: /Envelope/Body/getRequestInfoResponse/request/type/otherValue/text()</pre>
76bb3c72-3da3-4a4d-afbe-c1ae3ded6c90.60952c80-90da-4da7-92b7-02f0e61d051f.description=<pre>Invokes web service methods.  This operation should not be used directly\!  Please use the wizard to build flows that use this operation.\n\nInputs\:\nxmlTemplate - The template of the soap request to make.\ninputMap - A map used to map between template names and user-friendly names. The tamplate names are pipe-delimited xpaths of the xmltemplate location, with a numerical element for lists.\nurl - The url to post to. \nheader_SOAPAction - The SOAPAction http header field, defined by many web services for indicating the intent of the request\nwswAuthenticationType - The authentication type to use for the username and password input. http is default (Uses http authentication), other options are 'ws-security digest' and 'ws-security text' WARNING\: ws-security text transmits passwords in clear-text\nWSSecuritySignRequest - true or false, should the SOAP request be signed using WS-Security.\nWSSecurityEncryptRequest - true or false, should the entire SOAP request be signed using WS-Security\nWSSecurityTimestampRequest - true or false, should the Timestamp attribute be added to the WS-Security header\nWSSecurityKeystore - keystore to use for encrypting and signing requests.\nWSSecurityKeystoreType - The type of WSSecurityKeystore.\nWSSecurityKeystorePassword - The password for WSSecurityKeystore.\ncontentType - Value to be used in the Content-Type http header\nusername - The username to use for authenticating with the web service\npassword - The password to use for authenticating with the web service\ntrustAllRoots - Enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it. valid options are\: true/false.\nuseCookies - Enables cookie tracking. Cookies will be stored between consecutive calls. valid options are\: true/false.\ntimeout - a timeout after which the connection should be terminated, or 0 for no timeout.\nproxy - A proxy to use when accessing the web service.\nproxyPort - A port on the proxy to connect to.\nproxyUsername - A username to use when connecting to the proxy.\nproxyPassword - A password to use when connecting to the proxy.\nkeystore - the path to the keystore to use for SSL Client Certificates when using http authentication\nkeystorePassword - the password for the keystore when using http authentication\nICONCLUDE_WSW_VERSION - This value is used internally by the operation\n\nAny additional inputs that follow these are added by the Web Service Wizard, and they are specific to the particular web service method being called.\n\nResponses\:\nsuccess - SOAP request completed successfully.\nfailure - something went wrong.\n\nReturns\:\ndocument - raw XML response\ndocumentStripped - raw XML response stripped of namespaces for ease in parsing with XML XPath operations\n\nNotes\:\nIf you add new step-level inputs with the name header_<headername>, where <headername> is the name of an html header, then that html header will be set to the given value in the HTTP request.\n\n</pre>
76bb3c72-3da3-4a4d-afbe-c1ae3ded6c90.93ff5718-490e-4937-8a79-26d186a401bd.description=<pre>This subflow was created by the Web Services Wizard to invoke the powerOnLogicalServers operation on https\://tufnellpark\:51443/hpio/controller/soap/v2?wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nlogicalServerNames0 - The input named powerOnLogicalServers|0|logicalServerNames of the complex type\: powerOnLogicalServers|0\nserviceName - The input named powerOnLogicalServers|serviceName of the complex type\: powerOnLogicalServers\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\nrequestId - The output given by the XPath\: /Envelope/Body/powerOnLogicalServersResponse/requestId/text()</pre>
76bb3c72-3da3-4a4d-afbe-c1ae3ded6c90.98bbaa5b-6390-4118-864e-7c4c119ca084.prompt=HP IO request ID\:
76bb3c72-3da3-4a4d-afbe-c1ae3ded6c90.acdbc2a6-99f8-4d22-b1e9-1a90d82608c9.prompt=IO request ID\:
76bb3c72-3da3-4a4d-afbe-c1ae3ded6c90.d210836d-42ca-42d1-b004-b9d7c5f78b5c.prompt=Name of HP IO user account\:
76bb3c72-3da3-4a4d-afbe-c1ae3ded6c90.description=<pre>This subflow was created by the Web Services Wizard to invoke the powerOnLogicalServers operation on https\://tufnellpark\:51443/hpio/controller/soap/v2?wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nlogicalServerNames0 - The input named powerOnLogicalServers|0|logicalServerNames of the complex type\: powerOnLogicalServers|0\nserviceName - The input named powerOnLogicalServers|serviceName of the complex type\: powerOnLogicalServers\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\nrequestId - The output given by the XPath\: /Envelope/Body/powerOnLogicalServersResponse/requestId/text()</pre>
76bb3c72-3da3-4a4d-afbe-c1ae3ded6c90.e518e5e5-cace-4389-8aaa-221792208e31.description=<pre>This subflow was created by the Web Services Wizard to invoke the getService operation on https\://tufnellpark\:51443/hpio/controller/soap/v2?wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nserviceName - The input named getService|serviceName of the complex type\: getService\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\nbasedOnTemplate - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/basedOnTemplate/text()\nbillingCode - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/billingCode/text()\ncost.units - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/cost/units/text()\ncost.value - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/cost/value/text()\ncreateEpoch - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/createEpoch/text()\nendEpoch - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/leasePeriod/endEpoch/text()\nenumValue - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/status/enumValue/text()\nfixedCost.units - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/fixedCost/units/text()\nfixedCost.value - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/fixedCost/value/text()\nlastModifiedEpoch - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/lastModifiedEpoch/text()\nname - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/name/text()\nnotes - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/notes/text()\notherValue - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/status/otherValue/text()\nownerName - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/ownerName/text()\nservice - The output given by the XPath\: /Envelope/Body/getServiceResponse/service\nstartEpoch - The output given by the XPath\: /Envelope/Body/getServiceResponse/service/leasePeriod/startEpoch/text()</pre>
76bb3c72-3da3-4a4d-afbe-c1ae3ded6c90.e973e24d-ed2d-4568-9231-543fc40584aa.prompt=Enter a value for value1
76bb3c72-3da3-4a4d-afbe-c1ae3ded6c90.ea60a4bb-0355-4a69-ac64-a09b4e4d8838.prompt=SOAP URL\:
76bb3c72-3da3-4a4d-afbe-c1ae3ded6c90.ef15e894-04ce-499f-ad0b-9c9fca25aa7f.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
76bb3c72-3da3-4a4d-afbe-c1ae3ded6c90.f1b2b91b-329d-46f4-8fbe-5626e6dc04c3.prompt=SOAP Endpoint name\:
76bb3c72-3da3-4a4d-afbe-c1ae3ded6c90.f51bda5e-b271-492a-b18c-6f1e88556db4.description=<pre>Sleeps for "X" seconds.\n\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason</pre>
77bd8dac-412c-4b49-a709-5f635cedf9ec.045d9b77-64cb-4a98-b901-fe01464bab15.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
77bd8dac-412c-4b49-a709-5f635cedf9ec.0604293a-14ae-4c3b-a638-672a3d074cf3.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
77bd8dac-412c-4b49-a709-5f635cedf9ec.0fc6c72d-7882-4739-b342-bd36956651e2.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
77bd8dac-412c-4b49-a709-5f635cedf9ec.4b3a4296-4e5b-496e-ab38-64454fedb6ae.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
77bd8dac-412c-4b49-a709-5f635cedf9ec.57ed2418-1ec6-4af2-a246-a15b753194bf.description=The flow outputs the ESL Virtual Technology field required by ESL.\nThe field can be one of the following\:\n   - Physical servers -  "Logical Server"\n   - vCenter Servers - "VMWare"\n   - HyperV Servers - "Hyper-V"\n\nInput Parameters\:\n   serverResourcePool - The Resource Pool in which the server is being provisioned.l\n   serverType - The type of server, either V for virtual or P for Physical\n\nResponses\:\n   success - the Virtual Technology Field was populated\n   failure - otherwise\n\nResult Fields\:\n   eslVirtualTech - The string representing the virtual technology
77bd8dac-412c-4b49-a709-5f635cedf9ec.72442ad3-9515-4a44-954f-64e71ed588b3.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
77bd8dac-412c-4b49-a709-5f635cedf9ec.86c5ba7e-df82-425c-a889-dba51f9e328f.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
77bd8dac-412c-4b49-a709-5f635cedf9ec.c273b660-9af1-46cb-86a3-7575153d2c43.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
77bd8dac-412c-4b49-a709-5f635cedf9ec.cd928a9a-4177-4011-868b-dde8346eb081.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
77bd8dac-412c-4b49-a709-5f635cedf9ec.ce7727c4-36eb-4226-ae6f-111e57ab4032.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
77bd8dac-412c-4b49-a709-5f635cedf9ec.description=This flow when provided an InfrastructureService id, will deploy IO based service. It will update the provided Infrastructure Service with Server Groups followed by Servers present in a Server Group.\n\nInput Parameters\:\n   id\: Infrastructure Service id.\n\nResponses\:\n   success - if the IO deploy operation is successful.\n   failure - otherwise\n\nResult Fields\:
77bd8dac-412c-4b49-a709-5f635cedf9ec.ebc30715-85d8-4c06-8c74-1021a29456d1.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
77bd8dac-412c-4b49-a709-5f635cedf9ec.fd3bd0a5-9ab1-4919-bfe2-f880a149d6ee.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
77bd8dac-412c-4b49-a709-5f635cedf9ec.fdbf1335-df52-459c-aa4c-c00dab08b4f8.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
783a5859-a61d-4376-8770-fd3e31273df9.description=Useraccount in MOE
79a2c2e6-fdad-40d6-8a41-56df1811ff49.07998c14-691e-43e0-9bd6-1a83eabf4823.description=Reboot the given Server managed in SA.  \n\nInputs\:\ncoreHost - The DNS name or IP Address of your SAS core.\ncorePort - The port to Connect to your SAS core on.\ncoreProtocol - The protocol to connect to your SAS core with. Either HTTP or HTTPS.\ncoreUsername - The username for host.\ncorePassword - The password for host.\ncoreVersion - The version of SAS to use.\nagent - Name of the server to reboot now.\nwait - An integer value specifying How many milliseconds should be waited for the job to finish. If not specified the job is started, but may not have finished.\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n\nReturns\:\nreturnResult - The id of the job created.
79a2c2e6-fdad-40d6-8a41-56df1811ff49.09e0cb80-788f-4279-b9b9-d5fe333e3d9e.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
79a2c2e6-fdad-40d6-8a41-56df1811ff49.252cad34-ea91-4c64-a8eb-033c578035e5.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
79a2c2e6-fdad-40d6-8a41-56df1811ff49.5170ac21-dd35-43a9-8f71-cda1f182219b.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
79a2c2e6-fdad-40d6-8a41-56df1811ff49.5175e41b-c591-4354-8585-ae3e13d0d556.description=<pre>Sleeps for "X" seconds.\n\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason</pre>
79a2c2e6-fdad-40d6-8a41-56df1811ff49.610e1264-fda7-4681-b195-ed027e14f6e0.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
79a2c2e6-fdad-40d6-8a41-56df1811ff49.6df36cc3-4d55-4f22-9abc-a91a60473ca2.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
79a2c2e6-fdad-40d6-8a41-56df1811ff49.729b2866-c40f-4f2b-ba9c-20a98110b0dd.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
79a2c2e6-fdad-40d6-8a41-56df1811ff49.78e83d51-b4b6-4583-85c0-3144fe682238.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
79a2c2e6-fdad-40d6-8a41-56df1811ff49.81801911-b680-4af3-b8e1-550ac7b0b0b6.callout=This is only to ensure that SA agent is registered with FQDN and not short name
79a2c2e6-fdad-40d6-8a41-56df1811ff49.81f1bff2-25aa-469a-984e-7af106228729.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
79a2c2e6-fdad-40d6-8a41-56df1811ff49.83a77629-4793-455b-967d-9065e00765d4.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
79a2c2e6-fdad-40d6-8a41-56df1811ff49.8e8ddae0-f66f-4b2e-b088-4770675e50eb.description=<pre>Counts from one number to another number.\n\nInputs\:\nfrom - The number to start counting at\nto - The number to count to\nincrementBy - The amount to increment by during each count.\nreset - If set to true, then the counter will restart counting from the beginning.\n\nResponses\:\nhas more - Not yet done counting.\nfailure - Something went wrong.\nno more - Done counting. This will only be returned once, then counting restarts.\n\nReturns\:\nThe number that was just counted.</pre>
79a2c2e6-fdad-40d6-8a41-56df1811ff49.92e0eb85-f2c6-4601-99f2-e57e258119a5.description=<pre>This operation checks whether a string matches another string, using a specific matching rule. The "toMatch" input is the string that is checked for matching the "matchTo" expression. \n\nInputs\:\n    matchType - The type of match to perform.\nValid values\: Exact Match, Contains, Contains Once, Does Not Contain, Match All Words, Match No Words, Regex\nDefault value\: Exact Match\n    toMatch - The string that is checked for matching.\n    matchTo - The string to match against.\nExample\: If "matchType" is \u201CRegEx\u201D, the "matchTo" input is a regular expression such as\: ^-?\\d+(([\\.,]\\d+)?)+$. \n    ignoreCase - Specifies whether to ignore case when matching or not.\nValid values\: False, True\nDefault value\: False\n\nResults\:\n    returnResult - This is the primary output. It contains the string "Matches" if the "toMatch" string matches the "matchTo" string. Otherwise, it contains the string "Does Not Match".  \n\nResponses\:\n    success - The operation completed as stated in the description.\n    failure - The operation completed unsuccessfully.\n</pre>
79a2c2e6-fdad-40d6-8a41-56df1811ff49.a0247c4d-1039-48f3-9804-b9be39c27c5a.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
79a2c2e6-fdad-40d6-8a41-56df1811ff49.b7cf565c-77a9-42fc-ae21-6da605b99375.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
79a2c2e6-fdad-40d6-8a41-56df1811ff49.be79587b-c92c-4d7e-b7f1-55bb5d8e342b.description=<pre>Sleeps for "X" seconds.\n\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason</pre>
79a2c2e6-fdad-40d6-8a41-56df1811ff49.cfaf5e96-fcd4-47e6-97a0-4ea83eecaa16.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
79a2c2e6-fdad-40d6-8a41-56df1811ff49.e2cff56d-fba8-4cea-a082-aa1fea531757.description=Checks to see if a job is completed or not\n\nInputs\:\ncoreHost - The DNS name or IP Address of your SAS core.\ncorePort - The port to Connect to your SAS core on.\ncoreProtocol - The protocol to connect to your SAS core with. Either HTTP or HTTPS.\ncoreUsername - The username for host.\ncorePassword - The password for host.\ncoreVersion - The version of SAS to use.\njobID - the id of the job\n\nResponses\:\nrunning - job is still running\ncompleted - job has completed or is terminated in error\nfailure - failed to retrieve data
79a2c2e6-fdad-40d6-8a41-56df1811ff49.e5525bbe-0bce-451f-a465-b7ca0f10402e.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
7a48cda0-745c-4e62-94d9-6026f9b63de8.description=json template for ESL API - update CI status.
7a4d62b0-962b-4f3d-968c-0278fea52757.c5f6c696-526b-4195-9ba9-a7698a25f23d.prompt=Select from vm platforms
7a4d62b0-962b-4f3d-968c-0278fea52757.description=<pre>\nCreate a VM from a VM template. This is the controller flow to check and dispatch to vCenter or SCVMM accordingly.\n\nInput Parameters\:\n vmName - name of the VM that will be created with this flow\n templateName -  name of the VM template to clone in vCenter\n osType - linux or windows\n host -  vCenter ?? from outside or from inside?\n user - vCenter username\n password - vCenter password\n vmDatacenter -  target Datacenter on the vCenter host for the VMs\n dataStore -  target datastore on the vCenter host for the VMs\n vmResourcePool - target resource pool for the VMs\n\nserver.bakvlangid\t\nserver.vlan1gid\t\nserver.vlan2gid\t\nserver.slalevel\t\nserver.tshirtsize\t\n\n\nResponses\:\n success - The operation completed successfully.\n failure - Something went wrong.\n   \n\nResult Fields\:\n vmId - VMID of the Clone \n</pre>
7a4d62b0-962b-4f3d-968c-0278fea52757.e15b235a-5d37-4dfc-9219-edbc02e54f9b.description=SCVMM_CloneVM will create a new VM based on a template VM in Hyper-V.\n\n
7a4d62b0-962b-4f3d-968c-0278fea52757.faea647a-947e-47b2-9ffe-2f1ae8de126a.description=<pre>\nCreate a VM from a VM template. Must specify either hostSystem, clusterName, or vmResourcePool as a target location for VMs.\n\nThis flow is copied from CSA/3.x/Providers/vCenter/vCenter Clone Server/Subflows, and make necessary changes according to PC's requirements.\nChanges - Add input customizationSpecXml\n\nInput Parameters\:\n vmName - name of the VM that will be created with this flow\n templateName -  name of the VM template to clone in vCenter\n osType - linux or windows\n host -  vCenter host to execute against\n user - vCenter username\n password - vCenter password\n vmDatacenter -  target Datacenter on the vCenter host for the VMs\n dataStore -  target datastore on the vCenter host for the VMs\n hostSystem - target ESX host for the VMs\n clusterName - target cluster for the VMs\n vmResourcePool - target resource pool for the VMs\n CPUs - Number of cpus to be set on the VMs\n Memory - Amount of Memory in MB to be set on VMs. Memory should be a multiple of 4.\n port - Port Number toconnect on\n protocol - Connection prtocol(http, https)\n availableCPU - Available CPU in  vCenter\n availableMemory - Available Memory in MB in vCenter\n\n\nResponses\:\n success - The operation completed successfully.\n failure - Something went wrong.\n   \n\nResult Fields\:\n vmId - VMID of the Clone \n</pre>
7a607422-f497-4900-9a93-95c1f4a27217.6b2821e5-1309-45d3-93de-f43af01ef2eb.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
7abacbe0-16a1-44bd-a48b-61f8d14b0c75.description=Microsoft SQL Server 2008 R2 instance port. 1433  is the port used for the default instance.
7b30bb63-3dfd-4281-9efc-7f7c428b08d0.description=DNS domain for the cloud machine entries / IP addresses
7b7ce919-28d7-4212-87fb-df46810baa4c.description=The name of the last part of the script stored in HP SA to change the password - the full name of the script has to be in the format "${server.os} ${param.sa.pwdChangeScript}", e.g. "LINUX Change Password" if ${param.sa.pwdChangeScript} is set to "Change Password".
7b8b5107-00e0-4474-84f8-93e13b3c45f1.24deb7c3-72e1-4d0e-b1bb-ad0b18f3ec52.description=<pre>Adds a flow variable into the local context (available to itself and child flows only)\n\nInput Parameters\:\nkeyName - the name of the flow variable to use\nmyValue - the value to assign the flow variable\n\nResponses\:\nsuccess - assigned the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, $myValue];</pre>
7b8b5107-00e0-4474-84f8-93e13b3c45f1.d7616f9b-7f86-4549-9e00-735aef37eb66.prompt=Input command(s)\:
7b8b5107-00e0-4474-84f8-93e13b3c45f1.fb4e6e83-c1f0-411e-b5b5-21a84957ee5d.description=Runs Service Center Virtual Machine Manager (SCVMM) Cmdlets using Windows PowerShell. The complete syntax and descriptions of all cmdlets that can be used with this operation can be found at http\://www.microsoft.com/download/en/details.aspx?displaylang\=en&id\=20419. The operation creates a remote powershell session to the target host, loads the "Microsoft.SystemCenter.VirtualMachineManager" snap-in and executes the given command(s). \n\nInputs\:\n    host - The hostname or ip address of the SCVMM server.\n    username - The username to use when connecting to the server.\nValue format\: username@domain or domain\\username.\n    password - The password to use when connecting to the server.\n    authType - Specifies the mechanism that is used to authenticate the user's credentials. \nValid values\: Default, Negotiate, Credssp, Kerberos. (case-insensitive)\nDefault value\: Default.\n    commands - The PowerShell cmdlets to execute. For more that one command, you should write each one on a separate row and they will be executed sequentially. \nExample\: get-vmmserver -computerName "1.2.3.4"\n                get-virtualharddisk -all\n    delimiter - The delimiter used to separate each property name from the property value in the output table. \nDefault value\: "\:".\n    colDelimiter - The delimiter used to separate columns in the output table.\nDefault value\: ','\n    rowDelimiter - The delimiter used to separate rows in the output table. \nDefault value\: newline\n    version - The SCVMM Server version.\nDefault value\: 2008 R2\n\nResults\:\n    outputString - A string representation of the results returned by the operation. Essentially any command returns a PowerShell object which has properties, as you can observe from the returnResult. OutputString result converts each object to string and merges all the values into one string. If you want outputString to contain results similar to PowerShell console you should pipe Out-String at the end of the cmdlet  (e.g. Get-VirtualHardDisk -al l Format-List Location, Directory, Name, ID, HostName | Out-String). Doing this will determine returnResult to be something like Length\:xx, because the object is now of type String and Lenth is the only property of this type. This result can be useful in other situations where the PowerShell objects override ToString() method. Therefore, the outputString obtained running PowerShell command Get-Process (without Out-String pipe), will contain the names of the processes running on server.\n    returnResult - A table containing a row for each PSObject that the cmdlets emit. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format.\n    warnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\n\nResponses\:\nsuccess \t- The cmdlets were executed successfully.\nfailure \t- The cmdlets could not be executed.\n\nNotes\:\n1. Installation of Powershell 2.0 with winrm 2.0 on your client is required. The kit can be downloaded from here\: http\://support.microsoft.com/kb/968930.\n2. Before using this operation, please make sure you have enabled PowerShell remoting, by using the Enable-PSRemoting cmdlet.\n3. Windows Remote Management service must be running.\n4. In workgroup environments, enabling classic mode authentication for network logons may be needed. This can be performed by opening the "Local Security Policy" from Control Panel and selecting "Administrative Tools". Navigate to "Local Policies" -> "Security Options", double click on "Network Access\: Sharing and Security Model for local accounts" and set it to classic.\n5. Also, please modify the WSMan trusted hosts setting, by adding the IP addresses of all remoting clients to the list of trusted hosts. This can be done using one of the following commands\:\n        5.1. Set-item wsman\:localhost\\client\\trustedhosts -value * (adds all computers as trusted hosts)\n        5.2. Set-item wsman\:localhost\\client\\trustedhosts -value Computer (only adds Computer to the trusted hosts)\n        5.3. Set-item wsman\:localhost\\client\\trustedhosts -value *.domain.com (adds all computers in the specified domain)\n        5.4. Set-item wsman\:localhost\\client\\trustedhosts -value 10.10.10.1 (adds the remote computer with the IP address 10.10.10.1 to the trusted hosts list)\n6. Please read the folder's description for information on how to enable CredSSP authentication.\n</pre>
7c16aa1a-46ce-4b18-ba35-bf39de2a6155.69919917-9c02-4f82-b4ca-27e1c724c39d.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
7d679597-87ff-44b8-8d43-e4706a2ff958.description=The directory path used by the Oracle 10g database server that will be monitored by CSA using SiteScope application monitoring.
7d6b8097-d6fe-4df3-9f51-9cd0ba398b19.1426f9b2-1bfb-4b5b-9ce5-473df6e3c5f3.description=<pre>\nAccepts an object in the JavaScript Object Notation format (JSON) and\nreturns a value for the specified key.\n\nThe JSON format encodes objects as a set of unordered key/value pairs, which is\nsimilar to a structure or map in other programming languages.  For example,\n   { "city" \: "Palo Alto", \n     "state" \: "CA" }\nis an object with two elements one with the name "city" having the value "Palo\nAlto", and the other being the name "state" with the value "CA". This operation would \nreturn "Palo Alto" if user enters "city" as a key.\n\nIf the input object contains JSON array, array index can be used in the key input. For example, \n{ "location"\: [\n      {"city"\: "Roseville", "country"\: "United States"},\n      {"city"\: "Cluj", "country"\: "Romania"},\n      {"city"\: "Yehud", "country"\: "Israel"}]    \n}\nThe operation would return "Roseville" if user enters "location[0].city" as a key.\n\nJavaScript objects are useful for representing structured data, and are\nespecially when used within an array.  For example, an operation that retrieves\na set of incidents from an external system may return the entire list in one\narray of incident objects.  The description of the enclosing folder,\n/Library/Utility Operations/Container/JavaScript Objects has more examples, and\nthe JSON format is described completely at http\://www.json.org.\n\nInputs\n\n   object\n      The JavaScript object.  \n      The operation will return a failure if it is not a JavaScript object.\n\n   key\n      The key in the object to get the value of.\n\nResponses\n\n   success\n      The value was successfully returned for the specified key. \n\n   failure\n      There was some error in processing the object, most likely because the\n      object is not in valid JavaScript Object Notation or the specified key does not exist in the object.  \n      You may wish to use a tool such as http\://www.jsonlint.com/ to help diagnose problems with\n      JavaScript Object Notation.\n\nOutputs\n\n   The primary output will be the value for the specified key in the object.\n\nNote\n\n    If the value in JSON object is in scientific notation, the returned output will be converted to an equivalent decimal number. Ex, 2.9e+1 will be converted to 29.\n</pre>
7d6b8097-d6fe-4df3-9f51-9cd0ba398b19.8b6db57f-e598-4e21-852c-ff7e45aa9b4c.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
7d6b8097-d6fe-4df3-9f51-9cd0ba398b19.c9d2c159-bfb4-4f95-a466-cb40f5ce0880.description=<pre>\nAccepts an object in the JavaScript Object Notation format (JSON) and\nreturns a value for the specified key.\n\nThe JSON format encodes objects as a set of unordered key/value pairs, which is\nsimilar to a structure or map in other programming languages.  For example,\n   { "city" \: "Palo Alto", \n     "state" \: "CA" }\nis an object with two elements one with the name "city" having the value "Palo\nAlto", and the other being the name "state" with the value "CA". This operation would \nreturn "Palo Alto" if user enters "city" as a key.\n\nIf the input object contains JSON array, array index can be used in the key input. For example, \n{ "location"\: [\n      {"city"\: "Roseville", "country"\: "United States"},\n      {"city"\: "Cluj", "country"\: "Romania"},\n      {"city"\: "Yehud", "country"\: "Israel"}]    \n}\nThe operation would return "Roseville" if user enters "location[0].city" as a key.\n\nJavaScript objects are useful for representing structured data, and are\nespecially when used within an array.  For example, an operation that retrieves\na set of incidents from an external system may return the entire list in one\narray of incident objects.  The description of the enclosing folder,\n/Library/Utility Operations/Container/JavaScript Objects has more examples, and\nthe JSON format is described completely at http\://www.json.org.\n\nInputs\n\n   object\n      The JavaScript object.  \n      The operation will return a failure if it is not a JavaScript object.\n\n   key\n      The key in the object to get the value of.\n\nResponses\n\n   success\n      The value was successfully returned for the specified key. \n\n   failure\n      There was some error in processing the object, most likely because the\n      object is not in valid JavaScript Object Notation or the specified key does not exist in the object.  \n      You may wish to use a tool such as http\://www.jsonlint.com/ to help diagnose problems with\n      JavaScript Object Notation.\n\nOutputs\n\n   The primary output will be the value for the specified key in the object.\n\nNote\n\n    If the value in JSON object is in scientific notation, the returned output will be converted to an equivalent decimal number. Ex, 2.9e+1 will be converted to 29.\n</pre>
7d6b8097-d6fe-4df3-9f51-9cd0ba398b19.d9695f44-d704-4428-a677-420b0453f4fa.description=<pre>Resolves any Context variables in a String. This is useful if you have an input to a flow that references undefined context variables, and define them later. Pass in the context key name of the string that contains unresolved context variables.\n\nInputs\:\nkeyName - The name of the context key that should have its value reresolved.\neraseUnresolved - A boolean value. If true, any unresolved context variable references will be replaced by nothing (IE ${variable} disappears).\n\nResponses\:\nsuccess - One or more context variables were replaced, or could not be resolved and were erased from the string.\nfailure - No context variables were referenced in the string.\n\nReturns\:\nThe resulting string having had context variable references replaced with the resolved values.</pre>
7d6b8097-d6fe-4df3-9f51-9cd0ba398b19.f842bc35-79e2-4fff-a2d9-615d6fdbe468.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
7d9eafa4-8d65-4e8d-860c-fd78a263155f.02cd08bc-869d-4241-8af0-c7cfe894bba1.description=<pre>Invokes web service methods.  This operation should not be used directly\!  Please use the wizard to build flows that use this operation.\n\nInputs\:\nxmlTemplate - The template of the soap request to make.\ninputMap - A map used to map between template names and user-friendly names. The tamplate names are pipe-delimited xpaths of the xmltemplate location, with a numerical element for lists.\nurl - The url to post to. \nheader_SOAPAction - The SOAPAction http header field, defined by many web services for indicating the intent of the request\nwswAuthenticationType - The authentication type to use for the username and password input. http is default (Uses http authentication), other options are 'ws-security digest' and 'ws-security text' WARNING\: ws-security text transmits passwords in clear-text\nWSSecuritySignRequest - true or false, should the SOAP request be signed using WS-Security.\nWSSecurityEncryptRequest - true or false, should the entire SOAP request be signed using WS-Security\nWSSecurityTimestampRequest - true or false, should the Timestamp attribute be added to the WS-Security header\nWSSecurityKeystore - keystore to use for encrypting and signing requests.\nWSSecurityKeystoreType - The type of WSSecurityKeystore.\nWSSecurityKeystorePassword - The password for WSSecurityKeystore.\ncontentType - Value to be used in the Content-Type http header\nusername - The username to use for authenticating with the web service\npassword - The password to use for authenticating with the web service\ntrustAllRoots - Enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it. valid options are\: true/false.\nuseCookies - Enables cookie tracking. Cookies will be stored between consecutive calls. valid options are\: true/false.\ntimeout - a timeout after which the connection should be terminated, or 0 for no timeout.\nproxy - A proxy to use when accessing the web service.\nproxyPort - A port on the proxy to connect to.\nproxyUsername - A username to use when connecting to the proxy.\nproxyPassword - A password to use when connecting to the proxy.\nkeystore - the path to the keystore to use for SSL Client Certificates when using http authentication\nkeystorePassword - the password for the keystore when using http authentication\nICONCLUDE_WSW_VERSION - This value is used internally by the operation\n\nAny additional inputs that follow these are added by the Web Service Wizard, and they are specific to the particular web service method being called.\n\nResponses\:\nsuccess - SOAP request completed successfully.\nfailure - something went wrong.\n\nReturns\:\ndocument - raw XML response\ndocumentStripped - raw XML response stripped of namespaces for ease in parsing with XML XPath operations\n\nNotes\:\nIf you add new step-level inputs with the name header_<headername>, where <headername> is the name of an html header, then that html header will be set to the given value in the HTTP request.\n\n</pre>
7d9eafa4-8d65-4e8d-860c-fd78a263155f.description=<pre>This subflow was created by the Web Services Wizard to invoke the efficientip_macro_add_ip_php operation on file\:/C\:/CSA_INSTALLATION/wsdl_eip_full.wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nauth_login - The input named efficientip_macro_add_ip_php|input|auth_login of the complex type\: efficientip_macro_add_ip_php|input\nauth_password - The input named efficientip_macro_add_ip_php|input|auth_password of the complex type\: efficientip_macro_add_ip_php|input\nsrvid - The input named efficientip_macro_add_ip_php|input|srvid of the complex type\: efficientip_macro_add_ip_php|input\nvlanglobalid - The input named efficientip_macro_add_ip_php|input|vlanglobalid of the complex type\: efficientip_macro_add_ip_php|input\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\noutput - The output given by the XPath\: /Envelope/Body/efficientip_macro_add_ip_phpResponse/output</pre>
7de7a730-cea1-46c1-9fae-6044874f8f7b.1c0ee967-005d-4c97-8152-b05ffc1e4191.description=<pre>Checks if a number or word is equal to another number or word. Word comparison is case-sensitive in alphabetical order.\n\nInputs\:\nvalue1 - the first value.\nvalue2 - the second value.\n\nReturns\:\nvalue1 \=\= value2\n\nResponses\:\nsuccess - The boolean operation was evaluated to true.\nfailure - Something went wrong or the boolean operation returned false.\n</pre>
7de7a730-cea1-46c1-9fae-6044874f8f7b.2fb3e337-b260-426b-ab0e-8b4888aa44ae.description=<pre>Counts from one number to another number.\n\nInputs\:\nfrom - The number to start counting at\nto - The number to count to\nincrementBy - The amount to increment by during each count.\nreset - If set to true, then the counter will restart counting from the beginning.\n\nResponses\:\nhas more - Not yet done counting.\nfailure - Something went wrong.\nno more - Done counting. This will only be returned once, then counting restarts.\n\nReturns\:\nThe number that was just counted.</pre>
7de7a730-cea1-46c1-9fae-6044874f8f7b.609dfeb8-1b8f-475a-b1b8-7486260eb8b9.description=<pre>Sleeps for "X" seconds.\n\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason</pre>
7de7a730-cea1-46c1-9fae-6044874f8f7b.b98d132f-1274-435a-8144-7ad33962660b.description=<pre>This operation reads all contents of a file into the Result variable.\n\nInput Parameters\:\nfilename \t- The name of the file to read.\ncharacterSet - Character set encoding of the file. Defaults to UTF-8.\n\nResult\:\nContents of the file.\n\nResponses\:\nsuccess\t - Successfully read the file.\nfailure\t - Could not read the file.\n</pre>
7de7a730-cea1-46c1-9fae-6044874f8f7b.eddd0a36-2914-46f2-9f01-933f9cc55458.description=Starts the invocation of an unsaved script, being given its code, type, arguments and the details of the managed servers on which is should be run.\n\nInputs\:\ncoreHost - The DNS name or IP Address of your SAS core.\ncorePort - The port to connect to your SAS core on.\ncoreProtocol - The protocol to connect to your SAS core with. Either HTTP or HTTPS.\ncoreUsername - The username for host.\ncorePassword - The password for host.\ncoreVersion - The version of SAS to use.\nsourceCode - The source code of the script to invoke.\nsourceCodeType - The type of the source code. It can have one of the following values\: SH (for unix scripts), BAT (for windows BAT scripts), VBS (for Windows Visual Basic scripts), PS1 (for Windows PowerShell scripts), PY2 (for Python scripts).\nscriptArguments - The arguments to be passed to the script.\nserverNames - The list of names of the managed server on which the script should be executed. The elements from the list should be separated by 'separator'.\nserverIds - The list of ids of the managed server on which the script should be executed. If this input is provided, then 'serverNames' is ignored. The ids should be used for unique server identification. The elements from the list should be separated by 'separator'.\nloginDomain - The Windows domain name for the managed server (if it is the case).\nusername - The username that should be used when executing the script on the associated servers.\npassword - The password that should be used when executing the script on the associated servers.\ntimeout - The maximum number of milliseconds to wait for the job. If not specified, the default value is set to 0.\nseparator - The separator used for separating the inputs. The default value for the separator is a comma (,).\nnotificationFailureOwner - The email address of the owner of the job when the job failed.\nnotificationSuccessOwner - The email address of the owner of the job when the job succeeded.\nnotificationCancelOwner - The email address of the owner of the job when the job was canceled.\nnotificationFailureRecipients - The email addresses to notify when the job failed.\nnotificationSuccessRecipients - The email addresses to notify when the job succeeded.\nnotificationCancelRecipients - The email addresses to notify when the job was canceled.\nscheduleDateYear - The year to be used for setting the date when the job is scheduled to start. This input must be provided for setting a job schedule.\nscheduleDateMonth - The month to be used for setting the date when the job is scheduled to start. It should have the value between 1 and 12. This input must be provided for setting a job schedule.\nscheduleDateDayOfMonth - The day to be used for setting the date when the job is scheduled to start. It should have the value between 1 and 31. This input must be provided for setting a job schedule.\nscheduleDateHour - The hour to be used for setting the date when the job is scheduled to start. It should have the value between 0 and 23. If not set, if will have the default value 0.\nscheduleDateMinute - The minute to be used for setting the date when the job is scheduled to start. It should have the value between 0 and 59. If not set, if will have the default value 0.\nscheduleDateSecond - The second to be used for setting the date when the job is scheduled to start. It should have the value between 0 and 59. If not set, if will have the default value 0.\nscheduleDateTimezone - The timezone used to express the job schedule date. If not set, it will have the default value GMT.\n\nOutputs\:\njobId - The id of the job that was created.\n\nResponses\:\nsuccess - The operation has completed successfully.\nfailure - The operation has failed.
7de7a730-cea1-46c1-9fae-6044874f8f7b.f4348706-1840-49fa-8862-30226a6d43f9.description=Waits for the job to reach a specific state. If no state is specified, then this will wait for the job to reach an end state.\n\nInputs\:\ncoreHost - The DNS name or IP Address of your SAS core.\ncorePort - The port to Connect to your SAS core on.\ncoreProtocol - The protocol to connect to your SAS core with. Either HTTP or HTTPS.\ncoreUsername - The username for host.\ncorePassword - The password for host.\njobID - the id of the job\nstatus - The status to wait for the job to reach. If none is specified this will wait until the job is no longer running.\ntimeout - The maximum number of milliseconds to wait for the job. If not specified, 1 hour is used.\n\nResponses\:\nfailure - Something went wrong.\nsuccess - The operation completed successfully.
7e84daa5-631a-4ae9-a77a-18d95e066a11.2fe712d6-5d85-4585-b47a-33eaeb1e2120.description=<pre>Adds a flow variable into the local context (available to itself and child flows only)\n\nInput Parameters\:\nkeyName - the name of the flow variable to use\nmyValue - the value to assign the flow variable\n\nResponses\:\nsuccess - assigned the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, $myValue];</pre>
7e84daa5-631a-4ae9-a77a-18d95e066a11.818e953a-846d-4284-b0c7-e3a8156df0b5.description=Runs Service Center Virtual Machine Manager (SCVMM) Cmdlets using Windows PowerShell. The complete syntax and descriptions of all cmdlets that can be used with this operation can be found at http\://www.microsoft.com/download/en/details.aspx?displaylang\=en&id\=20419. The operation creates a remote powershell session to the target host, loads the "Microsoft.SystemCenter.VirtualMachineManager" snap-in and executes the given command(s). \n\nInputs\:\n    host - The hostname or ip address of the SCVMM server.\n    username - The username to use when connecting to the server.\nValue format\: username@domain or domain\\username.\n    password - The password to use when connecting to the server.\n    authType - Specifies the mechanism that is used to authenticate the user's credentials. \nValid values\: Default, Negotiate, Credssp, Kerberos. (case-insensitive)\nDefault value\: Default.\n    commands - The PowerShell cmdlets to execute. For more that one command, you should write each one on a separate row and they will be executed sequentially. \nExample\: get-vmmserver -computerName "1.2.3.4"\n                get-virtualharddisk -all\n    delimiter - The delimiter used to separate each property name from the property value in the output table. \nDefault value\: "\:".\n    colDelimiter - The delimiter used to separate columns in the output table.\nDefault value\: ','\n    rowDelimiter - The delimiter used to separate rows in the output table. \nDefault value\: newline\n    version - The SCVMM Server version.\nDefault value\: 2008 R2\n\nResults\:\n    outputString - A string representation of the results returned by the operation. Essentially any command returns a PowerShell object which has properties, as you can observe from the returnResult. OutputString result converts each object to string and merges all the values into one string. If you want outputString to contain results similar to PowerShell console you should pipe Out-String at the end of the cmdlet  (e.g. Get-VirtualHardDisk -al l Format-List Location, Directory, Name, ID, HostName | Out-String). Doing this will determine returnResult to be something like Length\:xx, because the object is now of type String and Lenth is the only property of this type. This result can be useful in other situations where the PowerShell objects override ToString() method. Therefore, the outputString obtained running PowerShell command Get-Process (without Out-String pipe), will contain the names of the processes running on server.\n    returnResult - A table containing a row for each PSObject that the cmdlets emit. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format.\n    warnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\n\nResponses\:\nsuccess \t- The cmdlets were executed successfully.\nfailure \t- The cmdlets could not be executed.\n\nNotes\:\n1. Installation of Powershell 2.0 with winrm 2.0 on your client is required. The kit can be downloaded from here\: http\://support.microsoft.com/kb/968930.\n2. Before using this operation, please make sure you have enabled PowerShell remoting, by using the Enable-PSRemoting cmdlet.\n3. Windows Remote Management service must be running.\n4. In workgroup environments, enabling classic mode authentication for network logons may be needed. This can be performed by opening the "Local Security Policy" from Control Panel and selecting "Administrative Tools". Navigate to "Local Policies" -> "Security Options", double click on "Network Access\: Sharing and Security Model for local accounts" and set it to classic.\n5. Also, please modify the WSMan trusted hosts setting, by adding the IP addresses of all remoting clients to the list of trusted hosts. This can be done using one of the following commands\:\n        5.1. Set-item wsman\:localhost\\client\\trustedhosts -value * (adds all computers as trusted hosts)\n        5.2. Set-item wsman\:localhost\\client\\trustedhosts -value Computer (only adds Computer to the trusted hosts)\n        5.3. Set-item wsman\:localhost\\client\\trustedhosts -value *.domain.com (adds all computers in the specified domain)\n        5.4. Set-item wsman\:localhost\\client\\trustedhosts -value 10.10.10.1 (adds the remote computer with the IP address 10.10.10.1 to the trusted hosts list)\n6. Please read the folder's description for information on how to enable CredSSP authentication.\n</pre>
7e84daa5-631a-4ae9-a77a-18d95e066a11.84f6e942-82f9-46e1-92d9-4a3789fed432.prompt=Input command(s)\:
7ea3dab4-185f-4a08-8648-0aa5009ab6a1.56f5d480-1de1-455e-bed7-c110eb3333c8.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
7ea3dab4-185f-4a08-8648-0aa5009ab6a1.d96c0a68-c10f-441e-8c86-6c4d501ef666.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
7ea3dab4-185f-4a08-8648-0aa5009ab6a1.description=The flow outputs the ESL Virtual Technology field required by ESL.\nThe field can be one of the following\:\n   - Physical servers -  "Logical Server"\n   - vCenter Servers - "VMWare"\n   - HyperV Servers - "Hyper-V"\n\nInput Parameters\:\n   serverResourcePool - The Resource Pool in which the server is being provisioned.l\n   serverType - The type of server, either V for virtual or P for Physical\n\nResponses\:\n   success - the Virtual Technology Field was populated\n   failure - otherwise\n\nResult Fields\:\n   eslVirtualTech - The string representing the virtual technology
7ea3dab4-185f-4a08-8648-0aa5009ab6a1.f904fa61-4430-46ba-a045-e6cada3d92ef.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
7f62af65-07d6-41ad-b715-9fd434b36a72.c6440841-3fa5-498d-a5fc-855c16592e8e.description=Service to perform an HTTP PUT via the Java HTTP Client\n\n<pre>\nInputs\:\nurl - the url to PUT from.\nusername - The username to use for basic authentication to the url\npassword - The password to use for basic authentication to the url\ntimeout - a timeout after which the connection should be terminated, or 0 for no timeout.\nuseCookies - Enables cookie tracking. Cookies will be stored between consecutive calls. Valid options are\: true/false\ntrustAllRoots - enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it. Valid options are\: true/false\nproxy - a proxy to use when accessing the web site.\nproxyPort - a port on the proxy to connect to.\nproxyUsername - a username to use when connecting to the proxy.\nproxyPassword - a password to use when connecting to the proxy.\nkeystore - the path to the keystore to use for SSL Client Certificates\nkeystorePassword - the password for the keystore\nencodeURL - perform URL encoding.\nfile - The file to put on the specified url.\nuserAgent - if the HTTP header USER_AGENT needs to be overridden, pass in the value here\n\nResponses\:\nsuccess - The PUT command completed\nfailure - The PUT operation failed.\n\nResult\:\nThe operation's return code.\n\nExtraResults\: \nresultText - the raw result of the operation\ndocument - The Complete document returned by the PUT operation\npageLoadTimeInMS - The number of milliseconds it took the page to load.\nresponseTimeInMS - The number of milliseconds it took before the server responded.\nURL - the url to PUT from\nsessionId - the session ID of the connection to the host\nexception - if an error occurred, the message of this error\n</pre>
7f62af65-07d6-41ad-b715-9fd434b36a72.e3fc12c4-4460-4dd5-b4fb-56b5c99fd853.description=<pre>\nThis workflow returns the user identifier id for the given user.\n\nInputs-\ncsaUser\u2013  CSA User name\nauthType - The authentication type that this operation uses when trying to execute the request on the target server.\nValid values\: basic, form, digest, ntlm, kerberos, anonymous (no authentication).\nDefault value\: anonymous - authentication not used when executing the request.\nkerberosConfFile - The path to the Kerberos configuration file. If this input is empty the kdc (Key Distribution Center) and realm will get their values from the full domain name which is obtained from the url of the web server.\ntimeout - The number of milliseconds to wait for a connection to be established. This input should be assigned a value greater than or equal to zero. A timeout value of zero is an infinite timeout.\nDefault value\: 0.\nsocketTimeout - The number of milliseconds to wait for the data to be retrieved. This input should be assigned a value greater than or equal to zero. A socketTimeout value of zero is an infinite timeout.\nDefault value\: 0.\nuseCookies - If true, enables cookie tracking. Cookies will be stored between consecutive calls. This is a boolean input. If a non-boolean value is specified, it will take the default value.\nDefault value\: true.\nfollowRedirects - If true, the GET command automatically follows redirects. This is a boolean input. If a non-boolean value is specified, it will take the default value.\nDefault value\: true\nproxy - A proxy to use when accessing the web site.\nproxyPort - The port on the proxy to connect to.\nproxyUsername - The username to use when connecting to the proxy.\nproxyPassword - The password to use when connecting to the proxy.\nencodeURL - If true, automatically encodes the URL. This is a boolean input. If a non-boolean value is specified, it will take the default value.\nDefault value\: false.\nuserAgent - The value that should be used if the HTTP header USER_AGENT has to be overridden.\ntrustAllRoots - If true, enables weak security over SSL. A SSL certificate is trusted even if no trusted CA issued it.\nDefault value\: true\nkeystore - URL of the keystore file or local path to it (e.g. %JAVA_HOME%/jre/lib/security/cacerts). It may be empty if HTTPS client authentication is not to be used.\nkeystorePassword - Password to unlock the keystore.\ntrustKeystore - URL of the truststore file or local path to it (e.g. %JAVA_HOME%/jre/lib/security/cacerts). It may be empty if HTTPS server authentication is not to be used.\ntrustPassword - Password to unlock the truststore.\n\nOutputs-\nuserIdentifier \u2013 User identifier id for the given user\n</pre>
7f8328dc-923d-4157-987f-61ca561cbf4f.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
7fe7e6cc-9756-471a-9f1c-9ba8a84dbcb2.0acd60a8-5b51-43d9-b981-4ff8f4ce6906.description=<pre>This subflow was created by the Web Services Wizard to invoke the addNewDiskToLogicalServerGroup operation on https\://15.91.54.129\:51443/hpio/controller/soap/v4?wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\ncost - The input named addNewDiskToLogicalServerGroup|cost of the complex type\: addNewDiskToLogicalServerGroup\nlogicalServerGroupName - The input named addNewDiskToLogicalServerGroup|logicalServerGroupName of the complex type\: addNewDiskToLogicalServerGroup\nraidLevel - The input named addNewDiskToLogicalServerGroup|raidLevel of the complex type\: addNewDiskToLogicalServerGroup\nrawMappingType - The input named addNewDiskToLogicalServerGroup|rawMappingType of the complex type\: addNewDiskToLogicalServerGroup\nredundantPaths - The input named addNewDiskToLogicalServerGroup|redundantPaths of the complex type\: addNewDiskToLogicalServerGroup\nserviceName - The input named addNewDiskToLogicalServerGroup|serviceName of the complex type\: addNewDiskToLogicalServerGroup\nshared - The input named addNewDiskToLogicalServerGroup|shared of the complex type\: addNewDiskToLogicalServerGroup\nsize - The input named addNewDiskToLogicalServerGroup|size of the complex type\: addNewDiskToLogicalServerGroup\nstereotypeDiskName - The input named addNewDiskToLogicalServerGroup|stereotypeDiskName of the complex type\: addNewDiskToLogicalServerGroup\ntags0 - The input named addNewDiskToLogicalServerGroup|0|tags of the complex type\: addNewDiskToLogicalServerGroup|0\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\nrequestId - The output given by the XPath\: /Envelope/Body/addNewDiskToLogicalServerGroupResponse/requestId/text()</pre>
7fe7e6cc-9756-471a-9f1c-9ba8a84dbcb2.7fd22e39-ee6e-4c65-bac7-79de402f9f77.description=<pre>Performs a mathematical operation on two numbers or strings\n\nInputs\:\nvalue1 - The first value.\nvalue2 - The second value.\noperation - The operation to perform (+ - * ^ / > < \=\= \!\= >\= <\=).\n\nResponses\:\nsuccess -  The operation completed successfully. If a boolean operation, it evaluated to true.\nfailure - Something went wrong or the boolean operation returned false.\n\nReturns\:\nThe raw result of the operation, for boolean values this is true or false.\n\nReturns\:\nField 1 - The first value. Here for compatibility\nField 2 - The second value. Here for compatibility\nField 3 - The operation. Here for compatibility\nformatted_result - The formatted result of the operation, for boolean values this is true or false.</pre>
7fe7e6cc-9756-471a-9f1c-9ba8a84dbcb2.aa3f5437-e403-4b68-940b-985b322dd1b1.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
7fe7e6cc-9756-471a-9f1c-9ba8a84dbcb2.bcdbdf86-ad0b-4fcf-af24-52073451182f.description=<pre>\nMultiplies two numbers\n\nInputs\:\nvalue1 - The first value.\nvalue2 - The second value.\n\nReturns\:\nThe product of the two numbers.\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n</pre>
80dbbd61-952d-40f5-89ee-4b15445b30c7.0855e0b0-5efa-46f2-b521-94d711a14e54.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
80dbbd61-952d-40f5-89ee-4b15445b30c7.3d1305bd-2f50-415b-89cf-9a3bad24db8b.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
80dbbd61-952d-40f5-89ee-4b15445b30c7.4c0d9545-a317-4fdc-8cec-7c37e3393c98.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
80dbbd61-952d-40f5-89ee-4b15445b30c7.65dc44e3-7e1f-4918-bd40-09fd35ac9f3b.description=<pre>Sends an smtp email\n \nInput Parameters\:\nhostname - hostname or ip address of smtp server\nport - port smtp service is listening\nfrom - from email address\nto - email address(s) or recipients\nsubject - email subject\nbody - body of the email\nhtmlEmail - true or false, whether the email should be sent supporting html rich email.\nreadReceipt - true or false, whether or not to request a read receipt\nattachments - comma separated list of files to attach (must be full path)\nusername - if SMTP authentication is needed, the username to send\npassword - the password to use\ncharacterSet - the character set encoding for the entire email which includes subject, body, attached file name and the attached file. Default value is UTF-8\ncontentTransferEncoding - the content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. Default value is - quoted-printable or Q Encoding.\n \n Responses\:\n success - successfully sent the email\n failure - failed to send the email\n\nNote\:\nFor special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n\tFor doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n</pre>
80dbbd61-952d-40f5-89ee-4b15445b30c7.873e0730-d6fe-472b-a230-b9d7939cce07.description=<pre>Sends an smtp email\n \nInput Parameters\:\nhostname - hostname or ip address of smtp server\nport - port smtp service is listening\nfrom - from email address\nto - email address(s) or recipients\nsubject - email subject\nbody - body of the email\nhtmlEmail - true or false, whether the email should be sent supporting html rich email.\nreadReceipt - true or false, whether or not to request a read receipt\nattachments - comma separated list of files to attach (must be full path)\nusername - if SMTP authentication is needed, the username to send\npassword - the password to use\ncharacterSet - the character set encoding for the entire email which includes subject, body, attached file name and the attached file. Default value is UTF-8\ncontentTransferEncoding - the content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. Default value is - quoted-printable or Q Encoding.\n \n Responses\:\n success - successfully sent the email\n failure - failed to send the email\n\nNote\:\nFor special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n\tFor doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n</pre>
80dbbd61-952d-40f5-89ee-4b15445b30c7.d129dd88-e80d-41d2-a07d-95a69edeae16.description=<pre>Sends an smtp email\n \nInput Parameters\:\nhostname - hostname or ip address of smtp server\nport - port smtp service is listening\nfrom - from email address\nto - email address(s) or recipients\nsubject - email subject\nbody - body of the email\nhtmlEmail - true or false, whether the email should be sent supporting html rich email.\nreadReceipt - true or false, whether or not to request a read receipt\nattachments - comma separated list of files to attach (must be full path)\nusername - if SMTP authentication is needed, the username to send\npassword - the password to use\ncharacterSet - the character set encoding for the entire email which includes subject, body, attached file name and the attached file. Default value is UTF-8\ncontentTransferEncoding - the content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. Default value is - quoted-printable or Q Encoding.\n \n Responses\:\n success - successfully sent the email\n failure - failed to send the email\n\nNote\:\nFor special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n\tFor doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n</pre>
80dbbd61-952d-40f5-89ee-4b15445b30c7.d21cf2d5-42ed-4f6d-ab6b-551452d5fbcb.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
80dbbd61-952d-40f5-89ee-4b15445b30c7.f7e1b6f6-4d76-4b14-80dc-d5580a22f71f.description=<pre>Sends an smtp email\n \nInput Parameters\:\nhostname - hostname or ip address of smtp server\nport - port smtp service is listening\nfrom - from email address\nto - email address(s) or recipients\nsubject - email subject\nbody - body of the email\nhtmlEmail - true or false, whether the email should be sent supporting html rich email.\nreadReceipt - true or false, whether or not to request a read receipt\nattachments - comma separated list of files to attach (must be full path)\nusername - if SMTP authentication is needed, the username to send\npassword - the password to use\ncharacterSet - the character set encoding for the entire email which includes subject, body, attached file name and the attached file. Default value is UTF-8\ncontentTransferEncoding - the content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. Default value is - quoted-printable or Q Encoding.\n \n Responses\:\n success - successfully sent the email\n failure - failed to send the email\n\nNote\:\nFor special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n\tFor doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n</pre>
81499827-6800-40e0-8471-b92f3121fb16.description=A comma-separated list of SiteScope hosts that will be used for monitoring.
82b44d4a-ef6a-40cd-a5f0-9f5ec150fd88.description=Login for ESL SCP Upload Server
82f31272-6243-4a18-a2e8-e9aebb856ed1.description=It's attributes which will be used in ESL_CreateCI
83bc4162-37d3-4e6a-91e2-66fa1a606686.045458e5-9755-46f7-956d-42eb278f6a43.prompt=Row Delimiter\:
83bc4162-37d3-4e6a-91e2-66fa1a606686.21e62409-9100-4527-b1dc-dedf07ff31a3.prompt=TNSEntry\:
83bc4162-37d3-4e6a-91e2-66fa1a606686.37d9d939-ec84-4396-a2c3-5bbf09e74e3a.prompt=UserName\:
83bc4162-37d3-4e6a-91e2-66fa1a606686.47a24820-72dc-434d-851a-41a67876b198.prompt=Password\:
83bc4162-37d3-4e6a-91e2-66fa1a606686.b7a9a9ea-cc66-4af2-ba69-b507893b809a.prompt=Session Key Name\:
83bc4162-37d3-4e6a-91e2-66fa1a606686.description=<pre>Runs a SQL query against an Oracle database, using the information available in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation.\nSubsequent calls with the same information will return the other rows.\n\nInputs\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name).\nTNSEntry - The entry name from the tnsnames.ora file which contains the connecting information.\nUsername - The username used for connecting to the database.\nPassword - The password used for connecting to the database.\nCommand - The command to execute.\nDelimiter - Delimiter to use between columns in returnResult.\nKey - Key to help keep multiple query results distinct.\n\nResponses\:\nmore items - More rows are available for retrieval.\nno more items - No more rows are available.\nfailure - There was an error executing the command.\n\nExtra Results\:\ncolumnNames - The names of all the columns returned, separated by Delimiter.\nrowsLeft - The number of rows remaining that match the query.\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should be correctly configured on the RAS machine.\n\nORACLE NOTE\:\nOnly the "SELECT" statement can be executed using this operation. For statements that modify the database, use "TNS Names SQL Command".\n</pre>
83bc4162-37d3-4e6a-91e2-66fa1a606686.f44a45fd-1f4c-4b63-baff-09027bdd7781.prompt=TNSPath\:
83bc4162-37d3-4e6a-91e2-66fa1a606686.f9931e7f-6885-42d9-8b3f-7ca5ed2ac497.prompt=SQL Command\:
844a76cf-2b48-438f-9c7d-696303090677.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
851053da-e750-4962-a942-2ed9a3fcc2f0.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
851f1878-8470-4ffe-80fa-3fafb4319711.b15583c4-eb87-44ae-bb67-353db7ae878e.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
86f12ab9-728b-4a77-844a-f67d7e3c3ffb.989210ce-684e-4c4e-95bc-959caf1a78e4.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
881ee06f-89ad-4af6-a00d-06654eadccaa.description=Useraccount of InfraDB - ECSPCOPS
883473a1-eba3-4c04-a666-5ada2355dac2.1c4721dc-96d6-47c3-acee-50997d0bff26.description=<pre>Checks if a number or word is equal to another number or word. Word comparison is case-sensitive in alphabetical order.\n\nInputs\:\nvalue1 - The first value.\nvalue2 - The second value.\n\nReturns\:\nvalue1 \=\= value2\n\nResponses\:\nsuccess - The boolean operation was evaluated to true.\nfailure - Something went wrong or the boolean operation returned false.\n</pre>
883473a1-eba3-4c04-a666-5ada2355dac2.b0481c5f-53a2-45db-9917-c024a5e3f0ca.description=<pre>This subflow was created by the Web Services Wizard to invoke the efficientip_macro_vlan_query_php operation on file\:/C\:/CSA_INSTALLATION/wsdl_eip_full.wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nauth_login - The input named efficientip_macro_vlan_query_php|input|auth_login of the complex type\: efficientip_macro_vlan_query_php|input\nauth_password - The input named efficientip_macro_vlan_query_php|input|auth_password of the complex type\: efficientip_macro_vlan_query_php|input\nvlan_query - The input named efficientip_macro_vlan_query_php|input|vlan_query of the complex type\: efficientip_macro_vlan_query_php|input\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\noutput - The output given by the XPath\: /Envelope/Body/efficientip_macro_vlan_query_phpResponse/output</pre>
8988bfae-c02e-4105-877d-806bc09cb7cb.01bf2b63-c57d-4d2c-b74a-c025ae94ca58.callout=Replace C with V, because of CVS System
8988bfae-c02e-4105-877d-806bc09cb7cb.887bca20-a319-40ed-9ebb-395f20d4efd7.callout=We don't have more then one item
8988bfae-c02e-4105-877d-806bc09cb7cb.d8892b96-bafd-414a-9e24-c0c8124fe235.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
89e59c17-a1f9-4a50-b46e-61817655eef3.011fca98-8939-439c-9388-a7e4bd7b976e.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
89e59c17-a1f9-4a50-b46e-61817655eef3.a19c57a8-5b75-4a97-949e-510d18863526.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
89e59c17-a1f9-4a50-b46e-61817655eef3.ac43b772-bdc3-4708-95d6-8a36928a7d9d.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
89e59c17-a1f9-4a50-b46e-61817655eef3.e4593e97-c1e9-4512-9841-c1dd984138cd.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
8b441039-568a-4f07-a1e8-f51cba67d0f1.description=The full path to the Exchange Management Shell PowerShell console file which will be used by SiteScope's Exchange 2007 monitor.
8bab6112-665b-46e8-b629-85403b9dc442.01c8ced2-8196-4f2e-9dc4-e5da80be5f23.prompt=Password\:
8bab6112-665b-46e8-b629-85403b9dc442.07226cff-f5a8-4144-8247-5d85be233989.prompt=Enable Wake On LAN?\:
8bab6112-665b-46e8-b629-85403b9dc442.10506638-1d50-4828-85dd-5eb612081c75.prompt=Identify VM by\:
8bab6112-665b-46e8-b629-85403b9dc442.1441d6ae-5ced-4617-a09a-788f31d08482.prompt=VMWare User\:
8bab6112-665b-46e8-b629-85403b9dc442.1563e5c1-e7c1-474b-8875-6f45a2b5a1b1.prompt=Network Name / Port Group\:
8bab6112-665b-46e8-b629-85403b9dc442.2cd569d8-c666-46f6-b3dd-b911c77aafa6.prompt=Datacenter to look for VM\:
8bab6112-665b-46e8-b629-85403b9dc442.4f727662-56d5-4383-a96d-b067fe0fb083.prompt=VMWare Host\:
8bab6112-665b-46e8-b629-85403b9dc442.597f6adf-fd8b-40c9-b696-09fa6649259f.prompt=Asynchronously Perform Task?\:
8bab6112-665b-46e8-b629-85403b9dc442.5ce2a738-a4ed-407a-94bc-35b8f0b30055.prompt=VMWare Host\:
8bab6112-665b-46e8-b629-85403b9dc442.5fd98b4c-e068-4b94-b9bd-a26363e6c8df.prompt=VMWare User\:
8bab6112-665b-46e8-b629-85403b9dc442.6242a111-65f3-4e02-a72c-00622110cd73.prompt=Network Name / Port Group\:
8bab6112-665b-46e8-b629-85403b9dc442.67f3d906-fc1f-472b-8afd-a3fbc2a13023.prompt=VMWare User\:
8bab6112-665b-46e8-b629-85403b9dc442.6a8cc691-2d42-40f4-b87a-10b06a9a0415.prompt=VMWare Host\:
8bab6112-665b-46e8-b629-85403b9dc442.73ea7c41-425c-479f-806c-0a949697e3c6.prompt=Datacenter to look for VM\:
8bab6112-665b-46e8-b629-85403b9dc442.770b3593-9fcd-4ce7-bb3f-b3c6906be2d7.prompt=Password\:
8bab6112-665b-46e8-b629-85403b9dc442.7c5fb4b8-e7bb-4348-a28f-0d38ba91e8d3.prompt=Network Name / Port Group\:
8bab6112-665b-46e8-b629-85403b9dc442.7c607374-42fd-4bd8-88e1-2dfb8dca4188.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
8bab6112-665b-46e8-b629-85403b9dc442.7d85f9f6-216a-4d46-a53c-1c77cfef0340.prompt=VMWare User\:
8bab6112-665b-46e8-b629-85403b9dc442.81c7eb89-76bb-4a84-b109-2af63d4514f1.prompt=Close session?\:
8bab6112-665b-46e8-b629-85403b9dc442.8bad2154-1a10-41a4-9494-a03826d159b6.prompt=MAC Address\:
8bab6112-665b-46e8-b629-85403b9dc442.901bd2ba-fefe-4143-b741-a0c95ade6d1d.prompt=Password\:
8bab6112-665b-46e8-b629-85403b9dc442.99b8a58e-9d3b-4b55-8457-758efd6f297c.description=<pre>Add a Network Interface Card to a virtual machine assigned to a port group / network name.\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation (true, false).\nasync - Asynchronously perform the task (true, false).\ntaskTimeOut - Time to wait before the operation is considered to have failed (seconds)\nvirtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\nvmIdentifierType - Virtual machine identifier type (inventorypath, name, ip, hostname, uuid, vmid).\nvmDatacenter - Virtual machine's datacenter.\nnetPortGroup - Name of port group to connect this new NIC to. This port group can be a legacy port group or a distributed virtual port group.\nnetNicType - Virtual network interface card type. Valid inputs\: PCNet32, E1000, VmxNet, VmxNet2, VmxNet3. NIC type VmxNet2 is only supported for virtual machine hardware version 4 and later.  NIC type VmxNet3 is only supported for vitual machine hardware version 7 and later.\nnetMacAddr - MAC address to assign if netMacGeneration is set to Manual.\nnetMacGeneration - MAC address assignment. Valid inputs\: Manual, Generated, Assigned (Assigned value is only valid when host is a vCenter server. Will assign MAC from vCenter).\nnetWakeOnLan - Enable Wake On LAN for the NIC (true, false).\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n\nReturns\:\nreturnResult - Task result or operation result.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
8bab6112-665b-46e8-b629-85403b9dc442.c4c1511e-0392-4302-a798-184aaea0d873.prompt=Datacenter to look for VM\:
8bab6112-665b-46e8-b629-85403b9dc442.cabce852-145b-45e4-990d-6746eeb95df2.prompt=Virtual Machine\:
8bab6112-665b-46e8-b629-85403b9dc442.cb147e65-fe51-489d-a4b0-93d94d66ccc4.prompt=Virtual Machine\:
8bab6112-665b-46e8-b629-85403b9dc442.d57b4c65-644a-4249-9386-cfc1f300188e.prompt=Datacenter to look for VM\:
8bab6112-665b-46e8-b629-85403b9dc442.d6a6fbf3-a79e-48ab-9ffd-33c9176e4c67.prompt=Virtual Machine\:
8bab6112-665b-46e8-b629-85403b9dc442.dd48c06e-f552-4d02-90eb-9d30dfc06652.prompt=VMWare Host\:
8bab6112-665b-46e8-b629-85403b9dc442.e3476a60-d7bc-472a-8cbe-bbb3d01b9bba.description=<pre>Modifies an existing Network Interface Card (NIC) on a virtual machine. Optional inputs with a "net" and "connect" prefix that are left empty will not be modified on the NIC.\n\nInputs\:\n    host - VMware vCenter, ESX or ESXi host hostname or IP.\n    user - VMware username.\n    password - VMware user's password.\n    port - Port to connect on.\nExamples\: 443, 80\n    protocol - Connection protocol.\nValid values\: "https", "http"\n    closeSession - Close the internally kept VMware Infrastructure API session at completion of operation.\nValid values\: "true", "false"\n    async - Asynchronously perform the task.\nValid values\: "true", "false"\n    taskTimeOut - Time to wait in seconds before the operation is considered to have failed.\nDefault value\: 800\n    virtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\n    vmIdentifierType - Virtual machine identifier type \nValid values\: "inventorypath", "name", "ip", "hostname", "uuid", "vmid"\n    vmDatacenter - Virtual machine's datacenter.\n    deviceNumber - The NIC number to modify on the VM.  As an example\: "Network Adapter 1" would have be deviceNumber "1".\nExamples\: If a VM as a network adapter named "Network Adapter 1" the deviceNumber would be "1".\n    netPortGroup - Name of port group to connect this NIC to.  This port group can be a legacy port group or a distributed virtual port group.\nExamples\: "VM Network", "dvPortGroup"\n    netNicType - Virtual network interface card type. NIC type VmxNet2 is only supported for virtual machine hardware version 4 and later.  NIC type VmxNet3 is only supported for vitual machine hardware version 7 and later.\nValid values\: "PCNet32", "E1000", "VmxNet", "VmxNet2", "VmxNet3"\n    netMacAddr - MAC address to assign if netMacGeneration is set to Manual.\nValue format\: Six groups of two hexadecimal digits (0-F), separated by colons (\:).\nExamples\: 00\:50\:56\:94\:AB\:EF\n    netMacGeneration - MAC address assignment method. \nValid inputs\: "Manual", "Generated", "Assigned" (Assigned value is only valid when host is a vCenter server. Will assign MAC from vCenter).\n    netWakeOnLan - Enable Wake On LAN for the NIC.\nValid values\: "true", "false"\n    connect - Connect the NIC to the network?  Only applicable when VM is powered on.\nValid values\: "true", "false"\n    connectAtPowerOn - Connect the NIC to the network at power on time of VM?\nValid values\: "true", "false"\n\nResponses\:\n    success - The operation completed successfully.\n    failure - Something went wrong. See returnResult for details.\n\nReturns\:\n    returnResult - Task result or operation result\n\nNotes\:\n1. Inventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
8bab6112-665b-46e8-b629-85403b9dc442.e6020306-fce3-47c6-be8a-5c4a956a3595.description=<pre>Modifies an existing Network Interface Card (NIC) on a virtual machine. Optional inputs with a "net" and "connect" prefix that are left empty will not be modified on the NIC.\n\nInputs\:\n    host - VMware vCenter, ESX or ESXi host hostname or IP.\n    user - VMware username.\n    password - VMware user's password.\n    port - Port to connect on.\nExamples\: 443, 80\n    protocol - Connection protocol.\nValid values\: "https", "http"\n    closeSession - Close the internally kept VMware Infrastructure API session at completion of operation.\nValid values\: "true", "false"\n    async - Asynchronously perform the task.\nValid values\: "true", "false"\n    taskTimeOut - Time to wait in seconds before the operation is considered to have failed.\nDefault value\: 800\n    virtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\n    vmIdentifierType - Virtual machine identifier type \nValid values\: "inventorypath", "name", "ip", "hostname", "uuid", "vmid"\n    vmDatacenter - Virtual machine's datacenter.\n    deviceNumber - The NIC number to modify on the VM.  As an example\: "Network Adapter 1" would have be deviceNumber "1".\nExamples\: If a VM as a network adapter named "Network Adapter 1" the deviceNumber would be "1".\n    netPortGroup - Name of port group to connect this NIC to.  This port group can be a legacy port group or a distributed virtual port group.\nExamples\: "VM Network", "dvPortGroup"\n    netNicType - Virtual network interface card type. NIC type VmxNet2 is only supported for virtual machine hardware version 4 and later.  NIC type VmxNet3 is only supported for vitual machine hardware version 7 and later.\nValid values\: "PCNet32", "E1000", "VmxNet", "VmxNet2", "VmxNet3"\n    netMacAddr - MAC address to assign if netMacGeneration is set to Manual.\nValue format\: Six groups of two hexadecimal digits (0-F), separated by colons (\:).\nExamples\: 00\:50\:56\:94\:AB\:EF\n    netMacGeneration - MAC address assignment method. \nValid inputs\: "Manual", "Generated", "Assigned" (Assigned value is only valid when host is a vCenter server. Will assign MAC from vCenter).\n    netWakeOnLan - Enable Wake On LAN for the NIC.\nValid values\: "true", "false"\n    connect - Connect the NIC to the network?  Only applicable when VM is powered on.\nValid values\: "true", "false"\n    connectAtPowerOn - Connect the NIC to the network at power on time of VM?\nValid values\: "true", "false"\n\nResponses\:\n    success - The operation completed successfully.\n    failure - Something went wrong. See returnResult for details.\n\nReturns\:\n    returnResult - Task result or operation result\n\nNotes\:\n1. Inventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
8bab6112-665b-46e8-b629-85403b9dc442.eb2d0747-a91d-4164-a31d-159525a86738.prompt=Password\:
8bab6112-665b-46e8-b629-85403b9dc442.f1d906d9-a954-4293-83c2-f04921a7d025.prompt=Virtual Machine\:
8bab6112-665b-46e8-b629-85403b9dc442.f2587f01-cc25-4bc1-8850-a43a9343565a.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
8bab6112-665b-46e8-b629-85403b9dc442.f60a7e90-e2ed-4845-8ef5-9cc33b2cd723.prompt=Network Name / Port Group\:
8bab6112-665b-46e8-b629-85403b9dc442.f96bb294-4ebd-4474-8bc9-7fc7945ef860.description=<pre>Modifies an existing Network Interface Card (NIC) on a virtual machine. Optional inputs with a "net" and "connect" prefix that are left empty will not be modified on the NIC.\n\nInputs\:\n    host - VMware vCenter, ESX or ESXi host hostname or IP.\n    user - VMware username.\n    password - VMware user's password.\n    port - Port to connect on.\nExamples\: 443, 80\n    protocol - Connection protocol.\nValid values\: "https", "http"\n    closeSession - Close the internally kept VMware Infrastructure API session at completion of operation.\nValid values\: "true", "false"\n    async - Asynchronously perform the task.\nValid values\: "true", "false"\n    taskTimeOut - Time to wait in seconds before the operation is considered to have failed.\nDefault value\: 800\n    virtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\n    vmIdentifierType - Virtual machine identifier type \nValid values\: "inventorypath", "name", "ip", "hostname", "uuid", "vmid"\n    vmDatacenter - Virtual machine's datacenter.\n    deviceNumber - The NIC number to modify on the VM.  As an example\: "Network Adapter 1" would have be deviceNumber "1".\nExamples\: If a VM as a network adapter named "Network Adapter 1" the deviceNumber would be "1".\n    netPortGroup - Name of port group to connect this NIC to.  This port group can be a legacy port group or a distributed virtual port group.\nExamples\: "VM Network", "dvPortGroup"\n    netNicType - Virtual network interface card type. NIC type VmxNet2 is only supported for virtual machine hardware version 4 and later.  NIC type VmxNet3 is only supported for vitual machine hardware version 7 and later.\nValid values\: "PCNet32", "E1000", "VmxNet", "VmxNet2", "VmxNet3"\n    netMacAddr - MAC address to assign if netMacGeneration is set to Manual.\nValue format\: Six groups of two hexadecimal digits (0-F), separated by colons (\:).\nExamples\: 00\:50\:56\:94\:AB\:EF\n    netMacGeneration - MAC address assignment method. \nValid inputs\: "Manual", "Generated", "Assigned" (Assigned value is only valid when host is a vCenter server. Will assign MAC from vCenter).\n    netWakeOnLan - Enable Wake On LAN for the NIC.\nValid values\: "true", "false"\n    connect - Connect the NIC to the network?  Only applicable when VM is powered on.\nValid values\: "true", "false"\n    connectAtPowerOn - Connect the NIC to the network at power on time of VM?\nValid values\: "true", "false"\n\nResponses\:\n    success - The operation completed successfully.\n    failure - Something went wrong. See returnResult for details.\n\nReturns\:\n    returnResult - Task result or operation result\n\nNotes\:\n1. Inventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
8d519464-fdde-4891-accf-2ee09cccbcf3.13edb912-3d61-4540-8ca8-5c7e75828b56.description=Simplified inputs for adding disk to existing VM. It'll get the correct BUS and LUN instead of asking the user to specify.
8d519464-fdde-4891-accf-2ee09cccbcf3.431b608e-e9ca-4841-88cd-6d8663b76aa5.prompt=Select from vm platforms
8d519464-fdde-4891-accf-2ee09cccbcf3.fe63fbf5-79a7-4c8f-8cdf-2b36be0be9a3.description=<pre>Add a new virtual (SCSI) disk to an existing virtual machine.\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation (true, false).\nasync - Asynchronously perform the task (true, false).\ntaskTimeOut - Time to wait before the operation is considered to have failed (seconds).\nvirtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\nvmIdentifierType - Virtual machine identifier type (inventorypath, name, ip, hostname, uuid, vmid).\nvmDatacenter - Virtual machine's datacenter.\ndataStore - Datastore or datastore cluster (eg. host\:dsname, mydatastore).\nvmDiskSize - Size of the virtual disk to create in megabytes (MB).\ndiskPath - Path on datastore to use for backing the new virtual disk. Include .vmdk suffix and do NOT include leading / . This path must not already exist on the datastore.\ndiskMode - Disk persistence mode. Values for ESX 3 and later VMs\: persistent, independent_persistent, independent_nonpersistent. Valid values for pre ESX 3 VMs\: persistent, nonpersistent, undoable, append.\nthinProvision - Perform thin provisioning of the virtual disk (true, false).\ndiskWritethrough - Enable direct write to the file system (true, false).\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n\nReturns\:\nreturnResult - Task result or operation result.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
90c25d75-5b7d-417d-a4a7-2db2c7ff939a.4c81a329-80f2-4859-9ee2-eab84330f594.description=Runs Service Center Virtual Machine Manager (SCVMM) Cmdlets using Windows PowerShell. The complete syntax and descriptions of all cmdlets that can be used with this operation can be found at http\://www.microsoft.com/download/en/details.aspx?displaylang\=en&id\=20419. The operation creates a remote powershell session to the target host, loads the "Microsoft.SystemCenter.VirtualMachineManager" snap-in and executes the given command(s). \n\nInputs\:\n    host - The hostname or ip address of the SCVMM server.\n    username - The username to use when connecting to the server.\nValue format\: username@domain or domain\\username.\n    password - The password to use when connecting to the server.\n    authType - Specifies the mechanism that is used to authenticate the user's credentials. \nValid values\: Default, Negotiate, Credssp, Kerberos. (case-insensitive)\nDefault value\: Default.\n    commands - The PowerShell cmdlets to execute. For more that one command, you should write each one on a separate row and they will be executed sequentially. \nExample\: get-vmmserver -computerName "1.2.3.4"\n                get-virtualharddisk -all\n    delimiter - The delimiter used to separate each property name from the property value in the output table. \nDefault value\: "\:".\n    colDelimiter - The delimiter used to separate columns in the output table.\nDefault value\: ','\n    rowDelimiter - The delimiter used to separate rows in the output table. \nDefault value\: newline\n    version - The SCVMM Server version.\nDefault value\: 2008 R2\n\nResults\:\n    outputString - A string representation of the results returned by the operation. Essentially any command returns a PowerShell object which has properties, as you can observe from the returnResult. OutputString result converts each object to string and merges all the values into one string. If you want outputString to contain results similar to PowerShell console you should pipe Out-String at the end of the cmdlet  (e.g. Get-VirtualHardDisk -al l Format-List Location, Directory, Name, ID, HostName | Out-String). Doing this will determine returnResult to be something like Length\:xx, because the object is now of type String and Lenth is the only property of this type. This result can be useful in other situations where the PowerShell objects override ToString() method. Therefore, the outputString obtained running PowerShell command Get-Process (without Out-String pipe), will contain the names of the processes running on server.\n    returnResult - A table containing a row for each PSObject that the cmdlets emit. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format.\n    warnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\n\nResponses\:\nsuccess \t- The cmdlets were executed successfully.\nfailure \t- The cmdlets could not be executed.\n\nNotes\:\n1. Installation of Powershell 2.0 with winrm 2.0 on your client is required. The kit can be downloaded from here\: http\://support.microsoft.com/kb/968930.\n2. Before using this operation, please make sure you have enabled PowerShell remoting, by using the Enable-PSRemoting cmdlet.\n3. Windows Remote Management service must be running.\n4. In workgroup environments, enabling classic mode authentication for network logons may be needed. This can be performed by opening the "Local Security Policy" from Control Panel and selecting "Administrative Tools". Navigate to "Local Policies" -> "Security Options", double click on "Network Access\: Sharing and Security Model for local accounts" and set it to classic.\n5. Also, please modify the WSMan trusted hosts setting, by adding the IP addresses of all remoting clients to the list of trusted hosts. This can be done using one of the following commands\:\n        5.1. Set-item wsman\:localhost\\client\\trustedhosts -value * (adds all computers as trusted hosts)\n        5.2. Set-item wsman\:localhost\\client\\trustedhosts -value Computer (only adds Computer to the trusted hosts)\n        5.3. Set-item wsman\:localhost\\client\\trustedhosts -value *.domain.com (adds all computers in the specified domain)\n        5.4. Set-item wsman\:localhost\\client\\trustedhosts -value 10.10.10.1 (adds the remote computer with the IP address 10.10.10.1 to the trusted hosts list)\n6. Please read the folder's description for information on how to enable CredSSP authentication.\n</pre>
90c25d75-5b7d-417d-a4a7-2db2c7ff939a.d794865e-e216-4ba5-b908-578c6547f11a.prompt=Input command(s)\:
90c25d75-5b7d-417d-a4a7-2db2c7ff939a.f79e7fd1-cf2e-427d-93c8-4e72a3fb36c5.description=<pre>Adds a flow variable into the local context (available to itself and child flows only)\n\nInput Parameters\:\nkeyName - the name of the flow variable to use\nmyValue - the value to assign the flow variable\n\nResponses\:\nsuccess - assigned the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, $myValue];</pre>
91f39c63-0f5f-47d2-9d79-31da051ee0b0.description=OO Central on which scripts are executed. Must be fqdn. Note\: So far problem when tried to run scripts, dnscmd on derlooc011 - needs to be fixed.
92256179-50d8-4d0f-ac5b-4703fdc2c1d0.43add64a-7f35-46f4-b731-02cdfe94aac6.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
92256179-50d8-4d0f-ac5b-4703fdc2c1d0.5d113839-601f-43c8-a18a-a8e40d14ba46.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
92256179-50d8-4d0f-ac5b-4703fdc2c1d0.6f05160a-c670-4210-8602-df2eec1d6c8e.description=<pre>\nRuns a SQL query against an Oracle database, using the information in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation. Subsequent calls with the same information return the other rows.\n\nInputs\:\n    TNSPath -The path to the folder of the TNS file tnsnames.ora. This path must be accessible by the OO RAS service. For example, if the RAS and the Oracle server are installed on the same Windows system, the TNSPath might look like \u201CC\:\\app\\Administrator\\product\\11.1.0\\db_1\\network\\admin\u201D. If the RAS and the Oracle server are on different Windows systems, you can copy the tnsnames.ora file  to the RAS system. The TNSPath might look like \u201CC\:\\Program Files\\Hewlett-Packard\\Operations Orchestration\\RAS\\Java\\Default\\webapp\\conf\u201D or \u201CC\:\\Temp\u201D depending on where you place the .ora file. \n    TNSEntry - The entry name in the tnsnames.ora file that contains the connection information. For example, the value for the TNSEntry input is \u201CTestEntry\u201D if the content in the tnsnames.ora file looks like the following\: \n\nTestEntry \=\n  (DESCRIPTION \=\n   (ADDRESS \= (PROTOCOL \= TCP)(HOST \= 16.110.111.111)(PORT \= 1521))\n   (CONNECT_DATA \=\n     (SERVER \= DEDICATED)\n     (SERVICE_NAME \= orcl)\n   )\n )\n\n    Username - The username to connect to the Oracle database. \n    Password - The password for the Username.\n    Command - The command to execute. \n    Delimiter \u2013 The delimiter to use between the columns in the returnResult result.\n    Key \u2013 The key to use to keep multiple query results distinct.\n    timeout - Seconds to wait before timing out the SQL command execution.\nDefault values\: 0 \n\nResults\:\n    returnResult - This is the primary output. Returned the data returned for each row separated by the value you specified in the Delimiter input (for example, \u201Ckey16|lst|16\u201D).\n    columnNames - The names of the columns returned, separated by the value you specified in the Delimiter input (for example, \u201CMYKEY|NAME|ID\u201D).\n    rowsLeft - The number of rows remaining that match the query. \n\nResponses\:\n    more items - More rows are available for retrieval.\n    no more items - No more rows are available.\n    failure - There was an error executing the command.\n\nNotes\:\n1. This operation only supports Oracle. \n2. This operation can only execute the "SELECT" statement. For statements that modify the database, use the TNS Names SQL Command operation.\n\n</pre>\n\n\n
92256179-50d8-4d0f-ac5b-4703fdc2c1d0.c3c90477-17fd-49a9-8a1e-5a17435a7867.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
922f8734-a839-44ac-80e5-3dcceca45e2f.description=Domain name to join/unjoin a machine account
9270294f-64bb-4b15-bc86-094de43a0b59.description=pc.vcenter.thinProvision
92961114-00c5-4313-bdf2-91ec35878a2a.0447223b-9347-47ef-8e7e-5aeed6e06e87.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
92961114-00c5-4313-bdf2-91ec35878a2a.04483432-bbbf-454c-870d-c5163e8923cf.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
92961114-00c5-4313-bdf2-91ec35878a2a.0a629c6c-c8da-40d2-80c4-22fc53101dd1.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
92961114-00c5-4313-bdf2-91ec35878a2a.119e0094-f99a-4cb2-8c9f-c11acfa785db.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
92961114-00c5-4313-bdf2-91ec35878a2a.1cb64d0b-af31-4372-b735-8106d9d0261b.callout=Check if client image template name exist, if nonexist, return error.
92961114-00c5-4313-bdf2-91ec35878a2a.25d142cf-d636-4ab1-b35e-1463f26a1a06.description=<pre>\nRuns a SQL query against an Oracle database, using the information in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation. Subsequent calls with the same information return the other rows.\n\nInputs\:\n    TNSPath -The path to the folder of the TNS file tnsnames.ora. This path must be accessible by the OO RAS service. For example, if the RAS and the Oracle server are installed on the same Windows system, the TNSPath might look like \u201CC\:\\app\\Administrator\\product\\11.1.0\\db_1\\network\\admin\u201D. If the RAS and the Oracle server are on different Windows systems, you can copy the tnsnames.ora file  to the RAS system. The TNSPath might look like \u201CC\:\\Program Files\\Hewlett-Packard\\Operations Orchestration\\RAS\\Java\\Default\\webapp\\conf\u201D or \u201CC\:\\Temp\u201D depending on where you place the .ora file. \n    TNSEntry - The entry name in the tnsnames.ora file that contains the connection information. For example, the value for the TNSEntry input is \u201CTestEntry\u201D if the content in the tnsnames.ora file looks like the following\: \n\nTestEntry \=\n  (DESCRIPTION \=\n   (ADDRESS \= (PROTOCOL \= TCP)(HOST \= 16.110.111.111)(PORT \= 1521))\n   (CONNECT_DATA \=\n     (SERVER \= DEDICATED)\n     (SERVICE_NAME \= orcl)\n   )\n )\n\n    Username - The username to connect to the Oracle database. \n    Password - The password for the Username.\n    Command - The command to execute. \n    Delimiter \u2013 The delimiter to use between the columns in the returnResult result.\n    Key \u2013 The key to use to keep multiple query results distinct.\n    timeout - Seconds to wait before timing out the SQL command execution.\nDefault values\: 0 \n\nResults\:\n    returnResult - This is the primary output. Returned the data returned for each row separated by the value you specified in the Delimiter input (for example, \u201Ckey16|lst|16\u201D).\n    columnNames - The names of the columns returned, separated by the value you specified in the Delimiter input (for example, \u201CMYKEY|NAME|ID\u201D).\n    rowsLeft - The number of rows remaining that match the query. \n\nResponses\:\n    more items - More rows are available for retrieval.\n    no more items - No more rows are available.\n    failure - There was an error executing the command.\n\nNotes\:\n1. This operation only supports Oracle. \n2. This operation can only execute the "SELECT" statement. For statements that modify the database, use the TNS Names SQL Command operation.\n\n</pre>\n\n\n
92961114-00c5-4313-bdf2-91ec35878a2a.295d922c-71d0-4e71-8f39-7183ef89c658.description=<pre>\nRuns a SQL query against an Oracle database, using the information in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation. Subsequent calls with the same information return the other rows.\n\nInputs\:\n    TNSPath -The path to the folder of the TNS file tnsnames.ora. This path must be accessible by the OO RAS service. For example, if the RAS and the Oracle server are installed on the same Windows system, the TNSPath might look like \u201CC\:\\app\\Administrator\\product\\11.1.0\\db_1\\network\\admin\u201D. If the RAS and the Oracle server are on different Windows systems, you can copy the tnsnames.ora file  to the RAS system. The TNSPath might look like \u201CC\:\\Program Files\\Hewlett-Packard\\Operations Orchestration\\RAS\\Java\\Default\\webapp\\conf\u201D or \u201CC\:\\Temp\u201D depending on where you place the .ora file. \n    TNSEntry - The entry name in the tnsnames.ora file that contains the connection information. For example, the value for the TNSEntry input is \u201CTestEntry\u201D if the content in the tnsnames.ora file looks like the following\: \n\nTestEntry \=\n  (DESCRIPTION \=\n   (ADDRESS \= (PROTOCOL \= TCP)(HOST \= 16.110.111.111)(PORT \= 1521))\n   (CONNECT_DATA \=\n     (SERVER \= DEDICATED)\n     (SERVICE_NAME \= orcl)\n   )\n )\n\n    Username - The username to connect to the Oracle database. \n    Password - The password for the Username.\n    Command - The command to execute. \n    Delimiter \u2013 The delimiter to use between the columns in the returnResult result.\n    Key \u2013 The key to use to keep multiple query results distinct.\n    timeout - Seconds to wait before timing out the SQL command execution.\nDefault values\: 0 \n\nResults\:\n    returnResult - This is the primary output. Returned the data returned for each row separated by the value you specified in the Delimiter input (for example, \u201Ckey16|lst|16\u201D).\n    columnNames - The names of the columns returned, separated by the value you specified in the Delimiter input (for example, \u201CMYKEY|NAME|ID\u201D).\n    rowsLeft - The number of rows remaining that match the query. \n\nResponses\:\n    more items - More rows are available for retrieval.\n    no more items - No more rows are available.\n    failure - There was an error executing the command.\n\nNotes\:\n1. This operation only supports Oracle. \n2. This operation can only execute the "SELECT" statement. For statements that modify the database, use the TNS Names SQL Command operation.\n\n</pre>\n\n\n
92961114-00c5-4313-bdf2-91ec35878a2a.5f423d6c-bb1b-4bac-8d4e-05a8a6e759a5.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
92961114-00c5-4313-bdf2-91ec35878a2a.694d59b3-1413-497c-9fdb-36c81e77c95c.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
92961114-00c5-4313-bdf2-91ec35878a2a.78666ac6-ff42-4f6f-a321-f73e56b1a845.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
92961114-00c5-4313-bdf2-91ec35878a2a.916b3421-f1df-4715-b421-443ffaa49aaf.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
92961114-00c5-4313-bdf2-91ec35878a2a.aad7c87e-2dff-4305-8111-0fb89e2c833c.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
92961114-00c5-4313-bdf2-91ec35878a2a.ba75926a-58b9-49b3-8772-9b7e4bce528a.description=<pre>\nRuns a SQL query against an Oracle database, using the information in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation. Subsequent calls with the same information return the other rows.\n\nInputs\:\n    TNSPath -The path to the folder of the TNS file tnsnames.ora. This path must be accessible by the OO RAS service. For example, if the RAS and the Oracle server are installed on the same Windows system, the TNSPath might look like \u201CC\:\\app\\Administrator\\product\\11.1.0\\db_1\\network\\admin\u201D. If the RAS and the Oracle server are on different Windows systems, you can copy the tnsnames.ora file  to the RAS system. The TNSPath might look like \u201CC\:\\Program Files\\Hewlett-Packard\\Operations Orchestration\\RAS\\Java\\Default\\webapp\\conf\u201D or \u201CC\:\\Temp\u201D depending on where you place the .ora file. \n    TNSEntry - The entry name in the tnsnames.ora file that contains the connection information. For example, the value for the TNSEntry input is \u201CTestEntry\u201D if the content in the tnsnames.ora file looks like the following\: \n\nTestEntry \=\n  (DESCRIPTION \=\n   (ADDRESS \= (PROTOCOL \= TCP)(HOST \= 16.110.111.111)(PORT \= 1521))\n   (CONNECT_DATA \=\n     (SERVER \= DEDICATED)\n     (SERVICE_NAME \= orcl)\n   )\n )\n\n    Username - The username to connect to the Oracle database. \n    Password - The password for the Username.\n    Command - The command to execute. \n    Delimiter \u2013 The delimiter to use between the columns in the returnResult result.\n    Key \u2013 The key to use to keep multiple query results distinct.\n    timeout - Seconds to wait before timing out the SQL command execution.\nDefault values\: 0 \n\nResults\:\n    returnResult - This is the primary output. Returned the data returned for each row separated by the value you specified in the Delimiter input (for example, \u201Ckey16|lst|16\u201D).\n    columnNames - The names of the columns returned, separated by the value you specified in the Delimiter input (for example, \u201CMYKEY|NAME|ID\u201D).\n    rowsLeft - The number of rows remaining that match the query. \n\nResponses\:\n    more items - More rows are available for retrieval.\n    no more items - No more rows are available.\n    failure - There was an error executing the command.\n\nNotes\:\n1. This operation only supports Oracle. \n2. This operation can only execute the "SELECT" statement. For statements that modify the database, use the TNS Names SQL Command operation.\n\n</pre>\n\n\n
92961114-00c5-4313-bdf2-91ec35878a2a.dc3cef4f-c673-46a2-8967-32d4b2f4f304.description=<pre>\nRuns a SQL query against an Oracle database, using the information in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation. Subsequent calls with the same information return the other rows.\n\nInputs\:\n    TNSPath -The path to the folder of the TNS file tnsnames.ora. This path must be accessible by the OO RAS service. For example, if the RAS and the Oracle server are installed on the same Windows system, the TNSPath might look like \u201CC\:\\app\\Administrator\\product\\11.1.0\\db_1\\network\\admin\u201D. If the RAS and the Oracle server are on different Windows systems, you can copy the tnsnames.ora file  to the RAS system. The TNSPath might look like \u201CC\:\\Program Files\\Hewlett-Packard\\Operations Orchestration\\RAS\\Java\\Default\\webapp\\conf\u201D or \u201CC\:\\Temp\u201D depending on where you place the .ora file. \n    TNSEntry - The entry name in the tnsnames.ora file that contains the connection information. For example, the value for the TNSEntry input is \u201CTestEntry\u201D if the content in the tnsnames.ora file looks like the following\: \n\nTestEntry \=\n  (DESCRIPTION \=\n   (ADDRESS \= (PROTOCOL \= TCP)(HOST \= 16.110.111.111)(PORT \= 1521))\n   (CONNECT_DATA \=\n     (SERVER \= DEDICATED)\n     (SERVICE_NAME \= orcl)\n   )\n )\n\n    Username - The username to connect to the Oracle database. \n    Password - The password for the Username.\n    Command - The command to execute. \n    Delimiter \u2013 The delimiter to use between the columns in the returnResult result.\n    Key \u2013 The key to use to keep multiple query results distinct.\n    timeout - Seconds to wait before timing out the SQL command execution.\nDefault values\: 0 \n\nResults\:\n    returnResult - This is the primary output. Returned the data returned for each row separated by the value you specified in the Delimiter input (for example, \u201Ckey16|lst|16\u201D).\n    columnNames - The names of the columns returned, separated by the value you specified in the Delimiter input (for example, \u201CMYKEY|NAME|ID\u201D).\n    rowsLeft - The number of rows remaining that match the query. \n\nResponses\:\n    more items - More rows are available for retrieval.\n    no more items - No more rows are available.\n    failure - There was an error executing the command.\n\nNotes\:\n1. This operation only supports Oracle. \n2. This operation can only execute the "SELECT" statement. For statements that modify the database, use the TNS Names SQL Command operation.\n\n</pre>\n\n\n
92961114-00c5-4313-bdf2-91ec35878a2a.description=\n\nChanges\n\nMar 23, 2015, Justin, mpc4_026 \n    1. added input db.getresourcepool.vmmp.type. \n    2. changed SQL since table vcenter is changed to vmmp.\n    3. added a condition to filter against vmmp.vmmp_type.\n    4. output renamed vcenter to vmmp.ip\n\n
92961114-00c5-4313-bdf2-91ec35878a2a.e9208693-40dc-4dff-9260-64bd1e20bbc6.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
929f096c-4909-4010-8ac7-575f6649e092.0473cefd-9c3c-4835-bbc9-f97a0dc726f6.description=Waits for the job to reach a specific state. If no state is specified, then this will wait for the job to reach an end state.\n\nInputs\:\ncoreHost - The DNS name or IP Address of your SAS core.\ncorePort - The port to Connect to your SAS core on.\ncoreProtocol - The protocol to connect to your SAS core with. Either HTTP or HTTPS.\ncoreUsername - The username for host.\ncorePassword - The password for host.\njobID - the id of the job\nstatus - The status to wait for the job to reach. If none is specified this will wait until the job is no longer running.\ntimeout - The maximum number of milliseconds to wait for the job. If not specified, 1 hour is used.\n\nResponses\:\nfailure - Something went wrong.\nsuccess - The operation completed successfully.
929f096c-4909-4010-8ac7-575f6649e092.1ff864b9-4810-4cea-8b58-0e95a0520c28.description=Detaches a software policy from a list of servers, device groups or hypervisors.\n\nInputs\:\ncoreHost - The DNS name or IP Address of your SAS core.\ncorePort - The port to Connect to your SAS core on.\ncoreProtocol - The protocol to connect to your SAS core with. Either HTTP or HTTPS.\ncoreUsername - The username for host.\ncorePassword - The password for host.\ncoreVersion - The version of SAS to use.\npolicyName - Name of the policy to detach.\npolicyID - ID of the policy to detach.\nattachableName - The names, separated by 'separator', of the attachable objects to detach the policy from.\nattachableID - The IDs, separated by 'separator', of the attachable objects to detach the policy from. If this input is provided, then 'attachableName' is ignored.\nattachableType - The type of the attachable objects (all must be of the same type). Can be one of the following values\: SERVER, DEVICE_GROUP, HYPERVISOR.\nseparator - The separator used for separating the inputs. The default value for the separator is comma (,).\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.
929f096c-4909-4010-8ac7-575f6649e092.357c997c-533f-44b3-873d-24311b20fd46.description=Sleeps for "X" seconds.\n\n<pre>\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason\n</pre>
929f096c-4909-4010-8ac7-575f6649e092.660f1384-2c8b-47b0-989f-9d3b5368e995.description=Counts from one number to another number.\n\n<pre>\nInputs\:\ncount - number of loops to complete\nreset - If true, then the counter will restart counting from the beginning.\n\nReturns\:\nThe number that was just counted.\n\nResponses\:\nhas more - Not yet done counting.\nno more - Done counting. This will only be returned once, then counting restarts.\nfailure - Something went wrong.\n</pre>
929f096c-4909-4010-8ac7-575f6649e092.afa9427a-38ed-4365-bc63-8e93c0c529bd.description=Starts a remediation on the given server using a set of attached/detached software policies. If the software policies information is not provided, then a full software policy remediation is performed.\n\nInputs\:\ncoreHost - The DNS name or IP Address of your SAS core.\ncorePort - The port to Connect to your SAS core on.\ncoreProtocol - The protocol to connect to your SAS core with. Either HTTP or HTTPS.\ncoreUsername - The username for host.\ncorePassword - The password for host.\ncoreVersion - The version of SAS to use.\nserverName - The names of the servers to remediate (separated by 'separator').\nserverId - The IDs of the servers to remediate (separated by 'separator'). If provided, the 'serverName' is ignored.\nsoftwarePoliciesNames - The names of the software policies to remediate against (separated by 'separator'). The software policies need to be attached/detached to/from the server before the remediation takes place.\nsoftwarePoliciesIDs - The IDs of the software policies to remediate against (separated by 'separator'). The software policies need to be attached/detached to/from the server before the remediation takes place. If this input is provided, then 'softwarePoliciesNames' is ignored.\nwait - An integer value specifying how many milliseconds should be waited for the job to finish. If not specified the job is started, but may not have finished.\nrebootOption - Reboot Option for Remediating a server. It could be one of [suppress, per_action, at_end] or it can be left blank. Where\:\n\t\t- suppress - Suppress all reboots;\n\t\t- per_action - Reboot after each installation or uninstallation;\n\t\t- at_end - Reboot at the end of remediation;\n\t\t- left blank (no value provided) - Reboot as specified by individual software items.\nsortPolicies - Specify whether the software policies should be remediated in alphabetical order, based on their names, on each server. The default value is 'false'.\nticketID - The ticket ID for this job. If not specified it will be set default value\: 'Remediation started by SA user <user_name> from OO server 'host_address'\nseparator - The separator used for separating the inputs. The default value for the separator is a comma (,).\nnotificationFailureOwner - The email address of the owner of the job when the job failed.\nnotificationSuccessOwner - The email address of the owner of the job when the job succeeded.\nnotificationCancelOwner - The email address of the owner of the job when the job was canceled.\nnotificationFailureRecipients - The email addresses to notify when the job failed.\nnotificationSuccessRecipients - The email addresses to notify when the job succeeded.\nnotificationCancelRecipients - The email addresses to notify when the job was canceled.\nscheduleDateYear - The year to be used for setting the date when the job is scheduled to start. This input must be provided for setting a job schedule.\nscheduleDateMonth - The month to be used for setting the date when the job is scheduled to start. It should have the value between 1 and 12. This input must be provided for setting a job schedule.\nscheduleDateDayOfMonth - The day to be used for setting the date when the job is scheduled to start. It should have the value between 1 and 31. This input must be provided for setting a job schedule.\nscheduleDateHour - The hour to be used for setting the date when the job is scheduled to start. It should have the value between 0 and 23. If not set, if will have the default value 0.\nscheduleDateMinute - The minute to be used for setting the date when the job is scheduled to start. It should have the value between 0 and 59. If not set, if will have the default value 0.\nscheduleDateSecond - The second to be used for setting the date when the job is scheduled to start. It should have the value between 0 and 59. If not set, if will have the default value 0.\nscheduleDateTimezone - The timezone used to express the job schedule date. If not set, it will have the default value GMT.\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n\nReturns\:\nreturnResult - The id of the created job.
929f096c-4909-4010-8ac7-575f6649e092.baa8b007-8431-460a-92c4-5ef3331f70fc.description=<pre>This operation iterates through a list of values. It is not recommended to modify the value of the "list" and "separator" inputs during the iteration process.\n\nInputs\:\n    list - The list to iterate through.\n    separator - A delimiter separating the list elements.\nDefault value\: \u2018,\u2019 (comma) \n\nResults\:\n    resultString - The current list element (if the response is "has more").\n\nResponses\:\n    has more - Another value was found in the list and it has been returned.\n    no more - The iterator has gone through the entire list. This response is returned once per list iteration.  A subsequent call to the List iterator operation restarts the list iteration process.\n    failure - The operation completed unsuccessfully.\n\nNote\:\n   The position of the iterator in the list is tracked by each step's unique identifier. Therefore, you can simultaneously iterate through the same list from multiple steps.\n</pre>
929f096c-4909-4010-8ac7-575f6649e092.bdacf3cd-597e-40e5-863d-c8a275d601ae.description=<pre>\nChecks to see if a list contains every element in another list.\n\nInputs\:\nsublist -The contained list.\ncontainer - The containing list.\ndelimiter - A delimiter separating elements in the two lists. Default is a comma\nignoreCase - If set to 'True' then the compare is not case sensitive. Default is True\n\nResponses\:\ntrue - sublist is contained in container.\nfalse - sublist is not contained in container.\n\nResults\:\nResult - All items contained in the sublist that are not in the container. \n</pre>    
929f096c-4909-4010-8ac7-575f6649e092.e56b4026-a2ee-45b6-90a3-594e4170fe51.description=Gets a list of software policies installed on a given server.\n\nInputs\:\ncoreHost - The DNS name or IP Address of your SAS core.\ncorePort - The port to Connect to your SAS core on.\ncoreProtocol - The protocol to connect to your SAS core with. Either HTTP or HTTPS.\ncoreUsername - The username for host.\ncorePassword - The password for host.\ncoreVersion - The version of SAS to use.\nserverName - The name of the server for which the software policies will be retrieved.\nserverId - The id of the server for which the software policies will be retrieved. Use this input for unique identification.\n\nResponses\:\nsuccess - retrieved successfully\nfailure - failed to retrieve data\n\nReturns\:\nsoftwarePolicyName - The name of this object's Software policy.\nsoftwarePolicyId - The id of this object's Software policy.
92fe01f4-c3a1-46d0-8b57-342228c0a94b.0726b0f4-3ca4-4943-a5db-91952e1574f6.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
92fe01f4-c3a1-46d0-8b57-342228c0a94b.2b6f7111-a023-4b32-895c-4a807a64f0dc.description=Generic flow to send an e-mail
92fe01f4-c3a1-46d0-8b57-342228c0a94b.3cc4fe5c-035d-4321-96b9-5441d15b7984.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
92fe01f4-c3a1-46d0-8b57-342228c0a94b.a476ee7a-963c-42a8-8e8f-4e376d9844e2.callout=bkm - Removed [Power On IO Service] to see if it''s really needed.  It always errors out in MOE.
92fe01f4-c3a1-46d0-8b57-342228c0a94b.b8c90f33-a0ab-470b-92b9-d3e8a4615e7b.description=<pre>This subflow was created by the Web Services Wizard to invoke the powerOnLogicalServers operation on https\://tufnellpark\:51443/hpio/controller/soap/v2?wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nlogicalServerNames0 - The input named powerOnLogicalServers|0|logicalServerNames of the complex type\: powerOnLogicalServers|0\nserviceName - The input named powerOnLogicalServers|serviceName of the complex type\: powerOnLogicalServers\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\nrequestId - The output given by the XPath\: /Envelope/Body/powerOnLogicalServersResponse/requestId/text()</pre>
92fe01f4-c3a1-46d0-8b57-342228c0a94b.e6843633-a40f-48a2-a7de-868e25df982f.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
92fe01f4-c3a1-46d0-8b57-342228c0a94b.e8228992-fd92-415a-9056-1e1de9196eb1.description=<pre>Checks to see if a string matches a specific rule.\n\nInputs\:\nmatchType - The type of match to perform.\ntoMatch - The string to check if matches another string.\nmatchTo - The string to match against.\nignoreCase - Boolean value for whether or not to ignore case during match.\n\nResponses\:\nsuccess - The String matched.\nfailure - The string did not match, or something went wrong.</pre>
934a0914-7c03-42fe-8da1-835832858b19.description=Login for NAT Domaincontroller
93bc41b3-da18-41b8-a610-91eb9fd275d8.description=Defines the length of the automatically generated password
93d11783-54db-4d1e-b6f2-9e2acf3098a4.41038651-fa38-40cd-a885-184f30f02913.description=<pre>\nIterates through a JavaScript array, i.e. a string value that contains an array\nin the JavaScript Object Notation format (JSON).  Each time that this operation\nis called it places the value of the current array element into the Result\noutput and advances the iterator to the array element.\n\nThe JSON format is basically a way to encode arrays and other values using\nJavaScript notation.  For arrays, this means that the values need to be\nsurrounded by square brackets, and each element in the array can be a string\n(which needs surrounding quotes), a number, true, false, null, or a nested array\nor object.  Commas are always used as delimiters between array elements, and\nthey can appear within string elements without confusion.  For example, the\nfollowing is a simple JSON array\:\n   [ "cat", "dog", "horse" ]\nNote that the equivalent OO list would be \n   cat,dog,horse\nThe benefits of JavaScript arrays are that delimiters are fixed and cannot be\nconfused with data, and that complex nesting of arrays and objects are\nsupported.  The description of the enclosing folder, /Library/Utility\nOperations/Container/JavaScript Objects has more examples, and the JSON format\nis described completely at http\://www.json.org.\n\nModifying the contents of the array during iteration is not generally supported,\nbut will be safe as long as the affected item(s) are beyond the current position\nof the iterator.  The iterator keeps track of where it is in the array by\nposition.  If items are added or removed to the list in a position preceding the\niterator, it may cause the iterator to return results that are not obvious.  For\nexample, if the array contains [ "a", "b", "c" ] and the iterator is positioned\non the second element, "b" and the first element is removed, then the iterator\nwill now be at the last element in the list, "c".\n\nThere is currently a limitation that a flow can only have one of these array\niterator steps active at a time without causing possible conflicts.  In other\nwords, if you need to iterate through a nested array, you will should use a\nsub-flow to process the inner array.  You may have two or more of these array\niterators in the same flow as long as each iterator reaches the end of its array\nbefore the next one begins.\n\nInputs\n\n   array\n      The JavaScript array that will be iterated through.  The operation will\n      return a failure if the array is not a JavaScript array; a normal OO list\n      is NOT a JavaScript array.\n\nResponses\n\n   has more\n      The iterator has not yet reached the end of the array. The Result output\n      will be populated with the value of the current element in the array, and\n      the iterator will advance to the next element in the array.\n\n   no more\n      The iterator has reached the end of the array, and there is no more data\n      to return.  The iterator will become undefined after this call, which\n      basically will reset it so that if called again, this operation will begin\n      another iteration at the beginning of the array.\n\n   failure\n      There was some error in iterating through the list, and the Result output\n      will contain information about the error.  This will occur if the input\n      array is not a valid JavaScript array.  For example, if presented with a\n      common list value such as a,b,c it will fail because it lacks the\n      enclosing brackets and the quotes around each string element.  You may\n      wish to use a tool such as http\://www.jsonlint.com/ to help diagnose\n      problems with JavaScript Object Notation.\n\nOutputs\n\n   Result\n      The current array element.  When incorporating this operation into a flow,\n      you should assign a meaningful result value from this field.  Note that\n      since JavaScript arrays may contain nested arrays or other objects, the\n      value returned in Result may also require further processing.\n\n</pre>\n
93d11783-54db-4d1e-b6f2-9e2acf3098a4.5c53b48d-fe27-44ed-a09d-75492eddd014.description=<pre>Sends an smtp email\n \nInput Parameters\:\nhostname - hostname or ip address of smtp server\nport - port smtp service is listening\nfrom - from email address\nto - email address(s) or recipients\nsubject - email subject\nbody - body of the email\nhtmlEmail - true or false, whether the email should be sent supporting html rich email.\nreadReceipt - true or false, whether or not to request a read receipt\nattachments - comma separated list of files to attach (must be full path)\nusername - if SMTP authentication is needed, the username to send\npassword - the password to use\ncharacterSet - the character set encoding for the entire email which includes subject, body, attached file name and the attached file. Default value is UTF-8\ncontentTransferEncoding - the content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. Default value is - quoted-printable or Q Encoding.\n \n Responses\:\n success - successfully sent the email\n failure - failed to send the email\n\nNote\:\nFor special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n\tFor doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n</pre>
93d11783-54db-4d1e-b6f2-9e2acf3098a4.69913b77-749d-4f10-b11d-7b2989747176.prompt=${htmlDocument}
93d11783-54db-4d1e-b6f2-9e2acf3098a4.a1d08be0-30ac-4bfc-877f-14bd5a5f0358.description=<pre>This operation reads all contents of a file into the Result variable.\n\nInput Parameters\:\nfilename \t- The name of the file to read.\ncharacterSet - Character set encoding of the file. Defaults to UTF-8.\n\nResult\:\nContents of the file.\n\nResponses\:\nsuccess\t - Successfully read the file.\nfailure\t - Could not read the file.\n</pre>
93d11783-54db-4d1e-b6f2-9e2acf3098a4.c0ded2af-9b82-4b4c-839c-880d6748fd5e.description=<pre>Checks to see if a path is an existing file or folder.\n\nInputs\:\nSource - The full path path to check. This can be either a local path such as c\:\\test.txt, or a unc path such as \\\\testhost\\test.txt. This path is relative to the Windows RAS host that the operation is running on.\nuser - Username to use for thread impersonation on the RAS host when reading.\npassword - Password for username.\n\nResponses\:\nfailure - The operation failed. The path does not exist.\nsuccess - The operation succeeded.\n</pre>\n
93d11783-54db-4d1e-b6f2-9e2acf3098a4.description=Generic flow to send an e-mail
93d11783-54db-4d1e-b6f2-9e2acf3098a4.f5037b8f-4f37-4ff1-9bcc-7b7b8c3362ae.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
93faa914-e574-402c-9ff8-c6805f1286c0.3fe505a8-3d1e-40ae-a4a6-d01389cd3654.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
93faa914-e574-402c-9ff8-c6805f1286c0.573659bc-bd95-48c5-ba88-bf38c82a8780.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
93faa914-e574-402c-9ff8-c6805f1286c0.61bd146a-bff4-4d70-b79d-b4b6f3bf70ae.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
93faa914-e574-402c-9ff8-c6805f1286c0.becbfdcd-6d0a-4880-8dce-530bcd378f08.description=<pre>\nRuns a SQL query against an Oracle database, using the information in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation. Subsequent calls with the same information return the other rows.\n\nInputs\:\n    TNSPath -The path to the folder of the TNS file tnsnames.ora. This path must be accessible by the OO RAS service. For example, if the RAS and the Oracle server are installed on the same Windows system, the TNSPath might look like \u201CC\:\\app\\Administrator\\product\\11.1.0\\db_1\\network\\admin\u201D. If the RAS and the Oracle server are on different Windows systems, you can copy the tnsnames.ora file  to the RAS system. The TNSPath might look like \u201CC\:\\Program Files\\Hewlett-Packard\\Operations Orchestration\\RAS\\Java\\Default\\webapp\\conf\u201D or \u201CC\:\\Temp\u201D depending on where you place the .ora file. \n    TNSEntry - The entry name in the tnsnames.ora file that contains the connection information. For example, the value for the TNSEntry input is \u201CTestEntry\u201D if the content in the tnsnames.ora file looks like the following\: \n\nTestEntry \=\n  (DESCRIPTION \=\n   (ADDRESS \= (PROTOCOL \= TCP)(HOST \= 16.110.111.111)(PORT \= 1521))\n   (CONNECT_DATA \=\n     (SERVER \= DEDICATED)\n     (SERVICE_NAME \= orcl)\n   )\n )\n\n    Username - The username to connect to the Oracle database. \n    Password - The password for the Username.\n    Command - The command to execute. \n    Delimiter \u2013 The delimiter to use between the columns in the returnResult result.\n    Key \u2013 The key to use to keep multiple query results distinct.\n    timeout - Seconds to wait before timing out the SQL command execution.\nDefault values\: 0 \n\nResults\:\n    returnResult - This is the primary output. Returned the data returned for each row separated by the value you specified in the Delimiter input (for example, \u201Ckey16|lst|16\u201D).\n    columnNames - The names of the columns returned, separated by the value you specified in the Delimiter input (for example, \u201CMYKEY|NAME|ID\u201D).\n    rowsLeft - The number of rows remaining that match the query. \n\nResponses\:\n    more items - More rows are available for retrieval.\n    no more items - No more rows are available.\n    failure - There was an error executing the command.\n\nNotes\:\n1. This operation only supports Oracle. \n2. This operation can only execute the "SELECT" statement. For statements that modify the database, use the TNS Names SQL Command operation.\n\n</pre>\n\n\n
950174a9-a7ce-499b-b67e-25933bab368f.description=The password of the Oracle user account used by CSA to deploy application monitors on Oracle 10g databases.
95626a5c-0100-4f41-82af-5a723e86b725.acebecf1-7dbe-42e8-b30f-7d7fb4fa5b9b.description=<pre>Invokes web service methods.  This operation should not be used directly\!  Please use the wizard to build flows that use this operation.\n\nInputs\:\nxmlTemplate - The template of the soap request to make.\ninputMap - A map used to map between template names and user-friendly names. The tamplate names are pipe-delimited xpaths of the xmltemplate location, with a numerical element for lists.\nurl - The url to post to. \nheader_SOAPAction - The SOAPAction http header field, defined by many web services for indicating the intent of the request\nwswAuthenticationType - The authentication type to use for the username and password input. http is default (Uses http authentication), other options are 'ws-security digest' and 'ws-security text' WARNING\: ws-security text transmits passwords in clear-text\nWSSecuritySignRequest - true or false, should the SOAP request be signed using WS-Security.\nWSSecurityEncryptRequest - true or false, should the entire SOAP request be signed using WS-Security\nWSSecurityTimestampRequest - true or false, should the Timestamp attribute be added to the WS-Security header\nWSSecurityKeystore - keystore to use for encrypting and signing requests.\nWSSecurityKeystoreType - The type of WSSecurityKeystore.\nWSSecurityKeystorePassword - The password for WSSecurityKeystore.\ncontentType - Value to be used in the Content-Type http header\nusername - The username to use for authenticating with the web service\npassword - The password to use for authenticating with the web service\ntrustAllRoots - Enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it. valid options are\: true/false.\nuseCookies - Enables cookie tracking. Cookies will be stored between consecutive calls. valid options are\: true/false.\ntimeout - a timeout after which the connection should be terminated, or 0 for no timeout.\nproxy - A proxy to use when accessing the web service.\nproxyPort - A port on the proxy to connect to.\nproxyUsername - A username to use when connecting to the proxy.\nproxyPassword - A password to use when connecting to the proxy.\nkeystore - the path to the keystore to use for SSL Client Certificates when using http authentication\nkeystorePassword - the password for the keystore when using http authentication\nICONCLUDE_WSW_VERSION - This value is used internally by the operation\n\nAny additional inputs that follow these are added by the Web Service Wizard, and they are specific to the particular web service method being called.\n\nResponses\:\nsuccess - SOAP request completed successfully.\nfailure - something went wrong.\n\nReturns\:\ndocument - raw XML response\ndocumentStripped - raw XML response stripped of namespaces for ease in parsing with XML XPath operations\n\nNotes\:\nIf you add new step-level inputs with the name header_<headername>, where <headername> is the name of an html header, then that html header will be set to the given value in the HTTP request.\n\n</pre>
95626a5c-0100-4f41-82af-5a723e86b725.description=<pre>This subflow was created by the Web Services Wizard to invoke the efficientip_macro_get_vlan_info_php operation on file\:/C\:/CSA_INSTALLATION/wsdl_eip_full.wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nauth_login - The input named efficientip_macro_get_vlan_info_php|input|auth_login of the complex type\: efficientip_macro_get_vlan_info_php|input\nauth_password - The input named efficientip_macro_get_vlan_info_php|input|auth_password of the complex type\: efficientip_macro_get_vlan_info_php|input\nvlanglobalid - The input named efficientip_macro_get_vlan_info_php|input|vlanglobalid of the complex type\: efficientip_macro_get_vlan_info_php|input\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\noutput - The output given by the XPath\: /Envelope/Body/efficientip_macro_get_vlan_info_phpResponse/output</pre>
963b0f0f-2041-4af7-bb09-0e7f04268867.2114063d-7388-4e9e-b4a8-e9e89b1e3331.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
963b0f0f-2041-4af7-bb09-0e7f04268867.b76601c6-ccb4-4121-b9f9-c2f07a5d9bc1.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
96b02f48-1c44-48ff-a241-7447ea8e91d9.description=It's attributes which will be used in ESL_CreateCI
96fecd20-3355-451e-a411-e85e617e294f.description=It's attributes which will be used in ESL_CreateCI
9768cfba-3b68-43e2-95cb-00ef78c87730.description=Depricate - Use System Propterty
978c0cc8-c2cb-4974-bb9a-8e29b52b34db.058c2778-780e-4d14-b46b-2f5051c4b189.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
978c0cc8-c2cb-4974-bb9a-8e29b52b34db.781b23c3-aff1-4ff3-a1f7-bc469e990607.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
978c0cc8-c2cb-4974-bb9a-8e29b52b34db.ca8ebc54-ec5c-4294-a28d-a7bd7ae680f4.description=<pre>\nRuns a SQL query against an Oracle database, using the information in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation. Subsequent calls with the same information return the other rows.\n\nInputs\:\n    TNSPath -The path to the folder of the TNS file tnsnames.ora. This path must be accessible by the OO RAS service. For example, if the RAS and the Oracle server are installed on the same Windows system, the TNSPath might look like \u201CC\:\\app\\Administrator\\product\\11.1.0\\db_1\\network\\admin\u201D. If the RAS and the Oracle server are on different Windows systems, you can copy the tnsnames.ora file  to the RAS system. The TNSPath might look like \u201CC\:\\Program Files\\Hewlett-Packard\\Operations Orchestration\\RAS\\Java\\Default\\webapp\\conf\u201D or \u201CC\:\\Temp\u201D depending on where you place the .ora file. \n    TNSEntry - The entry name in the tnsnames.ora file that contains the connection information. For example, the value for the TNSEntry input is \u201CTestEntry\u201D if the content in the tnsnames.ora file looks like the following\: \n\nTestEntry \=\n  (DESCRIPTION \=\n   (ADDRESS \= (PROTOCOL \= TCP)(HOST \= 16.110.111.111)(PORT \= 1521))\n   (CONNECT_DATA \=\n     (SERVER \= DEDICATED)\n     (SERVICE_NAME \= orcl)\n   )\n )\n\n    Username - The username to connect to the Oracle database. \n    Password - The password for the Username.\n    Command - The command to execute. \n    Delimiter \u2013 The delimiter to use between the columns in the returnResult result.\n    Key \u2013 The key to use to keep multiple query results distinct.\n    timeout - Seconds to wait before timing out the SQL command execution.\nDefault values\: 0 \n\nResults\:\n    returnResult - This is the primary output. Returned the data returned for each row separated by the value you specified in the Delimiter input (for example, \u201Ckey16|lst|16\u201D).\n    columnNames - The names of the columns returned, separated by the value you specified in the Delimiter input (for example, \u201CMYKEY|NAME|ID\u201D).\n    rowsLeft - The number of rows remaining that match the query. \n\nResponses\:\n    more items - More rows are available for retrieval.\n    no more items - No more rows are available.\n    failure - There was an error executing the command.\n\nNotes\:\n1. This operation only supports Oracle. \n2. This operation can only execute the "SELECT" statement. For statements that modify the database, use the TNS Names SQL Command operation.\n\n</pre>\n\n\n
978c0cc8-c2cb-4974-bb9a-8e29b52b34db.ea9a4c42-1e79-42cb-828b-8eb0da4c105a.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
97f2b0ee-9e54-4906-a415-cd028f36447a.description=<pre>This is an operation check whether field2 is not empty(should be an ip address) while filed1 is an ip address.\nadd\nInputs\:\nfield1 - vlanglobalid.\nfield2 - rsv_ip.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - field1 is not an up or borh field1 & field2 are ip.\nfailure - field1 is an ip but field2 is not\n</pre>
98191c67-b292-4ebe-8db5-b5b32959e58b.description=It's attributes which will be used in ESL_CreateCI
98ae14b7-ff3d-4c76-a8f2-03676af59fe6.2090c206-7538-411f-90b9-fda4a14dab9b.prompt=Enter a value for container
98ae14b7-ff3d-4c76-a8f2-03676af59fe6.68ff6f05-dcc2-41f4-8d0c-395162d58401.description=<pre>Counts the number of occurrences of one string within another\n\nInputs\:\ncontainer - The string that the occurrences should be counted in.\ntoFind - The string to find occurrences of.\nignoreCase - Boolean value for whether or not to ignore case during occurrence counting.\n\nResponses\:\nsuccess - The operation completed Successfully.\nfailure - Something went wrong.</pre>
98ae14b7-ff3d-4c76-a8f2-03676af59fe6.ae6eea06-8133-4d5f-a214-d8b5aee196b3.description=<pre>Performs a mathematical operation on two numbers or strings\n\nInputs\:\nvalue1 - The first value.\nvalue2 - The second value.\noperation - The operation to perform (+ - * ^ / > < \=\= \!\= >\= <\=).\n\nResponses\:\nsuccess -  The operation completed successfully. If a boolean operation, it evaluated to true.\nfailure - Something went wrong or the boolean operation returned false.\n\nReturns\:\nThe raw result of the operation, for boolean values this is true or false.\n\nReturns\:\nField 1 - The first value. Here for compatibility\nField 2 - The second value. Here for compatibility\nField 3 - The operation. Here for compatibility\nformatted_result - The formatted result of the operation, for boolean values this is true or false.</pre>
98ae14b7-ff3d-4c76-a8f2-03676af59fe6.d41f2a9f-900b-4b42-b199-da8e65087932.prompt=Enter a value for toFind
98ae14b7-ff3d-4c76-a8f2-03676af59fe6.defa9fd8-f4b6-418f-bd9a-fdb68030f5a4.prompt=Enter a value for value1
98ae14b7-ff3d-4c76-a8f2-03676af59fe6.description=<pre>Checks to see if one string contains another. Returns a boolean value.\n\nInputs\:\ncontainer - The string to check\ntoFind - The string to find\nignoreCase - Boolean value for whether or not to ignore case during occurrence counting.\n\nResponses\:\nsuccess - The first string contains the second string.\nfailure - Somethign went wrong OR the The first string doesn't contain the second string</pre>
98d85893-3d7d-40bf-9b42-98314b779f3b.ee74a7d9-b268-4033-a73d-6ad1790df59a.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
9951c8c5-26ee-467e-86d7-85b8651e03ef.31a88d1d-6abb-42fc-bc66-d682065073cf.description=This workflow returns the component properties and values using Artifact APIs.\n\nresult\:\npropertyNameValuesList\: pipe separated list of property name and values ( where each property name and values would be ; seprated and multiple values would be , seprated)\ne.g. - property 1; value1,value2|property 2; value3|property 3; value3,value4|........
9951c8c5-26ee-467e-86d7-85b8651e03ef.abdcf71f-e489-4e52-b2f7-669e533f1973.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
9b515b01-d9f5-44d4-b9bd-678f859fd962.1789db15-2bbf-40e6-a71e-6b6215f06485.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
9b515b01-d9f5-44d4-b9bd-678f859fd962.1e3504b1-b073-43f2-85dd-bbd65fd362f8.callout=We need to wait a period of time before checking the agent registration
9b515b01-d9f5-44d4-b9bd-678f859fd962.53702350-4c04-4f71-a22d-b57359bf25c7.description=Retrieves the server(s) ServerVO properties\n\nInputs\:\ncoreHost - The DNS name or IP Address of your SAS core.\ncorePort - The port to Connect to your SAS core on.\ncoreProtocol - The protocol to connect to your SAS core with. Either HTTP or HTTPS.\ncoreUsername - The username for host.\ncorePassword - The password for host.\ncoreVersion - The version of SAS to use.\nagent - The agent name search string (can be a partial name and multiple return results can be returned; the matching type for this input can be selected by using the 'matching' flag). \nmatching - A flag that indicates if the search performed using the agent name should be based on a partial or exact match. The default value for this input is 'Begins With'.\nserverID - The ID of the searched server. This input should be used for unique identification. If provided, then the 'agent' input is ignored.\ndelimiter - The delimiter used to separate the result values. By default the values are comma delimited.\n\nResponses\:\nsuccess - retrieved successfully\nfailure - failed to retrieve data\n\nReturns\:\ncreatedBy - The name of the user who created this object.\ncreatedDate - The date that this object was created.\nid - The unique ID of this object.\ncreatedBy - The name of the user who created this object.\ncreatedDate - The date that this object was created.\ndirtyAttributes - A ; delimited list of attributes that are dirty (Modified and not yet fully propagated).\nmodifiedBy - The user who last modified this object.\nmodifiedDate - The date that this object was last modified on.\ndescription - The description of this object.\nhostname - The DNS hostname of this object.\nmodel - The model of this object.\nosVersion - The version of the OS running on the object.\nprimaryIP - The primary IP address of this object.\nserialNumber - This object's serial number.\nmanufacturer - The manufacturer of this object.\nname - The name of this object\nversion - The version of this object\ncodeset - The Code set of this object.\ncustomerName - The name of the customer this object was created for.\ndefaultGW - The default gateway used when accessing this object.\ndiscoveredDate - The date when this object was first discovered.\nfacilityName - The name of the facility housing this object.\nlocale - The locale this object is in.\nlockComment - The comment on this object's locked. NOTE\: object may not be locked.\nlockDate - The date this object was last locked.\nlockUser - The user who locked this object last.\nisLocked - A boolean value specifying whether or not this object is currently locked.\nloopbackIP - The loopback ip address used by this object.\nmanagementIP - The management ip address used by this object.\nmid - mid The server's management identifier.\nNetBIOSName - The full netBIOS (Windows networking) name for this object.\nlifecycle - The state in the Opsware lifecycle that this object is currently in.\norigin - The origin of the managed server. ASSIMILATED or PROVISIONED\nosFlavor - The flavor of the OS running on this object. For example\: Windows.\nosSPVersion - The service pack version of the OS running on the object.\npeerIP - The managed server's peer IP address.\nplatformName - The name of the platform.\npreviousSWRegDate -The last time the Opsware agent reported the installed software on the server.\nrealmName - The name of the realm this object is in.\nstage - The stage of the managed server.\nstate - The current state of the managed server\: OK, UNREACHABLE or MAINTENANCE\nuse - The intended use of the managed server (i.e. its role in a deployment)\: DEVELOPMENT, STAGING, PRODUCTION or UNKNOWN. \nvirtualizationType - The virtualization type.
9b515b01-d9f5-44d4-b9bd-678f859fd962.55c01ed7-58c1-402f-83e6-3c9f4c87ee01.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
9b515b01-d9f5-44d4-b9bd-678f859fd962.57a0f8ba-e414-42d2-9510-b7fa915f5499.description=Sleeps for "X" seconds.\n\n<pre>\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason\n</pre>
9b515b01-d9f5-44d4-b9bd-678f859fd962.59fac9b1-abb6-4c7f-a119-2c65362fa10e.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
9b515b01-d9f5-44d4-b9bd-678f859fd962.6b8eb201-d738-4dba-9b16-7ac2aad8db0f.description=Sleeps for "X" seconds.\n\n<pre>\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason\n</pre>
9b515b01-d9f5-44d4-b9bd-678f859fd962.7cd2f795-3022-4855-9eff-5f126841092d.description=Use an apx command to deactivate a server from the Server Automation server (SAS). Internally this flow will use ssh for the protocol and  port 2222 for the connection.\n\nInputs\:\ncoreHost -  SAS core hostname or IP address\ncoreUsername -  SAS username to access the coreHost \ncorePassword -  SAS user's password to access the coreHost\nserverName -  name of the  managed server to be deactivated\n\nResponses\:\nsuccess -  operation completed successfully\nfailure - otherwise\n
9b515b01-d9f5-44d4-b9bd-678f859fd962.8267ce73-6d08-44a6-8c1e-8f250ef72bf0.callout=fix to sync SA name with system's hostname on physical linux builds\n -Overrides sa.hostname
9b515b01-d9f5-44d4-b9bd-678f859fd962.9ad98694-063e-42b2-9500-8f50a711f7e3.description=Counts from one number to another number.\n\n<pre>\nInputs\:\ncount - number of loops to complete\nreset - If true, then the counter will restart counting from the beginning.\n\nReturns\:\nThe number that was just counted.\n\nResponses\:\nhas more - Not yet done counting.\nno more - Done counting. This will only be returned once, then counting restarts.\nfailure - Something went wrong.\n</pre>
9b515b01-d9f5-44d4-b9bd-678f859fd962.c0170af7-8754-4a84-b06c-0aeb5cda5add.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
9b515b01-d9f5-44d4-b9bd-678f859fd962.def183ff-8050-407d-b818-e1a2a4f1ba1b.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
9b515b01-d9f5-44d4-b9bd-678f859fd962.e0939dce-7db6-49b0-831d-87bbe66ba5ad.description=Counts from one number to another number.\n\n<pre>\nInputs\:\ncount - number of loops to complete\nreset - If true, then the counter will restart counting from the beginning.\n\nReturns\:\nThe number that was just counted.\n\nResponses\:\nhas more - Not yet done counting.\nno more - Done counting. This will only be returned once, then counting restarts.\nfailure - Something went wrong.\n</pre>
9b515b01-d9f5-44d4-b9bd-678f859fd962.f7f7f473-a413-4425-80ba-b2ddabbbe207.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
9b515b01-d9f5-44d4-b9bd-678f859fd962.f95828ef-c39d-42b2-9e62-d5b588534b01.description=<pre>Scan opened ports on give host  \n\nInputs\: \n host - IP address Host name to be scanned\n lowestPort - lowest port range\n highestPort - highest port range\n portType - the type of ports to be scanned (TCP or UDP). If not specified, the TCP ports are scanned.\n\nNote\:\n To scan specific port give same port as parameter for both Lowest Port and Highest Port, \n\nResponses\:\n success - the command was executed successfully\n failure - the command could not be executed\n\nResult\:\n finalResult - Information about the ports' statuses on a given machine.\n\nExtra results\:\n host - the IP of the host for which the ports are scanned\n ports - Number of ports scanned\n opened - Number of ports open\n closed - Number of ports closed\n dropped - Number of ports dropped\n</pre>\n
9b515b01-d9f5-44d4-b9bd-678f859fd962.fbe05da1-10f6-4ab5-9eb6-16c7664c06f4.description=<pre>Runs a command and allows user to specify that it runs locally (in this case no port should be specified), via ssh, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\nhost - Hostname or ip address.\nport - Port number for connecting to the host.\nusername - Username to connect as.\npassword - Password of the user. If using a private key file this will be used as the passphrase for the file.\nprotocol - The protocol used to run the command (can be one of ssh, ROSH, GlobalShell, Telnet, RSH, REXEC, local, WMI, NASConnectTelnet, or HPOM).\ntimeout - (optional, default 90 seconds) time in milliseconds to wait for the command to complete; increase its value if you are getting incomplete output results or timeout.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\nenvironment - Specifies environment variables/values that need to be defined when running command.\nstartDir - The path to the starting directory.\npty - Whether to use pty (used by ssh, GlobalShell. Valid values\: true, false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on RAS host (used by ssh, GlobalShell).\nsasHost - The host we want to run the ROSH command on.\nsasHostUsername - The username used to run the ROSH command on sasHost.\nusernamePrompt - The prompt that when seen should send the username; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'\npasswordPrompt - The prompt that when given should send the password; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'Password\:'\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default, the path will have to be  changed on Windows 2000 systems\nnasDevice - The NAS device to run the command on when using the NASConnect protocol.\nnasDeviceConsoleMode - The NAS device console mode used to run the command scripts that run the command on the given NAS device. If this input is empty, command scripts are not used, and the connection to the NAS device and the command are issued directly in the console; this is not recommended, since its error handling capabilities are limited and it might result in success even when the command fails to execute. The values for this input can be found in the NAS web interface, as a drop-down list when a new command script is created (ex. Cisco IOS enable).\nhpomNode - Node on which the command is to be executed.\nhpomProtocol - Protocol to communicate with HPOM (http or https).\ncharacterSet - The characterSet name for stream encoding and decoding between the RAS and target machine. For example, SJIS,EUC-JP, UTF-8.  By default it is UTF-8 (used by ssh, GlobalShell, Telnet, RSH, REXEC).\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nstdErr - The STDERR of the command.\nstdOut - The STDOUT of the command.\n\nNotes\:\nTelnet protocol - Since telnet is not a remote execution protocol but a shell protocol the response will always be successful if the command was executed in the remote shell.  The return code of the specified command cannot be determined in this protocol.  If you must use the telnet protocol with this operation besure to check the command results. Consider using ssh or rexec protocol instead.\n</pre>
9b5fecbe-d389-4403-8b37-db78cd190516.5494df0f-e8e3-4a35-b740-8304eb23dee4.description=<pre>\nRuns a SQL query against an Oracle database, using the information in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation. Subsequent calls with the same information return the other rows.\n\nInputs\:\n    TNSPath -The path to the folder of the TNS file tnsnames.ora. This path must be accessible by the OO RAS service. For example, if the RAS and the Oracle server are installed on the same Windows system, the TNSPath might look like \u201CC\:\\app\\Administrator\\product\\11.1.0\\db_1\\network\\admin\u201D. If the RAS and the Oracle server are on different Windows systems, you can copy the tnsnames.ora file  to the RAS system. The TNSPath might look like \u201CC\:\\Program Files\\Hewlett-Packard\\Operations Orchestration\\RAS\\Java\\Default\\webapp\\conf\u201D or \u201CC\:\\Temp\u201D depending on where you place the .ora file. \n    TNSEntry - The entry name in the tnsnames.ora file that contains the connection information. For example, the value for the TNSEntry input is \u201CTestEntry\u201D if the content in the tnsnames.ora file looks like the following\: \n\nTestEntry \=\n  (DESCRIPTION \=\n   (ADDRESS \= (PROTOCOL \= TCP)(HOST \= 16.110.111.111)(PORT \= 1521))\n   (CONNECT_DATA \=\n     (SERVER \= DEDICATED)\n     (SERVICE_NAME \= orcl)\n   )\n )\n\n    Username - The username to connect to the Oracle database. \n    Password - The password for the Username.\n    Command - The command to execute. \n    Delimiter \u2013 The delimiter to use between the columns in the returnResult result.\n    Key \u2013 The key to use to keep multiple query results distinct.\n    timeout - Seconds to wait before timing out the SQL command execution.\nDefault values\: 0 \n\nResults\:\n    returnResult - This is the primary output. Returned the data returned for each row separated by the value you specified in the Delimiter input (for example, \u201Ckey16|lst|16\u201D).\n    columnNames - The names of the columns returned, separated by the value you specified in the Delimiter input (for example, \u201CMYKEY|NAME|ID\u201D).\n    rowsLeft - The number of rows remaining that match the query. \n\nResponses\:\n    more items - More rows are available for retrieval.\n    no more items - No more rows are available.\n    failure - There was an error executing the command.\n\nNotes\:\n1. This operation only supports Oracle. \n2. This operation can only execute the "SELECT" statement. For statements that modify the database, use the TNS Names SQL Command operation.\n\n</pre>\n\n\n
9b5fecbe-d389-4403-8b37-db78cd190516.71540b51-4a3f-4888-9746-5b91742cfcce.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
9b5fecbe-d389-4403-8b37-db78cd190516.79b39c5f-902b-4e2f-9a86-e32bb911650c.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
9b5fecbe-d389-4403-8b37-db78cd190516.9e3695ce-7a1f-43a9-8bb5-09c90e29cfd5.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
9d1f63b2-5587-4d9f-8a3a-b48e355baea0.02390691-4ded-4fc1-b25d-4adbe93e3be1.description=<pre>Clears the value of a flow variable\n\nInput Parameters\:\nkeyName - the name of the flow variable to clear\n\nResponses\:\nsuccess - cleared the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, null];</pre>
9d1f63b2-5587-4d9f-8a3a-b48e355baea0.23032404-6ace-4fdf-a8a8-7863ee56d71c.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
9d1f63b2-5587-4d9f-8a3a-b48e355baea0.5451b80e-5e9e-4d09-ae32-02368423739b.description=<pre>This is an operation that does nothing, and can be used to display information to the user by editing the display tab. It can also be used for filtering flow variables by feeding them in as inputs, and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
9d1f63b2-5587-4d9f-8a3a-b48e355baea0.5e7be8b0-2239-4d25-9c2e-0687c712641e.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
9d1f63b2-5587-4d9f-8a3a-b48e355baea0.629dce51-a76f-47fe-902a-1dd601376e55.description=Sleeps for "X" seconds.\n\n<pre>\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason\n</pre>
9d1f63b2-5587-4d9f-8a3a-b48e355baea0.84e76456-2b0e-4d72-a90b-650b98baba11.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
9d1f63b2-5587-4d9f-8a3a-b48e355baea0.903086ba-3d45-4472-94b2-a8b07c42bf88.description=Counts from one number to another number.\n\n<pre>\nInputs\:\ncount - number of loops to complete\nreset - If true, then the counter will restart counting from the beginning.\n\nReturns\:\nThe number that was just counted.\n\nResponses\:\nhas more - Not yet done counting.\nno more - Done counting. This will only be returned once, then counting restarts.\nfailure - Something went wrong.\n</pre>
9d1f63b2-5587-4d9f-8a3a-b48e355baea0.9104cf3b-3ed0-4523-a426-f0963e3b42bc.description=<pre>\nOffsets the current date and time by a given number of units. If locale is specified, the date and time will be in the format based on the locale. Otherwise, default locale will be used. \n\nInputs\:\nunits - The number of units to offset by. If this is positive, the offset goes into the future, if it is negative the offset goes into the past.\nsecondsPerUnit - The number of seconds per unit. This defaults to 1 hour, thus the units is by default measured in hours.\nlocaleLang - The locale language for date and time string. For example,  en or ja.\nlocaleCountry - The locale country for date and time string. For example, US or JP. If localeLang is not specified, this input will be ingored.\n\nReturns\:\nThe offset date/time. \n\nResponses\:\nsuccess - Operation completed successfully.\nfailure - Something went wrong.\n</pre>
9d1f63b2-5587-4d9f-8a3a-b48e355baea0.9740fde9-3f77-4956-93fc-2e5e57975776.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
9d1f63b2-5587-4d9f-8a3a-b48e355baea0.adb46695-3034-4787-8811-4517aaaaab54.description=Sleeps for "X" seconds.\n\n<pre>\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason\n</pre>
9d1f63b2-5587-4d9f-8a3a-b48e355baea0.b83aad09-3de6-4675-a8b5-2a5a2a32d785.description=generates a random password consisting og lowercase letters, uppercase letter and number\n\nInputs\:\npasswordLength - specifies length of the password to be generated\n\nOutputs\:\ngeneratedPassword - the generated password string
9d1f63b2-5587-4d9f-8a3a-b48e355baea0.b9f2f853-1eca-4cd3-98f3-4eeeb90ab811.description=<pre>Schedules a flow or updates an existing schedule of a flow. The operation can be used on OO version 9.03 and greater.  \n\nInputs\:\n    host - The host running Central 9.03 or greater.\nDefault value\: localhost.\n    username - The username to use when connecting to the Central service.\n    password - The password to use when connecting to the Central service.\n    port - The port the Central service is running on.\nDefault value\: 8443.\n    protocol - Either http or https. The protocol used to communicate to the Central service.\nDefault value\: https.\n    trustAllRoots - If true, enables weak security over SSL. A SSL certificate is trusted even if no trusted CA issued it.\nDefault value\: false.\n    trustKeystore - The path of the truststore file. It may be empty if HTTPS server authentication is not to be used. If not specified  the operation will search for{iconclude_home}/Central/conf/rc_keystore or {iconclude_home}/Studio/conf/rc_keystore in this order.\n    trustPassword - Password to unlock the truststore. Provide this input only if trustKeystore is not empty.\n    flow - The uuid or the path of the flow to run.\nExample\: /library/my ops flows/test\n    schedule - The uuid of the schedule to update.\n    names - A delimiter separated list of names of flow inputs.\n    values - A delimiter separated list of values of flow inputs.\n    delimiter - the delimiter separating lists of names and values.\n    description - a description of this schedule.\n    enabled - Set false to create the schedule disabled. This input is case insensitive.\nValid values\: true, false.\nDefault value\: true.\n    startTime - The time to start running the flow either as minutes from now or as a date. Use the utility operations from "Date and Time" folder to pass valid startTime value.\nExample\: Wed, 12 Dec 2012 12\:12\:12 GMT\nExample\: Wed, 12 Dec 2012 12\:12\:12 GMT+0430 (4 hours, 30 minutes west of the Greenwich meridian)\n    endTime - The time to end running the flow either as minutes from now or as a date. Use the utility operations from "Date and Time" folder to pass valid endTime value.\nExample\: Wed, 12 Dec 2012 12\:12\:12 GMT\nExample\: Wed, 12 Dec 2012 12\:12\:12 GMT+0430 (4 hours, 30 minutes west of the Greenwich meridian)\n    timesToRun - The number of times to re-run the flow schedule. If empty, the number of times to re-run the schedule will be computed as (endTime - startTime)/repeatInterval. If -1 the flow will be scheduled to run indefinitely, otherwise this input must have a positive value.\n    repeatInterval - Sets the time Interval in minutes between schedule triggering. If empty, the operation will set it to 1 minute.\n\nReturns\:\n    returnResult - Primary output. The uuid of the schedule.\n    flowUuid - The uuid of the flow. This can be useful if the flow input is the path of the flow.\n\nResponses\:\n    success -The schedule was created or updated.\n    failure - Could not connect to central web service. Invalid inputs. Invalid flow path. The schedule ends before it starts. The schedule ends in the past.\n\nNotes\:\n1. <flow> and <schedule> inputs are mutually exclusive.\n2. <timesToRun> and <endTime> inputs are mutually exclusive.\n</pre>
9d1f63b2-5587-4d9f-8a3a-b48e355baea0.d65d1536-589f-4239-b451-bb9738fcb6ab.description=<pre>Clears the value of a flow variable\n\nInput Parameters\:\nkeyName - the name of the flow variable to clear\n\nResponses\:\nsuccess - cleared the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, null];</pre>
9d1f63b2-5587-4d9f-8a3a-b48e355baea0.e66efd36-7bf6-43d1-b996-0bd29ab7f349.description=<pre>Scan opened ports on give host  \n\nInputs\: \n host - IP address Host name to be scanned\n lowestPort - lowest port range\n highestPort - highest port range\n portType - the type of ports to be scanned (TCP or UDP). If not specified, the TCP ports are scanned.\n\nNote\:\n To scan specific port give same port as parameter for both Lowest Port and Highest Port, \n\nResponses\:\n success - the command was executed successfully\n failure - the command could not be executed\n\nResult\:\n finalResult - Information about the ports' statuses on a given machine.\n\nExtra results\:\n host - the IP of the host for which the ports are scanned\n ports - Number of ports scanned\n opened - Number of ports open\n closed - Number of ports closed\n dropped - Number of ports dropped\n</pre>\n
9d24e2bd-5af8-4853-a064-fe0c53e9036f.3d6377ab-1af6-4e43-a0fb-a851e35f2d72.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
9d24e2bd-5af8-4853-a064-fe0c53e9036f.96a70086-f0ff-45ce-bf61-ed1124a224f9.description=Adds a custom attribute to a specific object (object can be of type\: SERVERS, DEVICE_GROUPS, SOFTWARE_POLICIES, CUSTOMERS).\n\nInputs\:\ncoreHost - The DNS name or IP Address of your SAS core.\ncorePort - The port to Connect to your SAS core on.\ncoreProtocol - The protocol to connect to your SAS core with. Either HTTP or HTTPS.\ncoreUsername - The username for host.\ncorePassword - The password for host.\ncoreVersion - The version of SAS to use.\nattachedToType - The type of the objectto which the Custom Attribute is attached to (must be one of [SERVERS, DEVICE_GROUPS, SOFTWARE_POLICIES, CUSTOMERS].\nattachedToName - The name of the object to which the Custom Attribute is attached to (e.g. name of server or device group, short name of customer etc).\nattachedToID - The id of the object to which the Custom Attribute is attached to (e.g. id of server or device group etc). Use this input for unique identification.\nname - The name of the attribute.\nvalue - The value of the attribute.\n\nResponses\:\nsuccess - retrieved successfully\nfailure - failed to retrieve data
9d24e2bd-5af8-4853-a064-fe0c53e9036f.e1af6eae-804e-4237-b22d-64edd94cccf5.description=<pre>\nIterates through a list of values. Modifying the value of the list and delimiter inputs during iteration is not generally supported.\n\nInputs\:\nlist - The list to iterate through.\nseparator - A delimiter that separates elements in the list.\n\nReturns\:\nThe current element of the list, if the response is has more\n\nResponses\:\nhas more - Another value was in the list, and has been returned.\nhas no more - The iterator has gone fully through the list. This response will only be returned once per iteration through the list, a subsequent call to the Iterator will restart the Iteration through the list.\nfailure - failed to process the list.\n\nNote\: Where the iterator is in the list is tracked by each step's unique id. Therefore you can iterate on the same list from multiple steps simultaneously.\n\nWARNING\: Any step that will use the results of this Iterator operation will, by default, attempt to assign that step's inputs from a flow variable. If this is left checked, then the first element of the iterator will be used for every cycle of iteration.\n\n</pre>
9d7d6332-e7a7-4768-8376-37faa0bc9ffb.09575a59-8971-41b1-ae43-783113680a04.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
9d7d6332-e7a7-4768-8376-37faa0bc9ffb.0c1c3fad-2218-4106-ac40-4d7e4f17eeaf.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
9d7d6332-e7a7-4768-8376-37faa0bc9ffb.2d56f2af-0ea2-4044-abab-cca22a19211a.description=Sleeps for "X" seconds.\n\n<pre>\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason\n</pre>
9d7d6332-e7a7-4768-8376-37faa0bc9ffb.31b7eecd-c31c-432c-8554-92f0938d195a.description=<pre>Scan opened ports on give host  \n\nInputs\: \n host - IP address Host name to be scanned\n lowestPort - lowest port range\n highestPort - highest port range\n portType - the type of ports to be scanned (TCP or UDP). If not specified, the TCP ports are scanned.\n\nNote\:\n To scan specific port give same port as parameter for both Lowest Port and Highest Port, \n\nResponses\:\n success - the command was executed successfully\n failure - the command could not be executed\n\nResult\:\n finalResult - Information about the ports' statuses on a given machine.\n\nExtra results\:\n host - the IP of the host for which the ports are scanned\n ports - Number of ports scanned\n opened - Number of ports open\n closed - Number of ports closed\n dropped - Number of ports dropped\n</pre>\n
9d7d6332-e7a7-4768-8376-37faa0bc9ffb.94611368-0f6e-4fe4-8302-10f789cf952d.description=Counts from one number to another number.\n\n<pre>\nInputs\:\ncount - number of loops to complete\nreset - If true, then the counter will restart counting from the beginning.\n\nReturns\:\nThe number that was just counted.\n\nResponses\:\nhas more - Not yet done counting.\nno more - Done counting. This will only be returned once, then counting restarts.\nfailure - Something went wrong.\n</pre>
9d7d6332-e7a7-4768-8376-37faa0bc9ffb.a98c80ea-b22b-4aeb-9fc7-b3b7b199f7d7.description=<pre>Scan opened ports on give host  \n\nInputs\: \n host - IP address Host name to be scanned\n lowestPort - lowest port range\n highestPort - highest port range\n portType - the type of ports to be scanned (TCP or UDP). If not specified, the TCP ports are scanned.\n\nNote\:\n To scan specific port give same port as parameter for both Lowest Port and Highest Port, \n\nResponses\:\n success - the command was executed successfully\n failure - the command could not be executed\n\nResult\:\n finalResult - Information about the ports' statuses on a given machine.\n\nExtra results\:\n host - the IP of the host for which the ports are scanned\n ports - Number of ports scanned\n opened - Number of ports open\n closed - Number of ports closed\n dropped - Number of ports dropped\n</pre>\n
9d7d6332-e7a7-4768-8376-37faa0bc9ffb.b6cff456-757a-4677-adbf-668fe7d301bd.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
9d7d6332-e7a7-4768-8376-37faa0bc9ffb.c28a49e3-2171-4772-9229-21853bf866c9.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
9d7d6332-e7a7-4768-8376-37faa0bc9ffb.db1b39b6-b088-4f8f-ad53-8b390077e126.description=Counts from one number to another number.\n\n<pre>\nInputs\:\ncount - number of loops to complete\nreset - If true, then the counter will restart counting from the beginning.\n\nReturns\:\nThe number that was just counted.\n\nResponses\:\nhas more - Not yet done counting.\nno more - Done counting. This will only be returned once, then counting restarts.\nfailure - Something went wrong.\n</pre>
9d7d6332-e7a7-4768-8376-37faa0bc9ffb.e055ac23-96d2-4ef3-bd95-d6311123499a.description=Sleeps for "X" seconds.\n\n<pre>\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason\n</pre>
9d7d6332-e7a7-4768-8376-37faa0bc9ffb.eba6b166-4c95-45d0-93f4-e0075d9a3b3a.description=<pre>Runs a command and allows user to specify that it runs locally (in this case no port should be specified), via ssh, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\nhost - Hostname or ip address.\nport - Port number for connecting to the host.\nusername - Username to connect as.\npassword - Password of the user. If using a private key file this will be used as the passphrase for the file.\nprotocol - The protocol used to run the command (can be one of ssh, ROSH, GlobalShell, Telnet, RSH, REXEC, local, WMI, NASConnectTelnet, or HPOM).\ntimeout - (optional, default 90 seconds) time in milliseconds to wait for the command to complete; increase its value if you are getting incomplete output results or timeout.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\nenvironment - Specifies environment variables/values that need to be defined when running command.\nstartDir - The path to the starting directory.\npty - Whether to use pty (used by ssh, GlobalShell. Valid values\: true, false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on RAS host (used by ssh, GlobalShell).\nsasHost - The host we want to run the ROSH command on.\nsasHostUsername - The username used to run the ROSH command on sasHost.\nusernamePrompt - The prompt that when seen should send the username; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'\npasswordPrompt - The prompt that when given should send the password; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'Password\:'\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default, the path will have to be  changed on Windows 2000 systems\nnasDevice - The NAS device to run the command on when using the NASConnect protocol.\nnasDeviceConsoleMode - The NAS device console mode used to run the command scripts that run the command on the given NAS device. If this input is empty, command scripts are not used, and the connection to the NAS device and the command are issued directly in the console; this is not recommended, since its error handling capabilities are limited and it might result in success even when the command fails to execute. The values for this input can be found in the NAS web interface, as a drop-down list when a new command script is created (ex. Cisco IOS enable).\nhpomNode - Node on which the command is to be executed.\nhpomProtocol - Protocol to communicate with HPOM (http or https).\ncharacterSet - The characterSet name for stream encoding and decoding between the RAS and target machine. For example, SJIS,EUC-JP, UTF-8.  By default it is UTF-8 (used by ssh, GlobalShell, Telnet, RSH, REXEC).\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nstdErr - The STDERR of the command.\nstdOut - The STDOUT of the command.\n\nNotes\:\nTelnet protocol - Since telnet is not a remote execution protocol but a shell protocol the response will always be successful if the command was executed in the remote shell.  The return code of the specified command cannot be determined in this protocol.  If you must use the telnet protocol with this operation besure to check the command results. Consider using ssh or rexec protocol instead.\n</pre>
9d7d6332-e7a7-4768-8376-37faa0bc9ffb.ef325c15-5270-474d-959f-858013a5a82c.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
9e87c03b-a0c9-4c97-b863-c405d9285767.description=The name of the SA audit task for Linux servers that will be used for audit compliance and remediation in CSA.
9efac420-48fd-4e84-88ea-86f62519dfa9.description=Windows KMS server for license activation
Configuration.description=
Configuration\\Categories.description=
Configuration\\Domain\ Terms.description=
Configuration\\Group\ Aliases.description=
Configuration\\Role\ Aliases.description=
Configuration\\Scriptlets.description=
Configuration\\Selection\ Lists.description=
Configuration\\System\ Accounts.description=
Configuration\\System\ Evaluators.description=
Configuration\\System\ Filters.description=
Configuration\\System\ Properties.description=
Configuration\\System\ Properties\\esl.description=
Configuration\\System\ Properties\\scvmm.description=
Library.description=Main Library with all OO operations and flows
Library\\PC.description=
Library\\PC\\Actions.description=
Library\\PC\\Approval.description=
Library\\PC\\External.description=
Library\\PC\\Subflows.description=
Library\\PC\\Subflows\\BILLING.description=
Library\\PC\\Subflows\\CSA.description=
Library\\PC\\Subflows\\CSV.description=
Library\\PC\\Subflows\\DB.description=
Library\\PC\\Subflows\\DNS.description=
Library\\PC\\Subflows\\DP.description=
Library\\PC\\Subflows\\EMAIL.description=
Library\\PC\\Subflows\\ESL.description=
Library\\PC\\Subflows\\ESL\\excel.description=
Library\\PC\\Subflows\\IPAM.description=
Library\\PC\\Subflows\\IPAM\\Dependencies.description=
Library\\PC\\Subflows\\LINUX.description=
Library\\PC\\Subflows\\LINUX\\subflow.description=
Library\\PC\\Subflows\\MOE.description=
Library\\PC\\Subflows\\MOE\\subflow.description=
Library\\PC\\Subflows\\NETWORK.description=
Library\\PC\\Subflows\\NIC.description=
Library\\PC\\Subflows\\SA.description=
Library\\PC\\Subflows\\SA\\Dependencies.description=
Library\\PC\\Subflows\\SCVMM.description=
Library\\PC\\Subflows\\Storage.description=
Library\\PC\\Subflows\\VM.description=
Library\\PC\\Subflows\\WIN.description=
Library\\PC\\Subflows\\_ADMIN.description=
Library\\PC\\Subflows\\_ADMIN\\DB.description=
Library\\PC\\Subflows\\_COMMONS.description=
Library\\PC\\Subflows\\vCenter.description=
Library\\PC\\Subflows\\vCenter\\Dependencies.description=
a0480011-e4bf-47b6-904b-3e808d089bcb.description=The name of the domain that contains the Exchange 2007 host.
a298a6ad-a9b5-4389-bd4b-ec38ba0e45bf.description=DB Scheme
a33c8eaa-0e3a-4cd1-9bdb-64aab4be92d2.060ba93c-e887-4ac6-b49b-37942e137598.description=<pre>Scan opened ports on give host  \n\nInputs\: \n host - IP address Host name to be scanned\n lowestPort - lowest port range\n highestPort - highest port range\n portType - the type of ports to be scanned (TCP or UDP). If not specified, the TCP ports are scanned.\n\nNote\:\n To scan specific port give same port as parameter for both Lowest Port and Highest Port, \n\nResponses\:\n success - the command was executed successfully\n failure - the command could not be executed\n\nResult\:\n finalResult - Information about the ports' statuses on a given machine.\n\nExtra results\:\n host - the IP of the host for which the ports are scanned\n ports - Number of ports scanned\n opened - Number of ports open\n closed - Number of ports closed\n dropped - Number of ports dropped\n</pre>\n
a33c8eaa-0e3a-4cd1-9bdb-64aab4be92d2.1fc8ee12-c6c8-4903-94d5-e20997972c81.description=Counts from one number to another number.\n\n<pre>\nInputs\:\ncount - number of loops to complete\nreset - If true, then the counter will restart counting from the beginning.\n\nReturns\:\nThe number that was just counted.\n\nResponses\:\nhas more - Not yet done counting.\nno more - Done counting. This will only be returned once, then counting restarts.\nfailure - Something went wrong.\n</pre>
a33c8eaa-0e3a-4cd1-9bdb-64aab4be92d2.417f1a90-de55-40ef-9084-b001e8b872fe.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
a33c8eaa-0e3a-4cd1-9bdb-64aab4be92d2.5ddf1aea-75cf-4002-84a2-3cff44686950.description=Counts from one number to another number.\n\n<pre>\nInputs\:\ncount - number of loops to complete\nreset - If true, then the counter will restart counting from the beginning.\n\nReturns\:\nThe number that was just counted.\n\nResponses\:\nhas more - Not yet done counting.\nno more - Done counting. This will only be returned once, then counting restarts.\nfailure - Something went wrong.\n</pre>
a33c8eaa-0e3a-4cd1-9bdb-64aab4be92d2.9f26f2a4-a3db-4af0-b3d2-bef7e3644146.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
a33c8eaa-0e3a-4cd1-9bdb-64aab4be92d2.a61f9856-f878-47b7-8f8e-cc9d64088803.description=Sleeps for "X" seconds.\n\n<pre>\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason\n</pre>
a33c8eaa-0e3a-4cd1-9bdb-64aab4be92d2.b9359a7e-cedb-4dcd-9029-ba1662db8953.description=Sleeps for "X" seconds.\n\n<pre>\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason\n</pre>
a33c8eaa-0e3a-4cd1-9bdb-64aab4be92d2.description=Flow specifically to configure windows client supplied images.  Flow required since some windows configuration is done \nin the SA subflows.  Since ClientSupplied bypasses all of the SA subflows, this flow was needed to handle the \nspecific ClientSupplied tasks.\n\n- Reset Administrator Account to localadmin account.\n\n
a33c8eaa-0e3a-4cd1-9bdb-64aab4be92d2.facab068-f750-4f46-9aff-05d4c9a231a6.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
a35442b4-0a44-4251-a4f7-31043defbccf.description=Defines the length of the automatically generated password
a3b87aa2-aaa1-4990-88c7-407563ec90fa.297f3ed3-b6cd-4d06-95d4-8d0b1b2468e9.prompt=Source File\:
a3b87aa2-aaa1-4990-88c7-407563ec90fa.description=<pre>Reads a file.\n\nInput Parameters\:\nsource - the full path and filename of the file to be read\nfilter - the string to filter on (leave blank for no filter). If this filter\n   is found it will return all lines that matched the filter. If no match \n   is found, no line are returned.\niterate - (true,false) if set to false, only count is returned.  If set to \n   true, then each row will be returned for each subsequent call\ndelimiter - If set to null, the file is read line by line and each line \n   becomes the returnResult. Otherwise, the delimiter is inserted between each \n   line that is read and becomes the returnResult. (note, the entire file may \n   or may not still be fully read at once, depending on size).\neofReset - If set to true than after the No More response has been returned \n   once, the operation will restart reading the file from the beginning on the \n   next call.\ncharacterSet - characterSet of the file to read from. Valid values\: UTF-8, UTF-16 and UTF-32. For invalid or empty input value the default encoding UTF-8 will be used. \n\nResponses\:\nsuccess - read file (if iterate is true, more rows are available)\nno more items - no more items are available for retrieval\nfailure - failed to read file\n\nExtra Results\:\nCOUNT - number of lines that matched filter, or if no filter specified, then\nthe total lines read\n</pre>
a3b87aa2-aaa1-4990-88c7-407563ec90fa.eb657eb8-7f9a-49ec-859a-8eafa627f785.prompt=Filter String\:
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.0291d84f-6bf9-4600-a710-0896be2a0420.description=<pre>\nModifies the specified cell with new value in an Excel document. \nXLS, XLSX and XLSM formats are supported. \n\nInputs\:\n    excelFileName - The name of the new Excel document. The complete path should be given if the file does not exist in the working directory(%ICONCLUDE_HOME%\\jetty\\bin).\nExamples\: c\:\\temp\\test.xls \n    worksheetName - The name of Excel worksheet. \nDefault value\: Sheet1\n    rowIndex - A list of row indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from the index of the first row  to the index of the last row of the Excel worksheet.\n    columnIndex - A list of column indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from 0 to the index of the last column in the Excel worksheet.\n   newValue\: A comma delimited list of data to write to the specified cell. The size of the newValue list should be the same as the size of columnIndex input.\n\nResults\:\n    returnResult - This is the primary output. Returns the number of rows that were affected.  \n\nResponses\:\n    success - The cell data was modified successfully.\n    failure - Failed to modify the cell data.\n    incomplete - Not all the cells specified were modified.\n\nNotes\:\n1. All the index inputs are 0 based.\n2. For the indexes in rowIndex input that is less than the first data row index or greater than the last row index in the worksheet, the operation trims those row indexes.\n3. For the indexes in columnIndex input that is less than 0 or greater than the last column index in a row, the operation trims those column indexes.\n4. If columnIndex input is empty, the size of the newValue list should be the same as column count in the worksheet.\n5. If the newValue is a numeric value, the cell modified is set to numeric type.\n6. There's a limitation that if the newValue is a date or time value, the operation treats it as a string value.\n7. If there's any change in the worksheet, all values of formula type cells are updated.\n8. If there's any merged region existed in the worksheet, only the top left cell can be modified.\n</pre>
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.03ef6126-01af-4c4f-8d64-9596abcb2300.prompt=ExcelFileName\:
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.076c1837-07fe-49d0-b646-ca4f55ff90ba.description=<pre>\nCheck the current date and time, and returns a java DateAndTime formatted string of it. If locale is specified, it will return the date and time string based on the locale.Otherwise, default locale will be used.\n\nInputs\:\nlocaleLang - The locale language for date and time string. For example,  en or ja.\nlocaleCountry - The locale country for date and time string. For example, US or JP. If localeLang is not specified, this input will be ingored.\n\nResult\:\nCurrent date and time.\n\nResponses\:\nsuccess - Date/time retrieved successfully.\nfailure - Date/time could not be retrieved.\n</pre>
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.1a312e5c-f8ae-4f1d-b106-cf776ade01e4.description=<pre>\nModifies the specified cell with new value in an Excel document. \nXLS, XLSX and XLSM formats are supported. \n\nInputs\:\n    excelFileName - The name of the new Excel document. The complete path should be given if the file does not exist in the working directory(%ICONCLUDE_HOME%\\jetty\\bin).\nExamples\: c\:\\temp\\test.xls \n    worksheetName - The name of Excel worksheet. \nDefault value\: Sheet1\n    rowIndex - A list of row indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from the index of the first row  to the index of the last row of the Excel worksheet.\n    columnIndex - A list of column indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from 0 to the index of the last column in the Excel worksheet.\n   newValue\: A comma delimited list of data to write to the specified cell. The size of the newValue list should be the same as the size of columnIndex input.\n\nResults\:\n    returnResult - This is the primary output. Returns the number of rows that were affected.  \n\nResponses\:\n    success - The cell data was modified successfully.\n    failure - Failed to modify the cell data.\n    incomplete - Not all the cells specified were modified.\n\nNotes\:\n1. All the index inputs are 0 based.\n2. For the indexes in rowIndex input that is less than the first data row index or greater than the last row index in the worksheet, the operation trims those row indexes.\n3. For the indexes in columnIndex input that is less than 0 or greater than the last column index in a row, the operation trims those column indexes.\n4. If columnIndex input is empty, the size of the newValue list should be the same as column count in the worksheet.\n5. If the newValue is a numeric value, the cell modified is set to numeric type.\n6. There's a limitation that if the newValue is a date or time value, the operation treats it as a string value.\n7. If there's any change in the worksheet, all values of formula type cells are updated.\n8. If there's any merged region existed in the worksheet, only the top left cell can be modified.\n</pre>
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.1c3ae3cc-6ae7-46bc-921f-07680000fba8.prompt=ExcelFileName\:
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.1ca870dd-0854-4e1b-957c-0003f2e9fee9.description=<pre>\nModifies the specified cell with new value in an Excel document. \nXLS, XLSX and XLSM formats are supported. \n\nInputs\:\n    excelFileName - The name of the new Excel document. The complete path should be given if the file does not exist in the working directory(%ICONCLUDE_HOME%\\jetty\\bin).\nExamples\: c\:\\temp\\test.xls \n    worksheetName - The name of Excel worksheet. \nDefault value\: Sheet1\n    rowIndex - A list of row indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from the index of the first row  to the index of the last row of the Excel worksheet.\n    columnIndex - A list of column indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from 0 to the index of the last column in the Excel worksheet.\n   newValue\: A comma delimited list of data to write to the specified cell. The size of the newValue list should be the same as the size of columnIndex input.\n\nResults\:\n    returnResult - This is the primary output. Returns the number of rows that were affected.  \n\nResponses\:\n    success - The cell data was modified successfully.\n    failure - Failed to modify the cell data.\n    incomplete - Not all the cells specified were modified.\n\nNotes\:\n1. All the index inputs are 0 based.\n2. For the indexes in rowIndex input that is less than the first data row index or greater than the last row index in the worksheet, the operation trims those row indexes.\n3. For the indexes in columnIndex input that is less than 0 or greater than the last column index in a row, the operation trims those column indexes.\n4. If columnIndex input is empty, the size of the newValue list should be the same as column count in the worksheet.\n5. If the newValue is a numeric value, the cell modified is set to numeric type.\n6. There's a limitation that if the newValue is a date or time value, the operation treats it as a string value.\n7. If there's any change in the worksheet, all values of formula type cells are updated.\n8. If there's any merged region existed in the worksheet, only the top left cell can be modified.\n</pre>
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.1ea6fd01-c5ba-485d-9ac3-26d9fbc2772d.description=<pre>\nModifies the specified cell with new value in an Excel document. \nXLS, XLSX and XLSM formats are supported. \n\nInputs\:\n    excelFileName - The name of the new Excel document. The complete path should be given if the file does not exist in the working directory(%ICONCLUDE_HOME%\\jetty\\bin).\nExamples\: c\:\\temp\\test.xls \n    worksheetName - The name of Excel worksheet. \nDefault value\: Sheet1\n    rowIndex - A list of row indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from the index of the first row  to the index of the last row of the Excel worksheet.\n    columnIndex - A list of column indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from 0 to the index of the last column in the Excel worksheet.\n   newValue\: A comma delimited list of data to write to the specified cell. The size of the newValue list should be the same as the size of columnIndex input.\n\nResults\:\n    returnResult - This is the primary output. Returns the number of rows that were affected.  \n\nResponses\:\n    success - The cell data was modified successfully.\n    failure - Failed to modify the cell data.\n    incomplete - Not all the cells specified were modified.\n\nNotes\:\n1. All the index inputs are 0 based.\n2. For the indexes in rowIndex input that is less than the first data row index or greater than the last row index in the worksheet, the operation trims those row indexes.\n3. For the indexes in columnIndex input that is less than 0 or greater than the last column index in a row, the operation trims those column indexes.\n4. If columnIndex input is empty, the size of the newValue list should be the same as column count in the worksheet.\n5. If the newValue is a numeric value, the cell modified is set to numeric type.\n6. There's a limitation that if the newValue is a date or time value, the operation treats it as a string value.\n7. If there's any change in the worksheet, all values of formula type cells are updated.\n8. If there's any merged region existed in the worksheet, only the top left cell can be modified.\n</pre>
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.21343e06-e145-4e50-a892-138ee9af4aa1.description=<pre>\nModifies the specified cell with new value in an Excel document. \nXLS, XLSX and XLSM formats are supported. \n\nInputs\:\n    excelFileName - The name of the new Excel document. The complete path should be given if the file does not exist in the working directory(%ICONCLUDE_HOME%\\jetty\\bin).\nExamples\: c\:\\temp\\test.xls \n    worksheetName - The name of Excel worksheet. \nDefault value\: Sheet1\n    rowIndex - A list of row indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from the index of the first row  to the index of the last row of the Excel worksheet.\n    columnIndex - A list of column indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from 0 to the index of the last column in the Excel worksheet.\n   newValue\: A comma delimited list of data to write to the specified cell. The size of the newValue list should be the same as the size of columnIndex input.\n\nResults\:\n    returnResult - This is the primary output. Returns the number of rows that were affected.  \n\nResponses\:\n    success - The cell data was modified successfully.\n    failure - Failed to modify the cell data.\n    incomplete - Not all the cells specified were modified.\n\nNotes\:\n1. All the index inputs are 0 based.\n2. For the indexes in rowIndex input that is less than the first data row index or greater than the last row index in the worksheet, the operation trims those row indexes.\n3. For the indexes in columnIndex input that is less than 0 or greater than the last column index in a row, the operation trims those column indexes.\n4. If columnIndex input is empty, the size of the newValue list should be the same as column count in the worksheet.\n5. If the newValue is a numeric value, the cell modified is set to numeric type.\n6. There's a limitation that if the newValue is a date or time value, the operation treats it as a string value.\n7. If there's any change in the worksheet, all values of formula type cells are updated.\n8. If there's any merged region existed in the worksheet, only the top left cell can be modified.\n</pre>
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.21d3799f-c4f8-491f-a2dc-09c65b6ca056.prompt=ExcelFileName\:
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.23b79f52-bf29-4936-b71b-3fdf6ded294f.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.276f2ed6-fd55-46eb-85e1-48164b8f2f04.prompt=ExcelFileName\:
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.3997e69f-43d2-4d7a-95fd-1e0625a91e66.prompt=ExcelFileName\:
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.3f56111d-78e2-4f1f-b1f3-570803ad27ae.description=<pre>\nModifies the specified cell with new value in an Excel document. \nXLS, XLSX and XLSM formats are supported. \n\nInputs\:\n    excelFileName - The name of the new Excel document. The complete path should be given if the file does not exist in the working directory(%ICONCLUDE_HOME%\\jetty\\bin).\nExamples\: c\:\\temp\\test.xls \n    worksheetName - The name of Excel worksheet. \nDefault value\: Sheet1\n    rowIndex - A list of row indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from the index of the first row  to the index of the last row of the Excel worksheet.\n    columnIndex - A list of column indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from 0 to the index of the last column in the Excel worksheet.\n   newValue\: A comma delimited list of data to write to the specified cell. The size of the newValue list should be the same as the size of columnIndex input.\n\nResults\:\n    returnResult - This is the primary output. Returns the number of rows that were affected.  \n\nResponses\:\n    success - The cell data was modified successfully.\n    failure - Failed to modify the cell data.\n    incomplete - Not all the cells specified were modified.\n\nNotes\:\n1. All the index inputs are 0 based.\n2. For the indexes in rowIndex input that is less than the first data row index or greater than the last row index in the worksheet, the operation trims those row indexes.\n3. For the indexes in columnIndex input that is less than 0 or greater than the last column index in a row, the operation trims those column indexes.\n4. If columnIndex input is empty, the size of the newValue list should be the same as column count in the worksheet.\n5. If the newValue is a numeric value, the cell modified is set to numeric type.\n6. There's a limitation that if the newValue is a date or time value, the operation treats it as a string value.\n7. If there's any change in the worksheet, all values of formula type cells are updated.\n8. If there's any merged region existed in the worksheet, only the top left cell can be modified.\n</pre>
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.425e628e-5637-4286-8b40-53a9e2126c91.description=<pre>\nModifies the specified cell with new value in an Excel document. \nXLS, XLSX and XLSM formats are supported. \n\nInputs\:\n    excelFileName - The name of the new Excel document. The complete path should be given if the file does not exist in the working directory(%ICONCLUDE_HOME%\\jetty\\bin).\nExamples\: c\:\\temp\\test.xls \n    worksheetName - The name of Excel worksheet. \nDefault value\: Sheet1\n    rowIndex - A list of row indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from the index of the first row  to the index of the last row of the Excel worksheet.\n    columnIndex - A list of column indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from 0 to the index of the last column in the Excel worksheet.\n   newValue\: A comma delimited list of data to write to the specified cell. The size of the newValue list should be the same as the size of columnIndex input.\n\nResults\:\n    returnResult - This is the primary output. Returns the number of rows that were affected.  \n\nResponses\:\n    success - The cell data was modified successfully.\n    failure - Failed to modify the cell data.\n    incomplete - Not all the cells specified were modified.\n\nNotes\:\n1. All the index inputs are 0 based.\n2. For the indexes in rowIndex input that is less than the first data row index or greater than the last row index in the worksheet, the operation trims those row indexes.\n3. For the indexes in columnIndex input that is less than 0 or greater than the last column index in a row, the operation trims those column indexes.\n4. If columnIndex input is empty, the size of the newValue list should be the same as column count in the worksheet.\n5. If the newValue is a numeric value, the cell modified is set to numeric type.\n6. There's a limitation that if the newValue is a date or time value, the operation treats it as a string value.\n7. If there's any change in the worksheet, all values of formula type cells are updated.\n8. If there's any merged region existed in the worksheet, only the top left cell can be modified.\n</pre>
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.468a0a56-22d6-4ec3-97df-c854f1a733f0.description=<pre>\nModifies the specified cell with new value in an Excel document. \nXLS, XLSX and XLSM formats are supported. \n\nInputs\:\n    excelFileName - The name of the new Excel document. The complete path should be given if the file does not exist in the working directory(%ICONCLUDE_HOME%\\jetty\\bin).\nExamples\: c\:\\temp\\test.xls \n    worksheetName - The name of Excel worksheet. \nDefault value\: Sheet1\n    rowIndex - A list of row indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from the index of the first row  to the index of the last row of the Excel worksheet.\n    columnIndex - A list of column indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from 0 to the index of the last column in the Excel worksheet.\n   newValue\: A comma delimited list of data to write to the specified cell. The size of the newValue list should be the same as the size of columnIndex input.\n\nResults\:\n    returnResult - This is the primary output. Returns the number of rows that were affected.  \n\nResponses\:\n    success - The cell data was modified successfully.\n    failure - Failed to modify the cell data.\n    incomplete - Not all the cells specified were modified.\n\nNotes\:\n1. All the index inputs are 0 based.\n2. For the indexes in rowIndex input that is less than the first data row index or greater than the last row index in the worksheet, the operation trims those row indexes.\n3. For the indexes in columnIndex input that is less than 0 or greater than the last column index in a row, the operation trims those column indexes.\n4. If columnIndex input is empty, the size of the newValue list should be the same as column count in the worksheet.\n5. If the newValue is a numeric value, the cell modified is set to numeric type.\n6. There's a limitation that if the newValue is a date or time value, the operation treats it as a string value.\n7. If there's any change in the worksheet, all values of formula type cells are updated.\n8. If there's any merged region existed in the worksheet, only the top left cell can be modified.\n</pre>
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.4efdb745-6b40-47a5-9623-4acb34c80f11.description=<pre>\nModifies the specified cell with new value in an Excel document. \nXLS, XLSX and XLSM formats are supported. \n\nInputs\:\n    excelFileName - The name of the new Excel document. The complete path should be given if the file does not exist in the working directory(%ICONCLUDE_HOME%\\jetty\\bin).\nExamples\: c\:\\temp\\test.xls \n    worksheetName - The name of Excel worksheet. \nDefault value\: Sheet1\n    rowIndex - A list of row indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from the index of the first row  to the index of the last row of the Excel worksheet.\n    columnIndex - A list of column indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from 0 to the index of the last column in the Excel worksheet.\n   newValue\: A comma delimited list of data to write to the specified cell. The size of the newValue list should be the same as the size of columnIndex input.\n\nResults\:\n    returnResult - This is the primary output. Returns the number of rows that were affected.  \n\nResponses\:\n    success - The cell data was modified successfully.\n    failure - Failed to modify the cell data.\n    incomplete - Not all the cells specified were modified.\n\nNotes\:\n1. All the index inputs are 0 based.\n2. For the indexes in rowIndex input that is less than the first data row index or greater than the last row index in the worksheet, the operation trims those row indexes.\n3. For the indexes in columnIndex input that is less than 0 or greater than the last column index in a row, the operation trims those column indexes.\n4. If columnIndex input is empty, the size of the newValue list should be the same as column count in the worksheet.\n5. If the newValue is a numeric value, the cell modified is set to numeric type.\n6. There's a limitation that if the newValue is a date or time value, the operation treats it as a string value.\n7. If there's any change in the worksheet, all values of formula type cells are updated.\n8. If there's any merged region existed in the worksheet, only the top left cell can be modified.\n</pre>
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.58b59977-a0d4-48da-a2b4-3f03ced76d3c.description=<pre>\nModifies the specified cell with new value in an Excel document. \nXLS, XLSX and XLSM formats are supported. \n\nInputs\:\n    excelFileName - The name of the new Excel document. The complete path should be given if the file does not exist in the working directory(%ICONCLUDE_HOME%\\jetty\\bin).\nExamples\: c\:\\temp\\test.xls \n    worksheetName - The name of Excel worksheet. \nDefault value\: Sheet1\n    rowIndex - A list of row indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from the index of the first row  to the index of the last row of the Excel worksheet.\n    columnIndex - A list of column indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from 0 to the index of the last column in the Excel worksheet.\n   newValue\: A comma delimited list of data to write to the specified cell. The size of the newValue list should be the same as the size of columnIndex input.\n\nResults\:\n    returnResult - This is the primary output. Returns the number of rows that were affected.  \n\nResponses\:\n    success - The cell data was modified successfully.\n    failure - Failed to modify the cell data.\n    incomplete - Not all the cells specified were modified.\n\nNotes\:\n1. All the index inputs are 0 based.\n2. For the indexes in rowIndex input that is less than the first data row index or greater than the last row index in the worksheet, the operation trims those row indexes.\n3. For the indexes in columnIndex input that is less than 0 or greater than the last column index in a row, the operation trims those column indexes.\n4. If columnIndex input is empty, the size of the newValue list should be the same as column count in the worksheet.\n5. If the newValue is a numeric value, the cell modified is set to numeric type.\n6. There's a limitation that if the newValue is a date or time value, the operation treats it as a string value.\n7. If there's any change in the worksheet, all values of formula type cells are updated.\n8. If there's any merged region existed in the worksheet, only the top left cell can be modified.\n</pre>
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.61128bde-aa74-46aa-97ba-2a916b5fe0a9.prompt=ExcelFileName\:
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.672b6396-4fa6-4b8f-8bf0-9a7896d42da1.description=<pre>\nModifies the specified cell with new value in an Excel document. \nXLS, XLSX and XLSM formats are supported. \n\nInputs\:\n    excelFileName - The name of the new Excel document. The complete path should be given if the file does not exist in the working directory(%ICONCLUDE_HOME%\\jetty\\bin).\nExamples\: c\:\\temp\\test.xls \n    worksheetName - The name of Excel worksheet. \nDefault value\: Sheet1\n    rowIndex - A list of row indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from the index of the first row  to the index of the last row of the Excel worksheet.\n    columnIndex - A list of column indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from 0 to the index of the last column in the Excel worksheet.\n   newValue\: A comma delimited list of data to write to the specified cell. The size of the newValue list should be the same as the size of columnIndex input.\n\nResults\:\n    returnResult - This is the primary output. Returns the number of rows that were affected.  \n\nResponses\:\n    success - The cell data was modified successfully.\n    failure - Failed to modify the cell data.\n    incomplete - Not all the cells specified were modified.\n\nNotes\:\n1. All the index inputs are 0 based.\n2. For the indexes in rowIndex input that is less than the first data row index or greater than the last row index in the worksheet, the operation trims those row indexes.\n3. For the indexes in columnIndex input that is less than 0 or greater than the last column index in a row, the operation trims those column indexes.\n4. If columnIndex input is empty, the size of the newValue list should be the same as column count in the worksheet.\n5. If the newValue is a numeric value, the cell modified is set to numeric type.\n6. There's a limitation that if the newValue is a date or time value, the operation treats it as a string value.\n7. If there's any change in the worksheet, all values of formula type cells are updated.\n8. If there's any merged region existed in the worksheet, only the top left cell can be modified.\n</pre>
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.6a0f5253-3c49-432a-bf78-ae3b88b655a3.description=<pre>\nIf the input dateFormat is not specified, it converts a date in the format of date/time of OO Central Server's, which is dependant on the Java locale, to a date either in the format of date/time of OO Central Server's or in the format specified in the input outFormat. \n\nIf the input dateFormat is specified, it converts a date in the format in dateFormat to a date either in the format of date/time of OO Central Server's or in the format specified in the input outFormat.\n\nYou can use flow "Get Current Date and Time" to check upon the default date/time format.  \n\nFor exmaple, if OO Central Server's locale is English, the input dateFormat is empty and the input outFormat is empty, the input date should be in the format of "July 13, 2006 10\:04\:08 AM". If the user specifies dateFormat as "dd-MM-YYYY HH\:mm\:ss", the input date should be in the format of "13-07-2006 10\:04\:08". If the input outFormat is empty, the result will be "July 13, 2006 10\:04\:08 AM". If the input outFormat is "yyyy-MM-dd", the result will be "2006-07-13".\n\n\nSpecify the date format with the following patterns\:\n\nLetter \tDate or Time Component \tPresentation \tExamples\nG \tEra designator \tText \tAD\ny \tYear \tYear \t1996; 96\nM \tMonth in year \tMonth \tJuly; Jul; 07\nw \tWeek in year \tNumber \t27\nW \tWeek in month \tNumber \t2\nD \tDay in year \tNumber \t189\nd \tDay in month \tNumber \t10\nF \tDay of week in month \tNumber \t2\nE \tDay in week \tText \tTuesday; Tue\na \tAm/pm marker \tText \tPM\nH \tHour in day (0-23) \tNumber \t0\nk \tHour in day (1-24) \tNumber \t24\nK \tHour in am/pm (0-11) \tNumber \t0\nh \tHour in am/pm (1-12) \tNumber \t12\nm \tMinute in hour \tNumber \t30\ns \tSecond in minute \tNumber \t55\nS \tMillisecond \tNumber \t978\nz \tTime zone \tGeneral time zone \tPacific Standard Time; PST; GMT-08\:00\nZ \tTime zone \tRFC 822 time zone \t-0800\n\nSo, for example\: the date "2006-07-10 15\:16\:14.766 PDT" would have the dateFormat "yyyy-MM-dd HH\:mm\:ss.SSS z".\n\nYou can also use single quotes (') to avoid text interpretation. The quoted text will simply be copied into the output string during formatting (if present in the outFormat) or matched against the input string during parsing (if present in the dateFormat). For example, the date value "2006-07-10T15\:16\:14.766Z" would have the dateFormat "yyyy-MM-dd'T'HH\:mm\:ss.SSS'Z'". \n\n\nInputs\:\ndate - The date to parse. If the input dateFormat is empty, the date must be in the format of date/time of OO Central Server's, which is dependant on the Java locale. If the input dateFormat is not empty, the date must be in the format specified in the input dateFormat.\ndateFormat - The format of the input date. \noutFormat - The format of the output date/time. If it is empty, the output date/time will be in the format of date/time of OO Cental Server's, which is dependant on the Java locale.\noutLocaleLang - The locale language for output string. For example,  en or ja.\noutLocaleCountry - The locale country for output string. For example, US or JP. \n\nResponses\:\nsuccess - The date was converted.\nfailure - The date could not be converted.\n\nResult\:\nThe date in the new format.\n</pre>
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.6ee73bbb-c43a-4875-9d91-5cbd1f9792c9.prompt=Enter a value for date
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.746283e9-8568-4c2d-81f4-cbf454693d29.prompt=ExcelFileName\:
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.75e8ce48-8a65-4601-a951-5c19b30380b0.description=<pre>\nModifies the specified cell with new value in an Excel document. \nXLS, XLSX and XLSM formats are supported. \n\nInputs\:\n    excelFileName - The name of the new Excel document. The complete path should be given if the file does not exist in the working directory(%ICONCLUDE_HOME%\\jetty\\bin).\nExamples\: c\:\\temp\\test.xls \n    worksheetName - The name of Excel worksheet. \nDefault value\: Sheet1\n    rowIndex - A list of row indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from the index of the first row  to the index of the last row of the Excel worksheet.\n    columnIndex - A list of column indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from 0 to the index of the last column in the Excel worksheet.\n   newValue\: A comma delimited list of data to write to the specified cell. The size of the newValue list should be the same as the size of columnIndex input.\n\nResults\:\n    returnResult - This is the primary output. Returns the number of rows that were affected.  \n\nResponses\:\n    success - The cell data was modified successfully.\n    failure - Failed to modify the cell data.\n    incomplete - Not all the cells specified were modified.\n\nNotes\:\n1. All the index inputs are 0 based.\n2. For the indexes in rowIndex input that is less than the first data row index or greater than the last row index in the worksheet, the operation trims those row indexes.\n3. For the indexes in columnIndex input that is less than 0 or greater than the last column index in a row, the operation trims those column indexes.\n4. If columnIndex input is empty, the size of the newValue list should be the same as column count in the worksheet.\n5. If the newValue is a numeric value, the cell modified is set to numeric type.\n6. There's a limitation that if the newValue is a date or time value, the operation treats it as a string value.\n7. If there's any change in the worksheet, all values of formula type cells are updated.\n8. If there's any merged region existed in the worksheet, only the top left cell can be modified.\n</pre>
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.7b5fac57-0089-449e-b5bc-6986b983cbc0.prompt=ExcelFileName\:
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.84319f68-303e-459e-91a8-cfd4448d54cb.description=<pre>\nModifies the specified cell with new value in an Excel document. \nXLS, XLSX and XLSM formats are supported. \n\nInputs\:\n    excelFileName - The name of the new Excel document. The complete path should be given if the file does not exist in the working directory(%ICONCLUDE_HOME%\\jetty\\bin).\nExamples\: c\:\\temp\\test.xls \n    worksheetName - The name of Excel worksheet. \nDefault value\: Sheet1\n    rowIndex - A list of row indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from the index of the first row  to the index of the last row of the Excel worksheet.\n    columnIndex - A list of column indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from 0 to the index of the last column in the Excel worksheet.\n   newValue\: A comma delimited list of data to write to the specified cell. The size of the newValue list should be the same as the size of columnIndex input.\n\nResults\:\n    returnResult - This is the primary output. Returns the number of rows that were affected.  \n\nResponses\:\n    success - The cell data was modified successfully.\n    failure - Failed to modify the cell data.\n    incomplete - Not all the cells specified were modified.\n\nNotes\:\n1. All the index inputs are 0 based.\n2. For the indexes in rowIndex input that is less than the first data row index or greater than the last row index in the worksheet, the operation trims those row indexes.\n3. For the indexes in columnIndex input that is less than 0 or greater than the last column index in a row, the operation trims those column indexes.\n4. If columnIndex input is empty, the size of the newValue list should be the same as column count in the worksheet.\n5. If the newValue is a numeric value, the cell modified is set to numeric type.\n6. There's a limitation that if the newValue is a date or time value, the operation treats it as a string value.\n7. If there's any change in the worksheet, all values of formula type cells are updated.\n8. If there's any merged region existed in the worksheet, only the top left cell can be modified.\n</pre>
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.890636ca-fb27-4756-a789-0857c0647605.prompt=ExcelFileName\:
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.a5d433b3-56b9-456d-8f15-5932acc46899.prompt=ExcelFileName\:
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.a6208db8-48bd-49b0-b9b6-067e90422621.prompt=ExcelFileName\:
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.a77926d3-1ccb-4bc5-8133-66c7be085bab.prompt=ExcelFileName\:
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.b00be32a-d5f7-4144-846d-a7f12099e358.description=\n<pre>\nChecks to see if a path points to an existing file or folder.\n\nInput Parameters\:\nsource - the path to check\n\nResponses\:\nfailure\t\t\t- the operation failed. The path does not exist.\nsuccess\t\t\t- The operation succeeded.\n\n</pre>\n
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.b7e6b027-463f-4fa4-82d8-e5af9599e2a2.prompt=ExcelFileName\:
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.b7ee8305-2f6f-4e03-a53b-f459c0e7b9ce.description=<pre>\nModifies the specified cell with new value in an Excel document. \nXLS, XLSX and XLSM formats are supported. \n\nInputs\:\n    excelFileName - The name of the new Excel document. The complete path should be given if the file does not exist in the working directory(%ICONCLUDE_HOME%\\jetty\\bin).\nExamples\: c\:\\temp\\test.xls \n    worksheetName - The name of Excel worksheet. \nDefault value\: Sheet1\n    rowIndex - A list of row indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from the index of the first row  to the index of the last row of the Excel worksheet.\n    columnIndex - A list of column indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from 0 to the index of the last column in the Excel worksheet.\n   newValue\: A comma delimited list of data to write to the specified cell. The size of the newValue list should be the same as the size of columnIndex input.\n\nResults\:\n    returnResult - This is the primary output. Returns the number of rows that were affected.  \n\nResponses\:\n    success - The cell data was modified successfully.\n    failure - Failed to modify the cell data.\n    incomplete - Not all the cells specified were modified.\n\nNotes\:\n1. All the index inputs are 0 based.\n2. For the indexes in rowIndex input that is less than the first data row index or greater than the last row index in the worksheet, the operation trims those row indexes.\n3. For the indexes in columnIndex input that is less than 0 or greater than the last column index in a row, the operation trims those column indexes.\n4. If columnIndex input is empty, the size of the newValue list should be the same as column count in the worksheet.\n5. If the newValue is a numeric value, the cell modified is set to numeric type.\n6. There's a limitation that if the newValue is a date or time value, the operation treats it as a string value.\n7. If there's any change in the worksheet, all values of formula type cells are updated.\n8. If there's any merged region existed in the worksheet, only the top left cell can be modified.\n</pre>
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.bf7c7d05-e509-4d0b-bbb6-8a7732b4e1b8.description=<pre>\nModifies the specified cell with new value in an Excel document. \nXLS, XLSX and XLSM formats are supported. \n\nInputs\:\n    excelFileName - The name of the new Excel document. The complete path should be given if the file does not exist in the working directory(%ICONCLUDE_HOME%\\jetty\\bin).\nExamples\: c\:\\temp\\test.xls \n    worksheetName - The name of Excel worksheet. \nDefault value\: Sheet1\n    rowIndex - A list of row indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from the index of the first row  to the index of the last row of the Excel worksheet.\n    columnIndex - A list of column indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from 0 to the index of the last column in the Excel worksheet.\n   newValue\: A comma delimited list of data to write to the specified cell. The size of the newValue list should be the same as the size of columnIndex input.\n\nResults\:\n    returnResult - This is the primary output. Returns the number of rows that were affected.  \n\nResponses\:\n    success - The cell data was modified successfully.\n    failure - Failed to modify the cell data.\n    incomplete - Not all the cells specified were modified.\n\nNotes\:\n1. All the index inputs are 0 based.\n2. For the indexes in rowIndex input that is less than the first data row index or greater than the last row index in the worksheet, the operation trims those row indexes.\n3. For the indexes in columnIndex input that is less than 0 or greater than the last column index in a row, the operation trims those column indexes.\n4. If columnIndex input is empty, the size of the newValue list should be the same as column count in the worksheet.\n5. If the newValue is a numeric value, the cell modified is set to numeric type.\n6. There's a limitation that if the newValue is a date or time value, the operation treats it as a string value.\n7. If there's any change in the worksheet, all values of formula type cells are updated.\n8. If there's any merged region existed in the worksheet, only the top left cell can be modified.\n</pre>
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.cf1bbfb9-bce8-4581-bfa8-d9d805223384.description=<pre>\nModifies the specified cell with new value in an Excel document. \nXLS, XLSX and XLSM formats are supported. \n\nInputs\:\n    excelFileName - The name of the new Excel document. The complete path should be given if the file does not exist in the working directory(%ICONCLUDE_HOME%\\jetty\\bin).\nExamples\: c\:\\temp\\test.xls \n    worksheetName - The name of Excel worksheet. \nDefault value\: Sheet1\n    rowIndex - A list of row indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from the index of the first row  to the index of the last row of the Excel worksheet.\n    columnIndex - A list of column indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from 0 to the index of the last column in the Excel worksheet.\n   newValue\: A comma delimited list of data to write to the specified cell. The size of the newValue list should be the same as the size of columnIndex input.\n\nResults\:\n    returnResult - This is the primary output. Returns the number of rows that were affected.  \n\nResponses\:\n    success - The cell data was modified successfully.\n    failure - Failed to modify the cell data.\n    incomplete - Not all the cells specified were modified.\n\nNotes\:\n1. All the index inputs are 0 based.\n2. For the indexes in rowIndex input that is less than the first data row index or greater than the last row index in the worksheet, the operation trims those row indexes.\n3. For the indexes in columnIndex input that is less than 0 or greater than the last column index in a row, the operation trims those column indexes.\n4. If columnIndex input is empty, the size of the newValue list should be the same as column count in the worksheet.\n5. If the newValue is a numeric value, the cell modified is set to numeric type.\n6. There's a limitation that if the newValue is a date or time value, the operation treats it as a string value.\n7. If there's any change in the worksheet, all values of formula type cells are updated.\n8. If there's any merged region existed in the worksheet, only the top left cell can be modified.\n</pre>
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.d8bf837a-c52a-4f67-84d5-9697e5e217ad.description=<pre>\nThis operation uses WMI to attempt to create a remote process on target machine and run the command. \n\nInputs\:\n    host - Hostname or ip address of the target machine.\n    command - The command you want to execute. Special characters\: '<', '>', '(', ')', '&' need to be escaped using the caret ('^') character.  The only exception to this rule is when the '>' character is used to redirect output.\n    currentDirectory - The directory from which the command will be executed.\n    user - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\n    password - Password of the user.\n    outputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\n    characterSet - The character encoding used to write the batch file that will be remotely executed by the operation. Unicode character encodings may not be supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the "outputCharacterSet" input.  \nDefault value\: The encoding of the operating system where is RAS installed.\nExamples\: ibm437, shift_jis\n    outputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to be of a different character encoding.  As an example\: the "wmic" command returns utf-16 encoded output.\nExamples\: ibm437, shift_jis, utf-8, utf-16\n    timeout - The number of seconds before assuming the remote process is no longer functional. After the timeout has expired the remote process and all child processes will be terminated.\nDefault value\: 600\n    useDelegation - This input must be added by the user in order to be used. If set to "true" the operation will use the "Delegate" impersonation level and the "Kerberos" authentication protocol. If "false", empty or missing the operation will use "Impersonate" for the impersonation level and the default authentication protocol (which is NTLM).\nValues\: true, false\nDefault\: false\n    debugPath - This input must be added by the user in order to be used. If set to "true", an additional result field named "commandPassed" is returned and it contains the command that executes the script. For more information on the purpose of this input, see the "Notes" section.\n\nResults\:\n    returnResult - This is the primary output. It is the value from WMI for starting the process (not the exit value of the process).\n    processID - The process id of the remote process.\n    processReturnCode - The return code of the remote process.\n    stdOut - Standard output from the remote process.\n    stdErr - Standard error from the remote process.\n\nResponses\:\n    success - Remote process successfully launched and has completed executing.\n    failure - Unable to start remote process.\n\nNotes\: \n1. Internally this operation creates a temporary batch file with the following content\:\n\ncmd /c " [command] 2> err.tmp 1> out.tmp "\necho %ERRORLEVEL% > ret.tmp\n\nAfter the script is executed, the operation will read the files\: err.tmp (standard error), out.tmp (standard output) and ret.tmp (return code). Finally the operation deletes all the temporary files.\nThe command that executes the script can be accesed by adding a new input\: debugPath with the value\: "true"\n\n2. List of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.ddc6e611-ac8b-4a70-950a-6b5e39a9847d.prompt=ExcelFileName\:
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.description=1.All the variables within the several operations are exposed as input.\n2.ExcelFilePath input is the target directory for the excel copy.Modify to adapt to your environment.In this directory the appropriate "system_data_cloud.xls" file must be present.
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.ee7cad0b-05ab-4cc0-bd1e-ccf5ddf0e858.prompt=ExcelFileName\:
a52bece3-d0fc-48ca-8d0c-89390c20ba5f.eeb4653d-d4bc-40c4-af07-3db562ae9992.prompt=ExcelFileName\:
a57aa956-d01b-43ad-895f-bbf20d7618da.description=It's attributes which will be used in ESL_UpdateCIStatus (undeploy)
a78a2fa8-9bb1-4b1b-99e0-ab67125ac478.description=attributes which will be used in ESL_CreateCI
a88f1cf0-b57f-4a25-b603-58292b68f72e.2c204786-0658-462a-9856-446d890fd8f3.prompt=Select from vm platforms
a88f1cf0-b57f-4a25-b603-58292b68f72e.description=\nThe PowerOff should be a guest shutdown + power off, or there might be damage to the guest OS if power off abruptly.\n
a88f1cf0-b57f-4a25-b603-58292b68f72e.e192493c-a811-4167-9ee7-e1200aef07c0.description=<pre>Sets the power state of virtual machine (poweredOn,poweredOff,suspended). Does nothing if the virtual machine is already in the power state.\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation (true, false).\nasync - Asynchronously perform the task (true, false).\ntaskTimeOut - Time to wait before the operation is considered to have failed (seconds).\nvirtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\nvmIdentifierType - Virtual machine identifier type (inventorypath, name, ip, hostname, uuid, vmid).\nvmPowerState - Virtual machine power state to set (poweredOn, poweredOff, suspended).\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\nno action - The operation completed with no action performed.\n\nReturns\:\nreturnResult - Task ID or task completion return message.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
a929fb84-1648-4552-bd7e-b664ebc353de.description=decide if it's vCenter (default) or SCVMM.\n\nvCenter has been set as default so that we can avoid any missed setting of the vmmp.type variable. We may improve later. 
a98e6a55-6ce3-467f-b906-22cc568ded85.014354ff-d122-41fd-8288-45b2a695b72d.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
a98e6a55-6ce3-467f-b906-22cc568ded85.b4a4d3fd-5c5e-4a49-83ff-379a14a53a77.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
a98e6a55-6ce3-467f-b906-22cc568ded85.f55b549a-5198-4ab0-82b0-3b720156ff87.description=<pre>Runs a SQL query against an Oracle database, using the information available in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation.\nSubsequent calls with the same information will return the other rows.\n\nInputs\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name).\nTNSEntry - The entry name from the tnsnames.ora file which contains the connecting information.\nUsername - The username used for connecting to the database.\nPassword - The password used for connecting to the database.\nCommand - The command to execute.\nDelimiter - Delimiter to use between columns in returnResult.\nKey - Key to help keep multiple query results distinct.\n\nResponses\:\nmore items - More rows are available for retrieval.\nno more items - No more rows are available.\nfailure - There was an error executing the command.\n\nExtra Results\:\ncolumnNames - The names of all the columns returned, separated by Delimiter.\nrowsLeft - The number of rows remaining that match the query.\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should be correctly configured on the RAS machine.\n\nORACLE NOTE\:\nOnly the "SELECT" statement can be executed using this operation. For statements that modify the database, use "TNS Names SQL Command".\n</pre>
ab3c02ee-997a-499b-a96f-de3a927f4b3d.description=The ID of the HP SA software policy to be attached to HP managed servers
ac9796c6-0b53-46d3-905d-fc28be063e0e.562549c9-2a20-4d8a-848e-e2c16fa246ba.description=<pre>Adds a flow variable into the local context (available to itself and child flows only)\n\nInput Parameters\:\nkeyName - the name of the flow variable to use\nmyValue - the value to assign the flow variable\n\nResponses\:\nsuccess - assigned the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, $myValue];</pre>
ac9796c6-0b53-46d3-905d-fc28be063e0e.92ca1077-471c-4176-997d-b83408b24360.prompt=Input command(s)\:
ac9796c6-0b53-46d3-905d-fc28be063e0e.ee63d5c6-d04c-403e-b4d8-787b223b6d62.description=Runs Service Center Virtual Machine Manager (SCVMM) Cmdlets using Windows PowerShell. The complete syntax and descriptions of all cmdlets that can be used with this operation can be found at http\://www.microsoft.com/download/en/details.aspx?displaylang\=en&id\=20419. The operation creates a remote powershell session to the target host, loads the "Microsoft.SystemCenter.VirtualMachineManager" snap-in and executes the given command(s). \n\nInputs\:\n    host - The hostname or ip address of the SCVMM server.\n    username - The username to use when connecting to the server.\nValue format\: username@domain or domain\\username.\n    password - The password to use when connecting to the server.\n    authType - Specifies the mechanism that is used to authenticate the user's credentials. \nValid values\: Default, Negotiate, Credssp, Kerberos. (case-insensitive)\nDefault value\: Default.\n    commands - The PowerShell cmdlets to execute. For more that one command, you should write each one on a separate row and they will be executed sequentially. \nExample\: get-vmmserver -computerName "1.2.3.4"\n                get-virtualharddisk -all\n    delimiter - The delimiter used to separate each property name from the property value in the output table. \nDefault value\: "\:".\n    colDelimiter - The delimiter used to separate columns in the output table.\nDefault value\: ','\n    rowDelimiter - The delimiter used to separate rows in the output table. \nDefault value\: newline\n    version - The SCVMM Server version.\nDefault value\: 2008 R2\n\nResults\:\n    outputString - A string representation of the results returned by the operation. Essentially any command returns a PowerShell object which has properties, as you can observe from the returnResult. OutputString result converts each object to string and merges all the values into one string. If you want outputString to contain results similar to PowerShell console you should pipe Out-String at the end of the cmdlet  (e.g. Get-VirtualHardDisk -al l Format-List Location, Directory, Name, ID, HostName | Out-String). Doing this will determine returnResult to be something like Length\:xx, because the object is now of type String and Lenth is the only property of this type. This result can be useful in other situations where the PowerShell objects override ToString() method. Therefore, the outputString obtained running PowerShell command Get-Process (without Out-String pipe), will contain the names of the processes running on server.\n    returnResult - A table containing a row for each PSObject that the cmdlets emit. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format.\n    warnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\n\nResponses\:\nsuccess \t- The cmdlets were executed successfully.\nfailure \t- The cmdlets could not be executed.\n\nNotes\:\n1. Installation of Powershell 2.0 with winrm 2.0 on your client is required. The kit can be downloaded from here\: http\://support.microsoft.com/kb/968930.\n2. Before using this operation, please make sure you have enabled PowerShell remoting, by using the Enable-PSRemoting cmdlet.\n3. Windows Remote Management service must be running.\n4. In workgroup environments, enabling classic mode authentication for network logons may be needed. This can be performed by opening the "Local Security Policy" from Control Panel and selecting "Administrative Tools". Navigate to "Local Policies" -> "Security Options", double click on "Network Access\: Sharing and Security Model for local accounts" and set it to classic.\n5. Also, please modify the WSMan trusted hosts setting, by adding the IP addresses of all remoting clients to the list of trusted hosts. This can be done using one of the following commands\:\n        5.1. Set-item wsman\:localhost\\client\\trustedhosts -value * (adds all computers as trusted hosts)\n        5.2. Set-item wsman\:localhost\\client\\trustedhosts -value Computer (only adds Computer to the trusted hosts)\n        5.3. Set-item wsman\:localhost\\client\\trustedhosts -value *.domain.com (adds all computers in the specified domain)\n        5.4. Set-item wsman\:localhost\\client\\trustedhosts -value 10.10.10.1 (adds the remote computer with the IP address 10.10.10.1 to the trusted hosts list)\n6. Please read the folder's description for information on how to enable CredSSP authentication.\n</pre>
aca40d15-fd33-4ff1-9c0d-2f01b022736f.bb36a80e-6d86-4dcd-86c8-868aa9bcca66.description=<pre>Adds a flow variable into the local context (available to itself and child flows only)\n\nInput Parameters\:\nkeyName - the name of the flow variable to use\nmyValue - the value to assign the flow variable\n\nResponses\:\nsuccess - assigned the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, $myValue];</pre>
aca40d15-fd33-4ff1-9c0d-2f01b022736f.e38d3193-f04b-46fe-b4a3-bc8063c9f5e0.prompt=Input command(s)\:
aca40d15-fd33-4ff1-9c0d-2f01b022736f.f05f8dce-f6fe-421d-9850-50067ebaf418.description=Runs Service Center Virtual Machine Manager (SCVMM) Cmdlets using Windows PowerShell. The complete syntax and descriptions of all cmdlets that can be used with this operation can be found at http\://www.microsoft.com/download/en/details.aspx?displaylang\=en&id\=20419. The operation creates a remote powershell session to the target host, loads the "Microsoft.SystemCenter.VirtualMachineManager" snap-in and executes the given command(s). \n\nInputs\:\n    host - The hostname or ip address of the SCVMM server.\n    username - The username to use when connecting to the server.\nValue format\: username@domain or domain\\username.\n    password - The password to use when connecting to the server.\n    authType - Specifies the mechanism that is used to authenticate the user's credentials. \nValid values\: Default, Negotiate, Credssp, Kerberos. (case-insensitive)\nDefault value\: Default.\n    commands - The PowerShell cmdlets to execute. For more that one command, you should write each one on a separate row and they will be executed sequentially. \nExample\: get-vmmserver -computerName "1.2.3.4"\n                get-virtualharddisk -all\n    delimiter - The delimiter used to separate each property name from the property value in the output table. \nDefault value\: "\:".\n    colDelimiter - The delimiter used to separate columns in the output table.\nDefault value\: ','\n    rowDelimiter - The delimiter used to separate rows in the output table. \nDefault value\: newline\n    version - The SCVMM Server version.\nDefault value\: 2008 R2\n\nResults\:\n    outputString - A string representation of the results returned by the operation. Essentially any command returns a PowerShell object which has properties, as you can observe from the returnResult. OutputString result converts each object to string and merges all the values into one string. If you want outputString to contain results similar to PowerShell console you should pipe Out-String at the end of the cmdlet  (e.g. Get-VirtualHardDisk -al l Format-List Location, Directory, Name, ID, HostName | Out-String). Doing this will determine returnResult to be something like Length\:xx, because the object is now of type String and Lenth is the only property of this type. This result can be useful in other situations where the PowerShell objects override ToString() method. Therefore, the outputString obtained running PowerShell command Get-Process (without Out-String pipe), will contain the names of the processes running on server.\n    returnResult - A table containing a row for each PSObject that the cmdlets emit. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format.\n    warnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\n\nResponses\:\nsuccess \t- The cmdlets were executed successfully.\nfailure \t- The cmdlets could not be executed.\n\nNotes\:\n1. Installation of Powershell 2.0 with winrm 2.0 on your client is required. The kit can be downloaded from here\: http\://support.microsoft.com/kb/968930.\n2. Before using this operation, please make sure you have enabled PowerShell remoting, by using the Enable-PSRemoting cmdlet.\n3. Windows Remote Management service must be running.\n4. In workgroup environments, enabling classic mode authentication for network logons may be needed. This can be performed by opening the "Local Security Policy" from Control Panel and selecting "Administrative Tools". Navigate to "Local Policies" -> "Security Options", double click on "Network Access\: Sharing and Security Model for local accounts" and set it to classic.\n5. Also, please modify the WSMan trusted hosts setting, by adding the IP addresses of all remoting clients to the list of trusted hosts. This can be done using one of the following commands\:\n        5.1. Set-item wsman\:localhost\\client\\trustedhosts -value * (adds all computers as trusted hosts)\n        5.2. Set-item wsman\:localhost\\client\\trustedhosts -value Computer (only adds Computer to the trusted hosts)\n        5.3. Set-item wsman\:localhost\\client\\trustedhosts -value *.domain.com (adds all computers in the specified domain)\n        5.4. Set-item wsman\:localhost\\client\\trustedhosts -value 10.10.10.1 (adds the remote computer with the IP address 10.10.10.1 to the trusted hosts list)\n6. Please read the folder's description for information on how to enable CredSSP authentication.\n</pre>
acea43b3-3f36-4d29-a395-4a8bff128674.460c9c74-201c-430a-b84c-0d5901316b69.description=<pre>Resolves any Context variables in a String. This is useful if you have an input to a flow that references undefined context variables, and define them later. Pass in the context key name of the string that contains unresolved context variables.\n\nInputs\:\nkeyName - The name of the context key that should have its value reresolved.\neraseUnresolved - A boolean value. If true, any unresolved context variable references will be replaced by nothing (IE ${variable} disappears).\n\nResponses\:\nsuccess - One or more context variables were replaced, or could not be resolved and were erased from the string.\nfailure - No context variables were referenced in the string.\n\nReturns\:\nThe resulting string having had context variable references replaced with the resolved values.</pre>
acea43b3-3f36-4d29-a395-4a8bff128674.4758f3b7-164c-40d5-b9d0-a65293e4ff95.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
acea43b3-3f36-4d29-a395-4a8bff128674.5f09127c-d1ff-4282-bf98-5a94c863d281.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
acea43b3-3f36-4d29-a395-4a8bff128674.62a9e725-e1c4-443a-9b11-a1d4580ee5f6.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
acea43b3-3f36-4d29-a395-4a8bff128674.b01f06bd-86fe-4e5e-9645-cd3a80f4faa6.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
acea43b3-3f36-4d29-a395-4a8bff128674.c78b3c86-df0b-473d-8316-3530d5c66d9d.description=Generic flow to send an e-mail
acea43b3-3f36-4d29-a395-4a8bff128674.f520c4b1-3991-4af0-9651-d95cf6486756.description=Generic flow to send an e-mail
ad6975c9-f8a0-425a-990e-661a1f5f34cd.1df4845c-b95d-4db3-87ac-ebd8b41341a2.description=<pre>Invokes web service methods.  This operation should not be used directly\!  Please use the wizard to build flows that use this operation.\n\nInputs\:\nxmlTemplate - The template of the soap request to make.\ninputMap - A map used to map between template names and user-friendly names. The tamplate names are pipe-delimited xpaths of the xmltemplate location, with a numerical element for lists.\nurl - The url to post to. \nheader_SOAPAction - The SOAPAction http header field, defined by many web services for indicating the intent of the request\nwswAuthenticationType - The authentication type to use for the username and password input. http is default (Uses http authentication), other options are 'ws-security digest' and 'ws-security text' WARNING\: ws-security text transmits passwords in clear-text\nWSSecuritySignRequest - true or false, should the SOAP request be signed using WS-Security.\nWSSecurityEncryptRequest - true or false, should the entire SOAP request be signed using WS-Security\nWSSecurityTimestampRequest - true or false, should the Timestamp attribute be added to the WS-Security header\nWSSecurityKeystore - keystore to use for encrypting and signing requests.\nWSSecurityKeystoreType - The type of WSSecurityKeystore.\nWSSecurityKeystorePassword - The password for WSSecurityKeystore.\ncontentType - Value to be used in the Content-Type http header\nusername - The username to use for authenticating with the web service\npassword - The password to use for authenticating with the web service\ntrustAllRoots - Enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it. valid options are\: true/false.\nuseCookies - Enables cookie tracking. Cookies will be stored between consecutive calls. valid options are\: true/false.\ntimeout - a timeout after which the connection should be terminated, or 0 for no timeout.\nproxy - A proxy to use when accessing the web service.\nproxyPort - A port on the proxy to connect to.\nproxyUsername - A username to use when connecting to the proxy.\nproxyPassword - A password to use when connecting to the proxy.\nkeystore - the path to the keystore to use for SSL Client Certificates when using http authentication\nkeystorePassword - the password for the keystore when using http authentication\nICONCLUDE_WSW_VERSION - This value is used internally by the operation\n\nAny additional inputs that follow these are added by the Web Service Wizard, and they are specific to the particular web service method being called.\n\nResponses\:\nsuccess - SOAP request completed successfully.\nfailure - something went wrong.\n\nReturns\:\ndocument - raw XML response\ndocumentStripped - raw XML response stripped of namespaces for ease in parsing with XML XPath operations\n\nNotes\:\nIf you add new step-level inputs with the name header_<headername>, where <headername> is the name of an html header, then that html header will be set to the given value in the HTTP request.\n\n</pre>
ad6975c9-f8a0-425a-990e-661a1f5f34cd.description=<pre>This subflow was created by the Web Services Wizard to invoke the efficientip_macro_vlan_query_php operation on file\:/C\:/CSA_INSTALLATION/wsdl_eip_full.wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nauth_login - The input named efficientip_macro_vlan_query_php|input|auth_login of the complex type\: efficientip_macro_vlan_query_php|input\nauth_password - The input named efficientip_macro_vlan_query_php|input|auth_password of the complex type\: efficientip_macro_vlan_query_php|input\nvlan_query - The input named efficientip_macro_vlan_query_php|input|vlan_query of the complex type\: efficientip_macro_vlan_query_php|input\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\noutput - The output given by the XPath\: /Envelope/Body/efficientip_macro_vlan_query_phpResponse/output</pre>
adae7495-5254-4757-a029-7c0cfaaf8285.description=Path to SA Agent installer on Windows Virtual Machines.
aec6b97c-6cb0-4e1f-b582-b1ae2ac9734d.description=attributes which will be used in ESL_CreateCI
aee38afe-3c9e-4cb6-a639-f35fb4d17a3f.description=The name of the SiteScope service that will be used by CSA4M.
af5c6260-c7fb-4645-9b8d-f8aa9f4607ae.description=It's attributes which will be used in ESL_CreateCI
af6e97cc-e874-4348-9015-605424b2c09e.description=The MAC address Pool in SCVMM
b78e5871-e5c1-4e09-95a0-451b1c785cd5.description=to use this script, you will first define a local flow variable "targetColumnName" (in input or as a scriptlet ahead ).  The script will help extract the DB Query Result Row by Column Name.  The result should be delimited by  (<>) and contains only a single row.\n\nThe columnNames is a result from the Oracle TNS Names SQL query. For an example, please refer to DB_GetVMMPByResourcepool. \n
b8e3dc7a-7441-4be8-aa81-98da8bec7eec.ca812171-a4fa-4ebf-8f51-5455cbc588de.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
bb4d1c37-d99a-400c-836f-e782473e7f35.0bdbd150-49ef-4376-a190-e23d1c6efced.description=Generic flow to send an e-mail
bb4d1c37-d99a-400c-836f-e782473e7f35.3a271e93-40cf-4026-84ca-d8da277eabc5.description=Generic flow to send an e-mail
bb4d1c37-d99a-400c-836f-e782473e7f35.5baac563-71c6-41e6-bf82-0431478f85ba.description=\nThe PowerOff should be a guest shutdown + power off, or there might be damage to the guest OS if power off abruptly.\n
bb4d1c37-d99a-400c-836f-e782473e7f35.903b9558-2a38-4158-9a05-e773078e85e0.description=Generic flow to send an e-mail
bb4d1c37-d99a-400c-836f-e782473e7f35.d34f1e61-540d-478b-840b-8049d244e23f.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
bb4d1c37-d99a-400c-836f-e782473e7f35.d930b79e-0171-4e2e-ae17-97a99c2c1762.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
bb4d1c37-d99a-400c-836f-e782473e7f35.f7353cd1-7988-4d03-8d37-04ce1b8f169d.description=<pre>This subflow was created by the Web Services Wizard to invoke the powerOffService operation on https\://tufnellpark\:51443/hpio/controller/soap/v2?wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nserviceName - The input named powerOffService|serviceName of the complex type\: powerOffService\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\nrequestId - The output given by the XPath\: /Envelope/Body/powerOffServiceResponse/requestId/text()</pre>
bb4d1c37-d99a-400c-836f-e782473e7f35.f8948c0a-21aa-4360-9310-b56bfba06474.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
c05a1c16-4198-4a79-a256-44d053f9c828.0b6606c9-2432-47f3-bc3a-c8fd61ad976f.description=<pre>Retrieve information about a virtual machine or a group of virtual machines in a datacenter or host system (pipe-delimited). Retrieve each object one at a time from an initial search query ala SQL Query operation.\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation?\nvmDatacenter - Virtual machine's datacenter.\nvmIdentifierType - Virtual machine identifier type.\nhostSystem - Target virtual machine host system.\nvirtualMachine - Primary Virtual Machine identifier. IP (IPv4 or IPv6 depending upon ESX version), hostname (full), inventorypath (Datacenter/vm/MyResourcePool/MyVM), UUID, or the VM id (vm-123,123).\ngetDetailed - Retrieve detailed information?\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\nno more - there are no more results to retrieve.\n\nReturns\:\nvmInfo - Virtual machine information.\nnumberOfResults - Number of results from the query remaining to be retrieved.\nreturnResult - Virtual machine ID or operation results.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter or vSphere server the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter or vSphere client. The inventory path is case sensitive.\n</pre>
c05a1c16-4198-4a79-a256-44d053f9c828.69ad2a5a-b0f5-465e-b4f2-257bb3c0a7dd.prompt=Select from vm platforms
c05a1c16-4198-4a79-a256-44d053f9c828.81882bc7-2b6a-411b-aab3-885d4171b748.description=<pre>This is an operation that does nothing, and can be used to display information to the user by editing the display tab. It can also be used for filtering flow variables by feeding them in as inputs, and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
c05a1c16-4198-4a79-a256-44d053f9c828.a1c5d361-fc37-47d9-b0b0-48c2e946ffee.description=<pre>\nFlex up a VM to the specific CPU Memory and Disk that is requested.\n\nInput Parameters\:\n serviceName -name of the service that will be created with this flow\n VCenterHost -  vCenter host to execute against\n VCenterUsername - vCenter username\n VCenterPassword - vCenter password.\n virtualMachine - This is the virtual machine that will be flexed.\n dataStore -  target datastore on the vCenter host for the VMs\n hostSystem - target ESX host for the VMs\n cpuCount - number of cpus the virtual machine should have.\n memSize - amount of memory the virtual machine should have.\n addDisk - whether or not disk should be added to the vm.\n\nResponses\:\n   success - if the command completes execution and its exit code is 0\n   failure - otherwise\n\nResult Fields\:\n NA\n</pre>
c05a1c16-4198-4a79-a256-44d053f9c828.af2098e4-14b8-4d6a-9aa8-a3d4bb073728.description=<pre>\nFlex up a VM to the specific CPU Memory and Disk that is requested.\n\nInput Parameters\:\n serviceName -name of the service that will be created with this flow\n VCenterHost -  vCenter host to execute against\n VCenterUsername - vCenter username\n VCenterPassword - vCenter password.\n virtualMachine - This is the virtual machine that will be flexed.\n dataStore -  target datastore on the vCenter host for the VMs\n hostSystem - target ESX host for the VMs\n cpuCount - number of cpus the virtual machine should have.\n memSize - amount of memory the virtual machine should have.\n addDisk - whether or not disk should be added to the vm.\n\nResponses\:\n   success - if the command completes execution and its exit code is 0\n   failure - otherwise\n\nResult Fields\:\n NA\n</pre>
c081c558-b08f-48e0-b994-24d1a6674002.129d8a99-9b6d-480d-820d-a3d42ec77b9e.prompt=SQL Command\:
c081c558-b08f-48e0-b994-24d1a6674002.7dac0731-b2f9-469d-98d0-c2c1121813ca.prompt=TNSPath\:
c081c558-b08f-48e0-b994-24d1a6674002.a5d14fe0-8f3f-440f-98bb-6e4241264d91.prompt=UserName\:
c081c558-b08f-48e0-b994-24d1a6674002.cbd24e3d-2d86-41b2-92b3-bef28fb8009a.prompt=TNSEntry\:
c081c558-b08f-48e0-b994-24d1a6674002.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
c081c558-b08f-48e0-b994-24d1a6674002.f37b6713-a372-458e-9482-de3f22da490b.prompt=Password\:
c3197d21-4a94-4e11-bb47-bfd57eede3ec.description=Customer to assign all servers
c4047c7b-084d-40cb-a775-40ee7016e99a.2b3ae315-238e-4953-be68-6cd812516070.description=<pre>Retrieves the configured number of CPUs for a virtual machine.\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation?\nvmIdentifierType - Virtual machine identifier type (inventorypath, name, ip, hostname, uuid, vmid).\nvirtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\n\nResponses\:\nsuccess - Successfully retrieved the number of CPUs configured for the virtual machine.\nfailure - Something went wrong.\n\nReturns\:\nvmCpuCount - Number of CPUs configured for the virtual machine\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
c4047c7b-084d-40cb-a775-40ee7016e99a.41611859-3494-4d3e-89ca-5d31e3afff1c.description=<pre>Retrieves the configured memory size for a virtual machine in megabytes.\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation?\nvmIdentifierType - Virtual machine identifier type (inventorypath, name, ip, hostname, uuid, vmid).\nvirtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\n\nResponses\:\nsuccess - Successfully retrieved the number of megabytes of memory configured for the virtual machine.\nfailure - Something went wrong.\n\nReturns\:\nvmMemorySize - Megabytes of memory configured for the virtual machine\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
c4047c7b-084d-40cb-a775-40ee7016e99a.5f73e918-cc09-4408-9d73-1300b2f42ace.prompt=Enter a value for value1
c4047c7b-084d-40cb-a775-40ee7016e99a.624c9280-5506-47b7-ba96-b5600740f3b7.description=<pre>Sets the number of CPUs for a virtual machine.  The virtual machine must be in a powered off state for this operation to succeed.\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation? Valid values\: true or false.\nasync - Asynchronously perform the task.\ntaskTimeOut - Time to wait before the operation is considered to have failed (seconds).\nvirtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\nvmIdentifierType - Virtual machine identifier type (inventorypath, name, ip, hostname, uuid, vmid).\nvmDatacenter - Virtual machine's datacenter.\nvmCpuCount - New number of CPUs for the virtual machine.\n\nResponses\:\nsuccess - If async is true the task was successfuly queued.  If async is false the CPU count for the virtual machine was successfully set.\nfailure - Something went wrong.  See returnResult for details.\n\nReturns\:\nreturnResult - Task result or operation result.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\nCPU limits\: The maximum value for vmCpuCount is based on the virtual hardware version of the virtual machine. Limits are as follows\:\n  Virtual hardware 7 (ESX 4.0)\: 8\n  Virtual hardware 4 (ESX 3.x)\: 4\n  Virtual hardware 3 (ESX 2.5)\: 2\n</pre>
c4047c7b-084d-40cb-a775-40ee7016e99a.6ab05f13-5cef-4110-b18a-c075a2ec4811.prompt=Enter a value for value1
c4047c7b-084d-40cb-a775-40ee7016e99a.86adcc42-7991-42ae-825a-be493948519e.description=<pre>Sets the memory size for a virtual machine. The virtual machine must be in a powered off state for this operation to succeed.\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation? Valid values\: true or false.\nasync - Asynchronously perform the task.\ntaskTimeOut - Time to wait before the operation is considered to have failed (seconds).\nvirtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\nvmIdentifierType - Virtual machine identifier type (inventorypath, name, ip, hostname, uuid, vmid).\nvmDatacenter - Virtual machine's datacenter.\nvmMemorySize - New memory size for the virtual machine in megabytes.\n\nResponses\:\nsuccess - If async is true the task was successfuly queued.  If async is false the memory size for the virtual machine was successfully set.\nfailure - Something went wrong.  See returnResult for details.\n\nReturns\:\nreturnResult - Task result or operation result.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\nMemory limits\: The maximum value for vmMemorySize is based on the virtual hardware version of the virtual machine. Limits are as follows\:\n  Virtual hardware 7 (ESX 4.0)\: 261120\n  Virtual hardware 4 (ESX 3.x)\: 65532\n  Virtual hardware 3 (ESX 2.5)\: 3600\n</pre>
c4047c7b-084d-40cb-a775-40ee7016e99a.8d061ca0-1e7d-4799-be1d-56efa01ee4ea.description=<pre>Performs a mathematical operation on two numbers or strings\n\nInputs\:\nvalue1 - The first value.\nvalue2 - The second value.\noperation - The operation to perform (+ - * ^ / > < \=\= \!\= >\= <\=).\n\nResponses\:\nsuccess -  The operation completed successfully. If a boolean operation, it evaluated to true.\nfailure - Something went wrong or the boolean operation returned false.\n\nReturns\:\nThe raw result of the operation, for boolean values this is true or false.\n\nReturns\:\nField 1 - The first value. Here for compatibility\nField 2 - The second value. Here for compatibility\nField 3 - The operation. Here for compatibility\nformatted_result - The formatted result of the operation, for boolean values this is true or false.</pre>
c4047c7b-084d-40cb-a775-40ee7016e99a.91965098-5c3a-4284-bd0c-c06dfa6dc04e.prompt=Virtual Machine\:
c4047c7b-084d-40cb-a775-40ee7016e99a.9808190d-0eb4-4226-8000-1d9b2736069d.description=<pre>Performs a mathematical operation on two numbers or strings\n\nInputs\:\nvalue1 - The first value.\nvalue2 - The second value.\noperation - The operation to perform (+ - * ^ / > < \=\= \!\= >\= <\=).\n\nResponses\:\nsuccess -  The operation completed successfully. If a boolean operation, it evaluated to true.\nfailure - Something went wrong or the boolean operation returned false.\n\nReturns\:\nThe raw result of the operation, for boolean values this is true or false.\n\nReturns\:\nField 1 - The first value. Here for compatibility\nField 2 - The second value. Here for compatibility\nField 3 - The operation. Here for compatibility\nformatted_result - The formatted result of the operation, for boolean values this is true or false.</pre>
c4047c7b-084d-40cb-a775-40ee7016e99a.b1ed733a-5a88-4f5d-88e2-b9951787b454.description=<pre>Retrieve power state of virtual machine (poweredOn,poweredOff,suspended).\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation (true, false).\nvirtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\nvmIdentifierType - Virtual machine identifier type (inventorypath, name, ip, hostname, uuid, vmid).\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n\nReturns\:\nreturnResult - Task completion return message.\npowerState - Power state (poweredOn,poweredOff,suspended).\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
c4047c7b-084d-40cb-a775-40ee7016e99a.f2c4bc93-c6ee-4062-837f-f1ef4fba3f12.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
c4a0732d-5439-49ed-879e-351089bf7dea.description=Path to the SA installer on Linux Machines
c4dc26b2-e4c4-465f-a572-0fd7155abdab.dbbba61f-d8f4-4ce9-95e0-6f0f67bd7155.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
c585c156-1049-4bd2-9fe7-d081ecb49695.f6fb87a0-140b-4afc-aa32-221583486788.description=<pre>Invokes web service methods.  This operation should not be used directly\!  Please use the wizard to build flows that use this operation.\n\nInputs\:\nxmlTemplate - The template of the soap request to make.\ninputMap - A map used to map between template names and user-friendly names. The tamplate names are pipe-delimited xpaths of the xmltemplate location, with a numerical element for lists.\nurl - The url to post to. \nheader_SOAPAction - The SOAPAction http header field, defined by many web services for indicating the intent of the request\nwswAuthenticationType - The authentication type to use for the username and password input. http is default (Uses http authentication), other options are 'ws-security digest' and 'ws-security text' WARNING\: ws-security text transmits passwords in clear-text\nWSSecuritySignRequest - true or false, should the SOAP request be signed using WS-Security.\nWSSecurityEncryptRequest - true or false, should the entire SOAP request be signed using WS-Security\nWSSecurityTimestampRequest - true or false, should the Timestamp attribute be added to the WS-Security header\nWSSecurityKeystore - keystore to use for encrypting and signing requests.\nWSSecurityKeystoreType - The type of WSSecurityKeystore.\nWSSecurityKeystorePassword - The password for WSSecurityKeystore.\ncontentType - Value to be used in the Content-Type http header\nusername - The username to use for authenticating with the web service\npassword - The password to use for authenticating with the web service\ntrustAllRoots - Enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it. valid options are\: true/false.\nuseCookies - Enables cookie tracking. Cookies will be stored between consecutive calls. valid options are\: true/false.\ntimeout - a timeout after which the connection should be terminated, or 0 for no timeout.\nproxy - A proxy to use when accessing the web service.\nproxyPort - A port on the proxy to connect to.\nproxyUsername - A username to use when connecting to the proxy.\nproxyPassword - A password to use when connecting to the proxy.\nkeystore - the path to the keystore to use for SSL Client Certificates when using http authentication\nkeystorePassword - the password for the keystore when using http authentication\nICONCLUDE_WSW_VERSION - This value is used internally by the operation\n\nAny additional inputs that follow these are added by the Web Service Wizard, and they are specific to the particular web service method being called.\n\nResponses\:\nsuccess - SOAP request completed successfully.\nfailure - something went wrong.\n\nReturns\:\ndocument - raw XML response\ndocumentStripped - raw XML response stripped of namespaces for ease in parsing with XML XPath operations\n\nNotes\:\nIf you add new step-level inputs with the name header_<headername>, where <headername> is the name of an html header, then that html header will be set to the given value in the HTTP request.\n\n</pre>
c59e9a02-c3d9-48df-b8e9-83ec890fdc4c.8325df89-73dc-4162-b05c-e5c900eed1fe.description=<pre>Checks if a number or word is equal to another number or word. Word comparison is case-sensitive in alphabetical order.\n\nInputs\:\nvalue1 - The first value.\nvalue2 - The second value.\n\nReturns\:\nvalue1 \=\= value2\n\nResponses\:\nsuccess - The boolean operation was evaluated to true.\nfailure - Something went wrong or the boolean operation returned false.\n</pre>
c59e9a02-c3d9-48df-b8e9-83ec890fdc4c.b59e1934-0db2-4402-ab79-5ba0b592bf13.description=<pre>This subflow was created by the Web Services Wizard to invoke the efficientip_macro_vlan_query_php operation on file\:/C\:/CSA_INSTALLATION/wsdl_eip_full.wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nauth_login - The input named efficientip_macro_vlan_query_php|input|auth_login of the complex type\: efficientip_macro_vlan_query_php|input\nauth_password - The input named efficientip_macro_vlan_query_php|input|auth_password of the complex type\: efficientip_macro_vlan_query_php|input\nvlan_query - The input named efficientip_macro_vlan_query_php|input|vlan_query of the complex type\: efficientip_macro_vlan_query_php|input\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\noutput - The output given by the XPath\: /Envelope/Body/efficientip_macro_vlan_query_phpResponse/output</pre>
c5f89456-c729-4829-93a4-92f04277982e.description=Entry in the tnsnames.ora file to access the right database service
c677a40a-d696-41eb-b750-162a78858b88.description=It's attributes which will be used in ESL_CreateCI
c7943245-e62f-459c-b0fb-6bf62a207b49.4a7c38da-103b-4049-bfaf-de0fe74192a8.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
c81f56b5-c3d6-4ee8-bd92-113eb22c09cf.a9f6cbc4-9a27-4280-8f2e-267d103721da.description=<pre>Invokes web service methods.  This operation should not be used directly\!  Please use the wizard to build flows that use this operation.\n\nInputs\:\nxmlTemplate - The template of the soap request to make.\ninputMap - A map used to map between template names and user-friendly names. The tamplate names are pipe-delimited xpaths of the xmltemplate location, with a numerical element for lists.\nurl - The url to post to. \nheader_SOAPAction - The SOAPAction http header field, defined by many web services for indicating the intent of the request\nwswAuthenticationType - The authentication type to use for the username and password input. http is default (Uses http authentication), other options are 'ws-security digest' and 'ws-security text' WARNING\: ws-security text transmits passwords in clear-text\nWSSecuritySignRequest - true or false, should the SOAP request be signed using WS-Security.\nWSSecurityEncryptRequest - true or false, should the entire SOAP request be signed using WS-Security\nWSSecurityTimestampRequest - true or false, should the Timestamp attribute be added to the WS-Security header\nWSSecurityKeystore - keystore to use for encrypting and signing requests.\nWSSecurityKeystoreType - The type of WSSecurityKeystore.\nWSSecurityKeystorePassword - The password for WSSecurityKeystore.\ncontentType - Value to be used in the Content-Type http header\nusername - The username to use for authenticating with the web service\npassword - The password to use for authenticating with the web service\ntrustAllRoots - Enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it. valid options are\: true/false.\nuseCookies - Enables cookie tracking. Cookies will be stored between consecutive calls. valid options are\: true/false.\ntimeout - a timeout after which the connection should be terminated, or 0 for no timeout.\nproxy - A proxy to use when accessing the web service.\nproxyPort - A port on the proxy to connect to.\nproxyUsername - A username to use when connecting to the proxy.\nproxyPassword - A password to use when connecting to the proxy.\nkeystore - the path to the keystore to use for SSL Client Certificates when using http authentication\nkeystorePassword - the password for the keystore when using http authentication\nICONCLUDE_WSW_VERSION - This value is used internally by the operation\n\nAny additional inputs that follow these are added by the Web Service Wizard, and they are specific to the particular web service method being called.\n\nResponses\:\nsuccess - SOAP request completed successfully.\nfailure - something went wrong.\n\nReturns\:\ndocument - raw XML response\ndocumentStripped - raw XML response stripped of namespaces for ease in parsing with XML XPath operations\n\nNotes\:\nIf you add new step-level inputs with the name header_<headername>, where <headername> is the name of an html header, then that html header will be set to the given value in the HTTP request.\n\n</pre>
c81f56b5-c3d6-4ee8-bd92-113eb22c09cf.description=<pre>This subflow was created by the Web Services Wizard to invoke the addNewDiskToLogicalServerGroup operation on https\://15.91.54.129\:51443/hpio/controller/soap/v4?wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\ncost - The input named addNewDiskToLogicalServerGroup|cost of the complex type\: addNewDiskToLogicalServerGroup\nlogicalServerGroupName - The input named addNewDiskToLogicalServerGroup|logicalServerGroupName of the complex type\: addNewDiskToLogicalServerGroup\nraidLevel - The input named addNewDiskToLogicalServerGroup|raidLevel of the complex type\: addNewDiskToLogicalServerGroup\nrawMappingType - The input named addNewDiskToLogicalServerGroup|rawMappingType of the complex type\: addNewDiskToLogicalServerGroup\nredundantPaths - The input named addNewDiskToLogicalServerGroup|redundantPaths of the complex type\: addNewDiskToLogicalServerGroup\nserviceName - The input named addNewDiskToLogicalServerGroup|serviceName of the complex type\: addNewDiskToLogicalServerGroup\nshared - The input named addNewDiskToLogicalServerGroup|shared of the complex type\: addNewDiskToLogicalServerGroup\nsize - The input named addNewDiskToLogicalServerGroup|size of the complex type\: addNewDiskToLogicalServerGroup\nstereotypeDiskName - The input named addNewDiskToLogicalServerGroup|stereotypeDiskName of the complex type\: addNewDiskToLogicalServerGroup\ntags0 - The input named addNewDiskToLogicalServerGroup|0|tags of the complex type\: addNewDiskToLogicalServerGroup|0\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\nrequestId - The output given by the XPath\: /Envelope/Body/addNewDiskToLogicalServerGroupResponse/requestId/text()</pre>
c90a91c6-f0ac-4477-b5ee-c30df7368abc.description=Backup Vlan Subnetmask
c9b22c49-a77f-436c-b689-ae7e605238d3.13e1109e-47ee-4bf3-af72-715fe84879aa.description=<pre>Runs a SQL query against an Oracle database, using the information available in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation.\nSubsequent calls with the same information will return the other rows.\n\nInputs\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name).\nTNSEntry - The entry name from the tnsnames.ora file which contains the connecting information.\nUsername - The username used for connecting to the database.\nPassword - The password used for connecting to the database.\nCommand - The command to execute.\nDelimiter - Delimiter to use between columns in returnResult.\nKey - Key to help keep multiple query results distinct.\n\nResponses\:\nmore items - More rows are available for retrieval.\nno more items - No more rows are available.\nfailure - There was an error executing the command.\n\nExtra Results\:\ncolumnNames - The names of all the columns returned, separated by Delimiter.\nrowsLeft - The number of rows remaining that match the query.\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should be correctly configured on the RAS machine.\n\nORACLE NOTE\:\nOnly the "SELECT" statement can be executed using this operation. For statements that modify the database, use "TNS Names SQL Command".\n</pre>
c9b22c49-a77f-436c-b689-ae7e605238d3.b80fb3cc-41a4-4651-8fb1-eef7426a928a.callout=TODO\: CHECK FOR BLANK HOSTNAME
caa0a186-9e6c-4d72-a291-679c00b8b959.06cc35df-f97b-4ffb-a2af-d0e0d0aa9ff4.description=<pre>Runs an SSH command\n\nInputs\:\nhost - Hostname or ip address.\nport - The port number for running the command. It overwrites the port given inside the host input -in a syntax like host\:port-, if this exists.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\npty - Whether to use pty (true, false. Default is false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on the RAS.\nusername - Username to connect as.\npassword - Password of user. If using a private key file this will be used as the passphrase for the file.\ntimeout - Time in milliseconds to wait for the command to complete (optional, default 90 seconds).\ncharacterSet - The characterSet name for input stream encoding from the target machine. For example, SJIS, EUC-JP, UTF-8.  By default it is UTF-8. \ncloseSession - Close SSH session at completion of this operation (true, false)? If false the ssh session will be cached for future calls of this operation during the life of the flow. If true the ssh session used by this operation will be closed. Default is true.\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nSTDERR - The STDERR of the command.\nSTDOUT - The STDOUT of the command.\n</pre>
caa0a186-9e6c-4d72-a291-679c00b8b959.07674ac8-a8a7-425b-800b-f3c0b2098065.description=<pre>Runs an SSH command\n\nInputs\:\nhost - Hostname or ip address.\nport - The port number for running the command. It overwrites the port given inside the host input -in a syntax like host\:port-, if this exists.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\npty - Whether to use pty (true, false. Default is false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on the RAS.\nusername - Username to connect as.\npassword - Password of user. If using a private key file this will be used as the passphrase for the file.\ntimeout - Time in milliseconds to wait for the command to complete (optional, default 90 seconds).\ncharacterSet - The characterSet name for input stream encoding from the target machine. For example, SJIS, EUC-JP, UTF-8.  By default it is UTF-8. \ncloseSession - Close SSH session at completion of this operation (true, false)? If false the ssh session will be cached for future calls of this operation during the life of the flow. If true the ssh session used by this operation will be closed. Default is true.\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nSTDERR - The STDERR of the command.\nSTDOUT - The STDOUT of the command.\n</pre>
caa0a186-9e6c-4d72-a291-679c00b8b959.4eb13812-99d6-4e08-88dd-229538a77772.description=<pre>\nGet the IP Address of a Host\n\n Inputs\:\n 1. hostname \t- The hostname to perform a lookup on.\n 2. dnsServer - (optional) dns server to perform lookup against.\n\nResult \:\n 1. ipaddress\t\t- Returns the IP address.\n \n Responses\:\n 2. success \t\t- The operation completed successfully.\n 3. failure\t\t- The operation failed.\n</pre>
caa0a186-9e6c-4d72-a291-679c00b8b959.826c473b-a68d-44d4-8f4a-45c1855085d7.description=<pre>\nGet the IP Address of a Host\n\n Inputs\:\n 1. hostname \t- The hostname to perform a lookup on.\n 2. dnsServer - (optional) dns server to perform lookup against.\n\nResult \:\n 1. ipaddress\t\t- Returns the IP address.\n \n Responses\:\n 2. success \t\t- The operation completed successfully.\n 3. failure\t\t- The operation failed.\n</pre>
caa0a186-9e6c-4d72-a291-679c00b8b959.f138b765-a955-4f44-8a7f-e517fb9c49ff.description=<pre>Runs an SSH command\n\nInputs\:\nhost - Hostname or ip address.\nport - The port number for running the command. It overwrites the port given inside the host input -in a syntax like host\:port-, if this exists.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\npty - Whether to use pty (true, false. Default is false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on the RAS.\nusername - Username to connect as.\npassword - Password of user. If using a private key file this will be used as the passphrase for the file.\ntimeout - Time in milliseconds to wait for the command to complete (optional, default 90 seconds).\ncharacterSet - The characterSet name for input stream encoding from the target machine. For example, SJIS, EUC-JP, UTF-8.  By default it is UTF-8. \ncloseSession - Close SSH session at completion of this operation (true, false)? If false the ssh session will be cached for future calls of this operation during the life of the flow. If true the ssh session used by this operation will be closed. Default is true.\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nSTDERR - The STDERR of the command.\nSTDOUT - The STDOUT of the command.\n</pre>
cb10fd25-56c9-49cd-aec0-4915b755d92b.1d67b949-6879-465f-b6f9-3b71d2f5222a.description=Generic flow to send an e-mail
cb10fd25-56c9-49cd-aec0-4915b755d92b.28427c5a-16f8-490d-96b9-7d42e8ebb2e7.description=<pre>Resolves any Context variables in a String. This is useful if you have an input to a flow that references undefined context variables, and define them later. Pass in the context key name of the string that contains unresolved context variables.\n\nInputs\:\nkeyName - The name of the context key that should have its value reresolved.\neraseUnresolved - A boolean value. If true, any unresolved context variable references will be replaced by nothing (IE ${variable} disappears).\n\nResponses\:\nsuccess - One or more context variables were replaced, or could not be resolved and were erased from the string.\nfailure - No context variables were referenced in the string.\n\nReturns\:\nThe resulting string having had context variable references replaced with the resolved values.</pre>
cb10fd25-56c9-49cd-aec0-4915b755d92b.42513065-e83b-4a0a-a2d9-e7c8aa4cc929.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
cb10fd25-56c9-49cd-aec0-4915b755d92b.42ed8ad1-6f1d-4bf8-81a5-8871e9703056.description=Generic flow to send an e-mail
cb10fd25-56c9-49cd-aec0-4915b755d92b.5192f1fc-8bd8-4679-b4c6-3df512b6fc08.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
cb10fd25-56c9-49cd-aec0-4915b755d92b.63ba24a4-3fa0-456a-aba5-e2eee2a9e0ea.description=\nThe PowerOff should be a guest shutdown + power off, or there might be damage to the guest OS if power off abruptly.\n
cb10fd25-56c9-49cd-aec0-4915b755d92b.67b4618d-85b8-4ce4-8bcb-5c21921e8c22.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
cb10fd25-56c9-49cd-aec0-4915b755d92b.7d283fe2-5157-422a-bfa4-c08fca07d221.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
cb10fd25-56c9-49cd-aec0-4915b755d92b.a9847f0f-7103-4d11-82df-4c949b84accf.description=<pre>Sends an smtp email\n \nInput Parameters\:\nhostname - hostname or ip address of smtp server\nport - port smtp service is listening\nfrom - from email address\nto - email address(s) or recipients\nsubject - email subject\nbody - body of the email\nhtmlEmail - true or false, whether the email should be sent supporting html rich email.\nreadReceipt - true or false, whether or not to request a read receipt\nattachments - comma separated list of files to attach (must be full path)\nusername - if SMTP authentication is needed, the username to send\npassword - the password to use\ncharacterSet - the character set encoding for the entire email which includes subject, body, attached file name and the attached file. Default value is UTF-8\ncontentTransferEncoding - the content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. Default value is - quoted-printable or Q Encoding.\n \n Responses\:\n success - successfully sent the email\n failure - failed to send the email\n\nNote\:\nFor special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n\tFor doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n</pre>
cb10fd25-56c9-49cd-aec0-4915b755d92b.ab9be82b-3d37-49c0-808c-ae291e58dbb8.description=<pre>Sends an smtp email\n \nInput Parameters\:\nhostname - hostname or ip address of smtp server\nport - port smtp service is listening\nfrom - from email address\nto - email address(s) or recipients\nsubject - email subject\nbody - body of the email\nhtmlEmail - true or false, whether the email should be sent supporting html rich email.\nreadReceipt - true or false, whether or not to request a read receipt\nattachments - comma separated list of files to attach (must be full path)\nusername - if SMTP authentication is needed, the username to send\npassword - the password to use\ncharacterSet - the character set encoding for the entire email which includes subject, body, attached file name and the attached file. Default value is UTF-8\ncontentTransferEncoding - the content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. Default value is - quoted-printable or Q Encoding.\n \n Responses\:\n success - successfully sent the email\n failure - failed to send the email\n\nNote\:\nFor special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n\tFor doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n</pre>
cb10fd25-56c9-49cd-aec0-4915b755d92b.ae29bacd-7616-41b9-967c-289cafbe30dc.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
cb10fd25-56c9-49cd-aec0-4915b755d92b.bf06842a-2b4c-45e8-9970-c25b488ca5b9.description=<pre>This subflow was created by the Web Services Wizard to invoke the powerOnService operation on https\://tufnellpark\:51443/hpio/controller/soap/v2?wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nserviceName - The input named powerOnService|serviceName of the complex type\: powerOnService\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\nrequestId - The output given by the XPath\: /Envelope/Body/powerOnServiceResponse/requestId/text()</pre>
cb10fd25-56c9-49cd-aec0-4915b755d92b.c3f988b9-fc2e-4e1b-82dc-c84d45ad9889.description=Generic flow to send an e-mail
cb97dd6d-b7d1-48ce-99df-6720e1d7b2f4.1073d283-bbbe-4af7-9c3e-3cf8525a585a.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
cb97dd6d-b7d1-48ce-99df-6720e1d7b2f4.186a8691-6e1d-476b-9bdf-7ad8b8eb02a7.prompt=Virtual Machine name\:
cb97dd6d-b7d1-48ce-99df-6720e1d7b2f4.1f0904be-4b82-4673-822a-f72a98e0452e.prompt=user
cb97dd6d-b7d1-48ce-99df-6720e1d7b2f4.4bc5cd52-43b3-434e-910a-bc39a43d7e80.description=<pre>\nMultiplies two numbers\n\nInputs\:\nvalue1 - The first value.\nvalue2 - The second value.\n\nReturns\:\nThe product of the two numbers.\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n</pre>
cb97dd6d-b7d1-48ce-99df-6720e1d7b2f4.5c3ed153-857d-4e47-be44-b318f56507c0.description=<pre>Clone a virtual machine. The virtual machine may be a template vm. The source virtual machine is specified via vmIdentifierType and virtualMachine (optionally vmDatacenter) while the target configuration is defined by vmName,vmFolder,vmResourcePool,dataStore,hostSystem, and clusterName.\n\nNote\: cannot work across virtual datacenters\n\nInputs\:\nhost - VMWare host hostname or IP\nuser - VMWare username\npassword - VMWare user's password\nport - Port to connect on\nprotocol - Connection protocol (http or https)\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation?\nvirtualMachine - Primary Virtual Machine identifier. IP (IPv4 or IPv6 depending upon ESX version), hostname (full), inventorypath (Datacenter/vm/MyResourcePool/MyVM), UUID, or the VM id (vm-123,123)\nvmIdentifierType - Virtual machine identifier type\nasync - Asynchronously perform the task\ntaskTimeOut - Time to wait before the operation is considered to have failed (seconds)\nvmDatacenter - Virtual machine's datacenter\nvmName - Virtual machine name being created (new)\nvmFolder - Virtual machine's folder by inventory path, / delimited not including datacenter (eg. ManagedVMs/DRS/Location1). For root folder, use /\nvmResourcePool - Virtual machine's resource pool\ndataStore - Datastore (eg. host\:dsname, mydatastore)\nhostSystem - Target virtual machine host system\nclusterName - Name of the VMWare HA or DRS cluster\nmarkAsTemplate - Mark the virtual machine as a template? Mark as regular virtual machine otherwise\ncustomizationTemplateName - Customization template name to use on the existing virtual machine or on the newly created one if a new VM is being created.\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n\nReturns\:\nreturnResult - Task result or operation result.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter or vSphere server the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter or vSphere client. The inventory path is case sensitive.\n</pre>
cb97dd6d-b7d1-48ce-99df-6720e1d7b2f4.60df7218-7565-4952-be40-c2b3f0aa5341.description=<pre> Apply a guest customization spec to an existing VM.\n\nInputs\:\n    host - VMWare vCenter hostname or IP.\n    user - VMWare username.\n    password - VMWare user's password.\n    port - Port to connect on.\n    protocol - Connection protocol.\nValid values\: "https", "http"\n    closeSession - Close the internally kept VMWare Infrastructure API session at completion of operation.\nValid values\: "true", "false"\n    async - Asynchronously perform the task.\nValid values\: "true", "false"\n    taskTimeOut - Time to wait before the operation is considered to have failed (seconds).\n    vmIdentifierType - Virtual machine identifier type (inventorypath, name, ip, hostname, uuid, vmid).\n    virtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\n    vmDatacenter - Virtual machine's datacenter.\n    customizationTemplateName - Name of the customization specification to apply to the virtual machine. The customization specification should already exist in the vCenter customization specifications manager. This is not a required input. However, if  both 'customizationTemplateName' and 'customizationSpecXml' are empty or have input, the operation will give an error message and fail. Hence, either 'customizationTemplateName' or 'customizationSpecXml' should have an input.\n    customizationSpecXml - The Xml string of the customization spec to apply. This is not a required input.\n\nResponses\:\n    success - The operation completed successfully.\n    failure - Something went wrong.\n\nReturns\:\n    returnResult - Operation result message.\n\nNotes\:\n1>Inventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n\n2>Guest customization spec can be applied only to a vm.\n\n3>If the operation fails due to "A customization operation is pending on the vm\: ", then restart the guest of the vm before applying a different customization specification.\n\n4>The result of the VMware/VMware Virtual Infrastructure and vSphere/Guest/Export Guest Customization Spec operation can be used to get the customizationSpecXml input value.\n\n5>If the Microsoft Sysprep Tools for a particular windows guest operating system is not already bundled with the vCenter Server then it must be installed on the vCenter Server system. For instructions on Guest Operating System Customization Requirements see "Customizing Guest Operating Systems" on page-42 in http\://www.vmware.com/pdf/vsphere4/r41/vsp_41_vm_admin_guide.pdf\n</pre>\n
cb97dd6d-b7d1-48ce-99df-6720e1d7b2f4.67110c87-791e-4db1-b254-494adbc84f02.prompt=dataStore
cb97dd6d-b7d1-48ce-99df-6720e1d7b2f4.6fe6c968-dcd0-4bf0-a2f5-d4b4c5b3ba43.prompt=vmID
cb97dd6d-b7d1-48ce-99df-6720e1d7b2f4.73b17a57-f4a6-461f-aef9-866ca9bff3b8.prompt=host
cb97dd6d-b7d1-48ce-99df-6720e1d7b2f4.7bf09863-178d-4588-bd52-71a940f36014.prompt=Enter password
cb97dd6d-b7d1-48ce-99df-6720e1d7b2f4.8c0c621d-867a-4a02-b7bd-84ef8da4fae0.prompt=password
cb97dd6d-b7d1-48ce-99df-6720e1d7b2f4.8f5843a9-8101-4a62-a435-658ad01ca0ff.prompt=addDiskSize
cb97dd6d-b7d1-48ce-99df-6720e1d7b2f4.9b28012f-3801-45ee-8761-eebdfc7328d6.description=<pre>Sets the power state of virtual machine (poweredOn,poweredOff,paused). Does nothing if the virtual machine is already in the power state.\n\nInputs\:\nhost - VMWare host hostname or IP\nuser - VMWare username\npassword - VMWare user's password\nport - Port to connect on\nprotocol - Connection protocol (http or https)\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation?\nasync - Asynchronously perform the task\ntaskTimeOut - Time to wait before the operation is considered to have failed (seconds)\nvirtualMachine - Primary Virtual Machine identifier. IP (IPv4 or IPv6 depending upon ESX version), hostname (full), inventorypath (Datacenter/vm/MyResourcePool/MyVM), UUID, or the VM id (vm-123,123)\nvmIdentifierType - Virtual machine identifier type\nvmPowerState - Virtual machine power state to set (poweredOn, poweredOff, suspended).\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\nno action - The operation completed with no action performed.\n\nReturns\:\nreturnResult - Task ID or task completion return message.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter or vSphere server the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter or vSphere client. The inventory path is case sensitive.\n</pre>
cb97dd6d-b7d1-48ce-99df-6720e1d7b2f4.adfced33-e4d7-4df0-b8a0-3e9d7ee2e263.description=<pre>Retrieve information about a virtual machine or a group of virtual machines in a datacenter or host system (pipe-delimited). Retrieve each object one at a time from an initial search query ala SQL Query operation.\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation?\nvmDatacenter - Virtual machine's datacenter.\nvmIdentifierType - Virtual machine identifier type.\nhostSystem - Target virtual machine host system.\nvirtualMachine - Primary Virtual Machine identifier. IP (IPv4 or IPv6 depending upon ESX version), hostname (full), inventorypath (Datacenter/vm/MyResourcePool/MyVM), UUID, or the VM id (vm-123,123).\ngetDetailed - Retrieve detailed information?\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\nno more - there are no more results to retrieve.\n\nReturns\:\nvmInfo - Virtual machine information.\nnumberOfResults - Number of results from the query remaining to be retrieved.\nreturnResult - Virtual machine ID or operation results.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter or vSphere server the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter or vSphere client. The inventory path is case sensitive.\n</pre>
cb97dd6d-b7d1-48ce-99df-6720e1d7b2f4.b984c198-fbd7-43b7-a8ab-4e415c7641c2.prompt=vmDatacenter
cb97dd6d-b7d1-48ce-99df-6720e1d7b2f4.bf6e4d97-eaf1-4ae3-b970-db15d7e6cfcf.prompt=Enter user
cb97dd6d-b7d1-48ce-99df-6720e1d7b2f4.d88390cf-b0a1-4a39-9d8a-5865448b1ab9.prompt=extendDiskSize
cb97dd6d-b7d1-48ce-99df-6720e1d7b2f4.db11eabb-407a-42a6-af4b-d1548db12a6d.prompt=Virtual Machine\:
cb97dd6d-b7d1-48ce-99df-6720e1d7b2f4.description=<pre>\nCreate a VM from a VM template. Must specify either hostSystem, clusterName, or vmResourcePool as a target location for VMs.\n\nThis flow is copied from CSA/3.x/Providers/vCenter/vCenter Clone Server/Subflows, and make necessary changes according to PC's requirements.\nChanges - Add input customizationSpecXml\n\nInput Parameters\:\n vmName - name of the VM that will be created with this flow\n templateName -  name of the VM template to clone in vCenter\n osType - linux or windows\n host -  vCenter host to execute against\n user - vCenter username\n password - vCenter password\n vmDatacenter -  target Datacenter on the vCenter host for the VMs\n dataStore -  target datastore on the vCenter host for the VMs\n hostSystem - target ESX host for the VMs\n clusterName - target cluster for the VMs\n vmResourcePool - target resource pool for the VMs\n CPUs - Number of cpus to be set on the VMs\n Memory - Amount of Memory in MB to be set on VMs. Memory should be a multiple of 4.\n port - Port Number toconnect on\n protocol - Connection prtocol(http, https)\n availableCPU - Available CPU in  vCenter\n availableMemory - Available Memory in MB in vCenter\n\n\nResponses\:\n success - The operation completed successfully.\n failure - Something went wrong.\n   \n\nResult Fields\:\n vmId - VMID of the Clone \n</pre>
cb9c1204-15da-466b-8308-297dd45cf255.1f7aa27d-2bc3-4a3d-9031-65a7225aa6d7.description=<pre>\nService to perform an HTTP GET via the Java HTTP Client\n\nInputs\:\nurl - the url to attempt to retrieve.\nusername - the username to authenticate to url with.\npassword - the password for username.\ntimeout - a timeout after which the connection should be terminated, or 0 for no timeout.\nuseCookies - Enables cookie tracking. Cookies will be stored between consecutive calls. valid options are\: true/false\nfollowRedirects - specifies whether or not the get command should automatically follow redirects.\ntrustAllRoots - enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it. valid options are\: true/false\nproxy - a proxy to use when accessing the web site.\nproxyPort - a port on the proxy to connect to.\nproxyUsername - a username to use when connecting to the proxy.\nproxyPassword - a password to use when connecting to the proxy.\nencodeURL - perform URL encoding.\nuserAgent - if the HTTP header USER_AGENT needs to be overridden, pass in the value here\ncharacterSet - the characterSet for HTTP Get request and response. Default is UTF-8.\n\nResponses\:\nsuccess - URL retrieved successfully.\nfailure - The url could not be retrieved.\n</pre>
cb9c1204-15da-466b-8308-297dd45cf255.59cb10eb-e7f9-4d3b-bde7-e82a37a690ae.description=Generic flow to send an e-mail
cb9c1204-15da-466b-8308-297dd45cf255.6e7018d8-ac6c-459e-a10f-95bb0774bc92.description=Service to perform an HTTP PUT via the Java HTTP Client\n\n<pre>\nInputs\:\nurl - the url to PUT from.\nusername - The username to use for basic authentication to the url\npassword - The password to use for basic authentication to the url\ntimeout - a timeout after which the connection should be terminated, or 0 for no timeout.\nuseCookies - Enables cookie tracking. Cookies will be stored between consecutive calls. Valid options are\: true/false\ntrustAllRoots - enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it. Valid options are\: true/false\nproxy - a proxy to use when accessing the web site.\nproxyPort - a port on the proxy to connect to.\nproxyUsername - a username to use when connecting to the proxy.\nproxyPassword - a password to use when connecting to the proxy.\nkeystore - the path to the keystore to use for SSL Client Certificates\nkeystorePassword - the password for the keystore\nencodeURL - perform URL encoding.\nfile - The file to put on the specified url.\nuserAgent - if the HTTP header USER_AGENT needs to be overridden, pass in the value here\n\nResponses\:\nsuccess - The PUT command completed\nfailure - The PUT operation failed.\n\nResult\:\nThe operation's return code.\n\nExtraResults\: \nresultText - the raw result of the operation\ndocument - The Complete document returned by the PUT operation\npageLoadTimeInMS - The number of milliseconds it took the page to load.\nresponseTimeInMS - The number of milliseconds it took before the server responded.\nURL - the url to PUT from\nsessionId - the session ID of the connection to the host\nexception - if an error occurred, the message of this error\n</pre>
cb9c1204-15da-466b-8308-297dd45cf255.85d01e64-c9d0-441f-90fe-483de7c3b799.description=<pre>Adds a flow variable into the local context (available to itself and child flows only)\n\nInput Parameters\:\nkeyName - the name of the flow variable to use\nmyValue - the value to assign the flow variable\n\nResponses\:\nsuccess - assigned the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, $myValue];</pre>
cb9c1204-15da-466b-8308-297dd45cf255.bc11f394-ebef-4c68-950f-e6f25e9238c3.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
cb9c1204-15da-466b-8308-297dd45cf255.c883d166-8c0c-49e6-a3bb-fb70c610324f.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
cb9c1204-15da-466b-8308-297dd45cf255.db660dc0-38f3-40c0-953a-ab83ff4783eb.description=<pre>Adds a flow variable into the local context (available to itself and child flows only)\n\nInput Parameters\:\nkeyName - the name of the flow variable to use\nmyValue - the value to assign the flow variable\n\nResponses\:\nsuccess - assigned the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, $myValue];</pre>
cb9c1204-15da-466b-8308-297dd45cf255.e278b962-97f7-4dcc-b193-961b301f6ec6.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
cbc4bbfd-a852-400d-9065-79de11b756e3.a11bb95f-a182-49c4-9fa7-33feacd6c240.description=<pre>Invokes web service methods.  This operation should not be used directly\!  Please use the wizard to build flows that use this operation.\n\nInputs\:\nxmlTemplate - The template of the soap request to make.\ninputMap - A map used to map between template names and user-friendly names. The tamplate names are pipe-delimited xpaths of the xmltemplate location, with a numerical element for lists.\nurl - The url to post to. \nheader_SOAPAction - The SOAPAction http header field, defined by many web services for indicating the intent of the request\nwswAuthenticationType - The authentication type to use for the username and password input. http is default (Uses http authentication), other options are 'ws-security digest' and 'ws-security text' WARNING\: ws-security text transmits passwords in clear-text\nWSSecuritySignRequest - true or false, should the SOAP request be signed using WS-Security.\nWSSecurityEncryptRequest - true or false, should the entire SOAP request be signed using WS-Security\nWSSecurityTimestampRequest - true or false, should the Timestamp attribute be added to the WS-Security header\nWSSecurityKeystore - keystore to use for encrypting and signing requests.\nWSSecurityKeystoreType - The type of WSSecurityKeystore.\nWSSecurityKeystorePassword - The password for WSSecurityKeystore.\ncontentType - Value to be used in the Content-Type http header\nusername - The username to use for authenticating with the web service\npassword - The password to use for authenticating with the web service\ntrustAllRoots - Enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it. valid options are\: true/false.\nuseCookies - Enables cookie tracking. Cookies will be stored between consecutive calls. valid options are\: true/false.\ntimeout - a timeout after which the connection should be terminated, or 0 for no timeout.\nproxy - A proxy to use when accessing the web service.\nproxyPort - A port on the proxy to connect to.\nproxyUsername - A username to use when connecting to the proxy.\nproxyPassword - A password to use when connecting to the proxy.\nkeystore - the path to the keystore to use for SSL Client Certificates when using http authentication\nkeystorePassword - the password for the keystore when using http authentication\nICONCLUDE_WSW_VERSION - This value is used internally by the operation\n\nAny additional inputs that follow these are added by the Web Service Wizard, and they are specific to the particular web service method being called.\n\nResponses\:\nsuccess - SOAP request completed successfully.\nfailure - something went wrong.\n\nReturns\:\ndocument - raw XML response\ndocumentStripped - raw XML response stripped of namespaces for ease in parsing with XML XPath operations\n\nNotes\:\nIf you add new step-level inputs with the name header_<headername>, where <headername> is the name of an html header, then that html header will be set to the given value in the HTTP request.\n\n</pre>
cdfebb57-6aee-48a4-9a3c-ee073dd5c5db.16e846ca-f86f-41f1-afdc-fa95491fb147.description=Replaces a substring within a string.\n\n<pre>\nInputs\:\ninput - the master string.\nreplace - the text to replace.\nreplaceWith - the text to replace with.\n\nResults\:\nthe string with the text replaced.\n\nResponses\:\nsuccess - succeeded in updating string.\nfailure - was unable to replace for some reason\n</pre>
cdfebb57-6aee-48a4-9a3c-ee073dd5c5db.3a12562f-d327-4fdd-b75e-2e7bbb3ff036.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
cdfebb57-6aee-48a4-9a3c-ee073dd5c5db.611dc6a4-f048-40f3-a423-10f40e2b0fc8.description=<pre>\nRuns a SQL query against an Oracle database, using the information in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation. Subsequent calls with the same information return the other rows.\n\nInputs\:\n    TNSPath -The path to the folder of the TNS file tnsnames.ora. This path must be accessible by the OO RAS service. For example, if the RAS and the Oracle server are installed on the same Windows system, the TNSPath might look like \u201CC\:\\app\\Administrator\\product\\11.1.0\\db_1\\network\\admin\u201D. If the RAS and the Oracle server are on different Windows systems, you can copy the tnsnames.ora file  to the RAS system. The TNSPath might look like \u201CC\:\\Program Files\\Hewlett-Packard\\Operations Orchestration\\RAS\\Java\\Default\\webapp\\conf\u201D or \u201CC\:\\Temp\u201D depending on where you place the .ora file. \n    TNSEntry - The entry name in the tnsnames.ora file that contains the connection information. For example, the value for the TNSEntry input is \u201CTestEntry\u201D if the content in the tnsnames.ora file looks like the following\: \n\nTestEntry \=\n  (DESCRIPTION \=\n   (ADDRESS \= (PROTOCOL \= TCP)(HOST \= 16.110.111.111)(PORT \= 1521))\n   (CONNECT_DATA \=\n     (SERVER \= DEDICATED)\n     (SERVICE_NAME \= orcl)\n   )\n )\n\n    Username - The username to connect to the Oracle database. \n    Password - The password for the Username.\n    Command - The command to execute. \n    Delimiter \u2013 The delimiter to use between the columns in the returnResult result.\n    Key \u2013 The key to use to keep multiple query results distinct.\n    timeout - Seconds to wait before timing out the SQL command execution.\nDefault values\: 0 \n\nResults\:\n    returnResult - This is the primary output. Returned the data returned for each row separated by the value you specified in the Delimiter input (for example, \u201Ckey16|lst|16\u201D).\n    columnNames - The names of the columns returned, separated by the value you specified in the Delimiter input (for example, \u201CMYKEY|NAME|ID\u201D).\n    rowsLeft - The number of rows remaining that match the query. \n\nResponses\:\n    more items - More rows are available for retrieval.\n    no more items - No more rows are available.\n    failure - There was an error executing the command.\n\nNotes\:\n1. This operation only supports Oracle. \n2. This operation can only execute the "SELECT" statement. For statements that modify the database, use the TNS Names SQL Command operation.\n\n</pre>\n\n\n
cdfebb57-6aee-48a4-9a3c-ee073dd5c5db.b5a68bed-fde1-404a-9325-7bc55bf2ffab.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
cdfebb57-6aee-48a4-9a3c-ee073dd5c5db.e671c6ae-6f49-45a6-a8aa-242cdeaf2695.callout=Check whether all vlangids in input are belong to specific customer. Get all vlangids out fromVLAN table, replace each in input vlangids, then replace all pipes. If all vlangids are valid, the resplaced result should be an empty string.
ce10f933-4986-444f-b9df-b677856575c0.description=It's attributes which will be used in ESL_CreateCI
cf553f84-1450-480e-b1ea-36f58d031922.1ad2ad85-271e-470a-be76-daae3e8c9a82.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
cf553f84-1450-480e-b1ea-36f58d031922.495f732e-f502-4cd3-b535-aa0a5542b736.description=<pre>Tries to make a connection to the request port.\n\nInput Parameters\:\nhost - hostname or IP address of the target host\nport - tcp port to connect to\n\nResponses\:\nport opened - a successful connection was made\nport closed - unable to make a connection\nhost not found - could not resolve hostname to a valid IP address\n\nExtra Results\:\naddresses - list of addresses returned from DNS\naliases - list of aliases returned from DNS\naddresspinged - actual IP address pinged\n</pre>
cf553f84-1450-480e-b1ea-36f58d031922.77eca6a1-ff34-4121-90cb-37e964ed662f.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
cf553f84-1450-480e-b1ea-36f58d031922.fba8d346-b9ed-413f-891f-32d677391087.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
cf6bc4c7-ee70-459f-b767-827c25e3a925.description=It's attributes which will be used in ESL_CreateCI
cf84e265-0c16-4061-ab32-e86f6e3794a6.5837d261-7ebb-4ea2-bcb5-72a9268bdf55.description=<pre>\nRuns a SQL query against an Oracle database, using the information in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation. Subsequent calls with the same information return the other rows.\n\nInputs\:\n    TNSPath -The path to the folder of the TNS file tnsnames.ora. This path must be accessible by the OO RAS service. For example, if the RAS and the Oracle server are installed on the same Windows system, the TNSPath might look like \u201CC\:\\app\\Administrator\\product\\11.1.0\\db_1\\network\\admin\u201D. If the RAS and the Oracle server are on different Windows systems, you can copy the tnsnames.ora file  to the RAS system. The TNSPath might look like \u201CC\:\\Program Files\\Hewlett-Packard\\Operations Orchestration\\RAS\\Java\\Default\\webapp\\conf\u201D or \u201CC\:\\Temp\u201D depending on where you place the .ora file. \n    TNSEntry - The entry name in the tnsnames.ora file that contains the connection information. For example, the value for the TNSEntry input is \u201CTestEntry\u201D if the content in the tnsnames.ora file looks like the following\: \n\nTestEntry \=\n  (DESCRIPTION \=\n   (ADDRESS \= (PROTOCOL \= TCP)(HOST \= 16.110.111.111)(PORT \= 1521))\n   (CONNECT_DATA \=\n     (SERVER \= DEDICATED)\n     (SERVICE_NAME \= orcl)\n   )\n )\n\n    Username - The username to connect to the Oracle database. \n    Password - The password for the Username.\n    Command - The command to execute. \n    Delimiter \u2013 The delimiter to use between the columns in the returnResult result.\n    Key \u2013 The key to use to keep multiple query results distinct.\n    timeout - Seconds to wait before timing out the SQL command execution.\nDefault values\: 0 \n\nResults\:\n    returnResult - This is the primary output. Returned the data returned for each row separated by the value you specified in the Delimiter input (for example, \u201Ckey16|lst|16\u201D).\n    columnNames - The names of the columns returned, separated by the value you specified in the Delimiter input (for example, \u201CMYKEY|NAME|ID\u201D).\n    rowsLeft - The number of rows remaining that match the query. \n\nResponses\:\n    more items - More rows are available for retrieval.\n    no more items - No more rows are available.\n    failure - There was an error executing the command.\n\nNotes\:\n1. This operation only supports Oracle. \n2. This operation can only execute the "SELECT" statement. For statements that modify the database, use the TNS Names SQL Command operation.\n\n</pre>\n\n\n
cf84e265-0c16-4061-ab32-e86f6e3794a6.5a9a11f7-8af7-4e86-be51-82491feef6e8.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
cf84e265-0c16-4061-ab32-e86f6e3794a6.67eca689-7e23-4110-a180-a1ffdc88ab6e.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
cf84e265-0c16-4061-ab32-e86f6e3794a6.6ce37cc7-397c-4536-b09b-4f4d0bf41ff9.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
d09c6baf-2a5f-48c6-8383-de28b2b1edfb.1f8358f1-fd5d-4dfe-baa9-211681545445.description=generates a random password consisting og lowercase letters, uppercase letter and number\n\nInputs\:\npasswordLength - specifies length of the password to be generated\n\nOutputs\:\ngeneratedPassword - the generated password string
d09c6baf-2a5f-48c6-8383-de28b2b1edfb.4e81b51c-d812-40e8-bb93-385df861faa5.description=Sleeps for "X" seconds.\n\n<pre>\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason\n</pre>
d09c6baf-2a5f-48c6-8383-de28b2b1edfb.58b2bb67-7af6-4223-930d-cfd19c0d0b56.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
d09c6baf-2a5f-48c6-8383-de28b2b1edfb.7aa54979-a4f5-498e-9465-25af3e0de3d1.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
d09c6baf-2a5f-48c6-8383-de28b2b1edfb.83636177-7829-4c89-b192-6979eb32b83b.description=<pre>This is an operation that does nothing, and can be used to display information to the user by editing the display tab. It can also be used for filtering flow variables by feeding them in as inputs, and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
d09c6baf-2a5f-48c6-8383-de28b2b1edfb.958c96ee-c5ab-4f57-a18d-a3adb718d96b.description=<pre>This is an operation that does nothing, and can be used to display information to the user by editing the display tab. It can also be used for filtering flow variables by feeding them in as inputs, and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
d09c6baf-2a5f-48c6-8383-de28b2b1edfb.9fb26dc1-81ba-45c4-8f97-19cf093deb83.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
d09c6baf-2a5f-48c6-8383-de28b2b1edfb.c019e5e2-6aae-4dca-9380-c460282a466e.description=<pre>Scan opened ports on give host  \n\nInputs\: \n host - IP address Host name to be scanned\n lowestPort - lowest port range\n highestPort - highest port range\n portType - the type of ports to be scanned (TCP or UDP). If not specified, the TCP ports are scanned.\n\nNote\:\n To scan specific port give same port as parameter for both Lowest Port and Highest Port, \n\nResponses\:\n success - the command was executed successfully\n failure - the command could not be executed\n\nResult\:\n finalResult - Information about the ports' statuses on a given machine.\n\nExtra results\:\n host - the IP of the host for which the ports are scanned\n ports - Number of ports scanned\n opened - Number of ports open\n closed - Number of ports closed\n dropped - Number of ports dropped\n</pre>\n
d09c6baf-2a5f-48c6-8383-de28b2b1edfb.ca114801-bfb3-42de-80e3-0e42d4c19c97.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
d09c6baf-2a5f-48c6-8383-de28b2b1edfb.ee1a3169-0e5b-4db6-be8f-f5afc3984f28.description=Counts from one number to another number.\n\n<pre>\nInputs\:\ncount - number of loops to complete\nreset - If true, then the counter will restart counting from the beginning.\n\nReturns\:\nThe number that was just counted.\n\nResponses\:\nhas more - Not yet done counting.\nno more - Done counting. This will only be returned once, then counting restarts.\nfailure - Something went wrong.\n</pre>
d22b2b10-6f91-4165-8b6b-16c380bd94b3.5f907603-e984-4d6d-a8f2-a4d4591491ac.description=<pre>Checks if a number or word is equal to another number or word. Word comparison is case-sensitive in alphabetical order.\n\nInputs\:\nvalue1 - The first value.\nvalue2 - The second value.\n\nReturns\:\nvalue1 \=\= value2\n\nResponses\:\nsuccess - The boolean operation was evaluated to true.\nfailure - Something went wrong or the boolean operation returned false.\n</pre>
d22b2b10-6f91-4165-8b6b-16c380bd94b3.84fa108e-e56e-4987-81a1-2d0a397472a0.description=<pre>This subflow was created by the Web Services Wizard to invoke the efficientip_macro_get_vlan_info_php operation on file\:/C\:/CSA_INSTALLATION/wsdl_eip_full.wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nauth_login - The input named efficientip_macro_get_vlan_info_php|input|auth_login of the complex type\: efficientip_macro_get_vlan_info_php|input\nauth_password - The input named efficientip_macro_get_vlan_info_php|input|auth_password of the complex type\: efficientip_macro_get_vlan_info_php|input\nvlanglobalid - The input named efficientip_macro_get_vlan_info_php|input|vlanglobalid of the complex type\: efficientip_macro_get_vlan_info_php|input\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\noutput - The output given by the XPath\: /Envelope/Body/efficientip_macro_get_vlan_info_phpResponse/output</pre>
d2e07704-d2c0-4516-827f-09a16f56ea98.description=Administrator account for OO Central
d3244b02-1fec-4f20-83f7-4dd86dce6b02.description=Login for IPAM
d353cdca-83b7-4a84-b0d5-7ce7ef703573.description=attributes which will be used in ESL_CreateCI
d368c15e-503d-43f6-a69f-4a568dc5cac6.description=It's attributes which will be used in ESL_CreateCI
d4761777-485f-476f-a40d-3b8dce8b5e67.1b1651c7-d26d-4a30-a191-7c67299d413a.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
d4761777-485f-476f-a40d-3b8dce8b5e67.1f98c510-a73d-4e6d-88bb-de53282eaf05.description=Generic flow to send an e-mail
d4761777-485f-476f-a40d-3b8dce8b5e67.24785cb1-67cc-4dd7-87d2-6028390cdb67.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
d4761777-485f-476f-a40d-3b8dce8b5e67.29d3ba73-2faa-4e98-87f2-96551a538e3f.description=Flow specifically to configure windows client supplied images.  Flow required since some windows configuration is done \nin the SA subflows.  Since ClientSupplied bypasses all of the SA subflows, this flow was needed to handle the \nspecific ClientSupplied tasks.\n\n- Reset Administrator Account to localadmin account.\n\n
d4761777-485f-476f-a40d-3b8dce8b5e67.30082329-42b3-4c6d-ae3a-04ac8099b152.description=Generic flow to send an e-mail
d4761777-485f-476f-a40d-3b8dce8b5e67.3057c82d-719c-413a-b416-5be94d034857.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
d4761777-485f-476f-a40d-3b8dce8b5e67.3825291b-0774-4007-84ff-e55130e60096.description=The flow outputs the ESL Virtual Technology field required by ESL.\nThe field can be one of the following\:\n   - Physical servers -  "Logical Server"\n   - vCenter Servers - "VMWare"\n   - HyperV Servers - "Hyper-V"\n\nInput Parameters\:\n   serverResourcePool - The Resource Pool in which the server is being provisioned.l\n   serverType - The type of server, either V for virtual or P for Physical\n\nResponses\:\n   success - the Virtual Technology Field was populated\n   failure - otherwise\n\nResult Fields\:\n   eslVirtualTech - The string representing the virtual technology
d4761777-485f-476f-a40d-3b8dce8b5e67.4307ec13-792e-41fb-acbd-7682396a2b2f.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
d4761777-485f-476f-a40d-3b8dce8b5e67.435506b0-db41-42d1-81c3-7fe00feee5d9.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
d4761777-485f-476f-a40d-3b8dce8b5e67.525fd519-8360-44a1-9674-47fee63ccb4c.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
d4761777-485f-476f-a40d-3b8dce8b5e67.5642ba3b-3d61-4bc8-b31a-1996afeec49f.description=Generic flow to send an e-mail
d4761777-485f-476f-a40d-3b8dce8b5e67.695c4318-6482-46c7-8872-3fe03dd67bdf.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
d4761777-485f-476f-a40d-3b8dce8b5e67.6acd4071-db61-4eee-808f-026b31b34f73.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
d4761777-485f-476f-a40d-3b8dce8b5e67.6d4436f8-e464-452b-a8b2-685323d02991.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
d4761777-485f-476f-a40d-3b8dce8b5e67.7de01ae3-20b9-4641-9bd8-ccff55adb7f9.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
d4761777-485f-476f-a40d-3b8dce8b5e67.84f46814-4a9f-439d-be5e-2d9f19d5e2c1.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
d4761777-485f-476f-a40d-3b8dce8b5e67.8fb2435d-da8c-4611-8d6b-3889b9b80d60.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
d4761777-485f-476f-a40d-3b8dce8b5e67.9a0abba8-ccce-4852-9747-169ce60b9c67.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
d4761777-485f-476f-a40d-3b8dce8b5e67.d62a5a26-18af-420b-94eb-b5946e600e6a.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
d4761777-485f-476f-a40d-3b8dce8b5e67.de45e9b0-8e5c-4a03-9bd2-82f6c9ffb3db.description=Generic flow to send an e-mail
d4761777-485f-476f-a40d-3b8dce8b5e67.de9daea5-e019-44fc-ae2b-6004654c3257.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
d4761777-485f-476f-a40d-3b8dce8b5e67.description=This flow when provided an InfrastructureService id, will deploy IO based service. It will update the provided Infrastructure Service with Server Groups followed by Servers present in a Server Group.\n\nInput Parameters\:\n   id\: Infrastructure Service id.\n\nResponses\:\n   success - if the IO deploy operation is successful.\n   failure - otherwise\n\nResult Fields\:
d4761777-485f-476f-a40d-3b8dce8b5e67.e6dee8c0-d779-4098-8cc6-f2baeb49ddec.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
d72f8581-1b73-4f7a-8e48-87d1c32d50a5.description=It's attributes which will be used in ESL_CreateCI
d771d2db-c222-40ee-9597-c81c5a1dac4d.description=The name of the custom attribute that will be set for each managed server in Server Automation. This should not be changed.
d776723f-1ad6-4951-9463-caaa43849c14.033c5d32-f0db-4c8c-a3ea-f81b524efd1f.description=Counts from one number to another number.\n\n<pre>\nInputs\:\ncount - number of loops to complete\nreset - If true, then the counter will restart counting from the beginning.\n\nReturns\:\nThe number that was just counted.\n\nResponses\:\nhas more - Not yet done counting.\nno more - Done counting. This will only be returned once, then counting restarts.\nfailure - Something went wrong.\n</pre>
d776723f-1ad6-4951-9463-caaa43849c14.1ff224f2-bcc0-423c-8037-5da656b5379f.description=Waits for the job to reach a specific state. If no state is specified, then this will wait for the job to reach an end state.\n\nInputs\:\ncoreHost - The DNS name or IP Address of your SAS core.\ncorePort - The port to Connect to your SAS core on.\ncoreProtocol - The protocol to connect to your SAS core with. Either HTTP or HTTPS.\ncoreUsername - The username for host.\ncorePassword - The password for host.\njobID - the id of the job\nstatus - The status to wait for the job to reach. If none is specified this will wait until the job is no longer running.\ntimeout - The maximum number of milliseconds to wait for the job. If not specified, 1 hour is used.\n\nResponses\:\nfailure - Something went wrong.\nsuccess - The operation completed successfully.
d776723f-1ad6-4951-9463-caaa43849c14.2195e567-a3c7-4931-aa44-3f97960e86b9.description=<pre>\nIterates through a list of values. Modifying the value of the list and delimiter inputs during iteration is not generally supported.\n\nInputs\:\nlist - The list to iterate through.\nseparator - A delimiter that separates elements in the list.\n\nReturns\:\nThe current element of the list, if the response is has more\n\nResponses\:\nhas more - Another value was in the list, and has been returned.\nhas no more - The iterator has gone fully through the list. This response will only be returned once per iteration through the list, a subsequent call to the Iterator will restart the Iteration through the list.\nfailure - failed to process the list.\n\nNote\: Where the iterator is in the list is tracked by each step's unique id. Therefore you can iterate on the same list from multiple steps simultaneously.\n\nWARNING\: Any step that will use the results of this Iterator operation will, by default, attempt to assign that step's inputs from a flow variable. If this is left checked, then the first element of the iterator will be used for every cycle of iteration.\n\n</pre>
d776723f-1ad6-4951-9463-caaa43849c14.3bcbee22-8678-47e9-bdfb-81cb697a8f66.prompt=Enter a value for ticketID
d776723f-1ad6-4951-9463-caaa43849c14.423e2667-d4ed-4288-8294-bd9510becea2.description=Starts a full remediation on the specified server. If wait is specified, this operation will wait for the remediation to complete.\n\nInputs\:\ncoreHost - The DNS name or IP Address of your SAS core.\ncorePort - The port to Connect to your SAS core on.\ncoreProtocol - The protocol to connect to your SAS core with. Either HTTP or HTTPS.\ncoreUsername - The username for host.\ncorePassword - The password for host.\ncoreVersion - The version of SAS to use.\nserverName - The name of the server to remediate.\nserverId - The ID of the server to remediate. If this input is provided, then the server name is ignored.\nwait - An integer value specifying how many milliseconds should be waited for the job to finish. If not specified the job is started, but may not have finished.\nrebootOption - Reboot Option for Remediating a server. It could be one of [suppress, per_action, at_end] or it can be left blank. Where\:\n\t\t- suppress - Suppress all reboots; \n\t\t- per_action - Reboot after each installation or uninstallation; \n\t\t- at_end - Reboot at the end of remediation; \n\t\t- left blank (no value provided) - Reboot as specified by individual software items.\nticketID - The ticket ID for this job. If not specified it will be set default value\: 'Remediation started by SA user <user_name> from OO server 'host_address'\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n\nReturns\:\nreturnResult - The id of the created job.
d776723f-1ad6-4951-9463-caaa43849c14.4564fb27-5c67-4c44-94ef-799cbc3c0c0d.prompt=Enter a value for softwarePoliciesIDs
d776723f-1ad6-4951-9463-caaa43849c14.51b87553-e744-4307-9ca8-77dba0bf649d.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
d776723f-1ad6-4951-9463-caaa43849c14.79643224-561d-43b4-99a5-8b95b4c792da.prompt=Enter a value for serverId
d776723f-1ad6-4951-9463-caaa43849c14.8d3fb699-ed6c-4d4c-9b08-77cc186c396f.description=Attaches a software policy to a server/device group/hypervisor.\n\nInputs\:\ncoreHost - The DNS name or IP Address of your SAS core.\ncorePort - The port to Connect to your SAS core on.\ncoreProtocol - The protocol to connect to your SAS core with. Either HTTP or HTTPS.\ncoreUsername - The username for host.\ncorePassword - The password for host.\ncoreVersion - The version of SAS to use.\npolicyName - The name of the policy to attach.\npolicyID - The ID of the policy to attach. If this input is provided, then 'policyName' is ignored.\nattachableName - The name of the attachable object to attach the policy to.\nattachableID - The ID of the attachable object to attach the policy to. If this input is provided, then 'attachableName' is ignored.\nattachableType - The type of the attachable object. Can be\: SERVER, DEVICE_GROUP, HYPERVISOR.\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.
d776723f-1ad6-4951-9463-caaa43849c14.a2821f9c-192d-425e-b77c-099923c3d907.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
d776723f-1ad6-4951-9463-caaa43849c14.c6384ffa-cc74-4fc6-9207-9c83fd815c0f.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
d776723f-1ad6-4951-9463-caaa43849c14.d380fcea-3cf6-49af-aa90-cd58dfa8c939.description=Sleeps for "X" seconds.\n\n<pre>\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason\n</pre>
d776723f-1ad6-4951-9463-caaa43849c14.d7d9ad51-5bc4-48bb-bb3e-2b4ce7dab0c1.description=Starts a remediation on the given server using a set of attached/detached software policies. If the software policies information is not provided, then a full software policy remediation is performed.\n\nInputs\:\ncoreHost - The DNS name or IP Address of your SAS core.\ncorePort - The port to Connect to your SAS core on.\ncoreProtocol - The protocol to connect to your SAS core with. Either HTTP or HTTPS.\ncoreUsername - The username for host.\ncorePassword - The password for host.\ncoreVersion - The version of SAS to use.\nserverName - The name of the server to remediate.\nserverId - The ID of the server to remediate. If provided, the server name is ignored.\nsoftwarePoliciesNames - The names of the software policies to remediate against (separated by comma). The software policies need to be attached/detached to/from the server before the remediation takes place.\nsoftwarePoliciesIDs - The IDs of the software policies to remediate against (separated by comma). The software policies need to be attached/detached to/from the server before the remediation takes place. If this input is provided, then 'softwarePoliciesNames' is ignored.\nwait - An integer value specifying how many milliseconds should be waited for the job to finish. If not specified the job is started, but may not have finished.\nrebootOption - Reboot Option for Remediating a server. It could be one of [suppress, per_action, at_end] or it can be left blank. Where\:\n\t\t- suppress - Suppress all reboots; \n\t\t- per_action - Reboot after each installation or uninstallation; \n\t\t- at_end - Reboot at the end of remediation; \n\t\t- left blank (no value provided) - Reboot as specified by individual software items.\nticketID - The ticket ID for this job. If not specified it will be set default value\: 'Remediation started by SA user <user_name> from OO server 'host_address'\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n\nReturns\:\nreturnResult - The id of the created job.
d776723f-1ad6-4951-9463-caaa43849c14.f2292d9d-7f3f-497e-8aa7-83c1ab6f9ce5.description=<pre>Checks if a number or word is equal to another number or word. Word comparison is case-sensitive in alphabetical order.\n\nInputs\:\nvalue1 - the first value.\nvalue2 - the second value.\n\nReturns\:\nvalue1 \=\= value2\n\nResponses\:\nsuccess - The boolean operation was evaluated to true.\nfailure - Something went wrong or the boolean operation returned false.\n</pre>
d78284b5-7052-4c57-adc6-945b77ea9e2c.24b38dd1-401b-4139-bf6e-85d7d6d68aad.description=<pre>\nModifies the specified cell with new value in an Excel document. \nXLS, XLSX and XLSM formats are supported. \n\nInputs\:\n    excelFileName - The name of the new Excel document. The complete path should be given if the file does not exist in the working directory(%ICONCLUDE_HOME%\\jetty\\bin).\nExamples\: c\:\\temp\\test.xls \n    worksheetName - The name of Excel worksheet. \nDefault value\: Sheet1\n    rowIndex - A list of row indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from the index of the first row  to the index of the last row of the Excel worksheet.\n    columnIndex - A list of column indexes.\nExamples\: 1\:3, 10, 15\:20,25\nDefault value\: from 0 to the index of the last column in the Excel worksheet.\n   newValue\: A comma delimited list of data to write to the specified cell. The size of the newValue list should be the same as the size of columnIndex input.\n\nResults\:\n    returnResult - This is the primary output. Returns the number of rows that were affected.  \n\nResponses\:\n    success - The cell data was modified successfully.\n    failure - Failed to modify the cell data.\n    incomplete - Not all the cells specified were modified.\n\nNotes\:\n1. All the index inputs are 0 based.\n2. For the indexes in rowIndex input that is less than the first data row index or greater than the last row index in the worksheet, the operation trims those row indexes.\n3. For the indexes in columnIndex input that is less than 0 or greater than the last column index in a row, the operation trims those column indexes.\n4. If columnIndex input is empty, the size of the newValue list should be the same as column count in the worksheet.\n5. If the newValue is a numeric value, the cell modified is set to numeric type.\n6. There's a limitation that if the newValue is a date or time value, the operation treats it as a string value.\n7. If there's any change in the worksheet, all values of formula type cells are updated.\n8. If there's any merged region existed in the worksheet, only the top left cell can be modified.\n</pre>
d78284b5-7052-4c57-adc6-945b77ea9e2c.5116670b-5e93-4097-aea1-e3be7aa7b3ca.description=\n<pre>\nChecks to see if a path points to an existing file or folder.\n\nInput Parameters\:\nsource - the path to check\n\nResponses\:\nfailure\t\t\t- the operation failed. The path does not exist.\nsuccess\t\t\t- The operation succeeded.\n\n</pre>\n
d78284b5-7052-4c57-adc6-945b77ea9e2c.5c994f18-af33-4e92-8299-51d627686604.description=<pre>\nIf the input dateFormat is not specified, it converts a date in the format of date/time of OO Central Server's, which is dependant on the Java locale, to a date either in the format of date/time of OO Central Server's or in the format specified in the input outFormat. \n\nIf the input dateFormat is specified, it converts a date in the format in dateFormat to a date either in the format of date/time of OO Central Server's or in the format specified in the input outFormat.\n\nYou can use flow "Get Current Date and Time" to check upon the default date/time format.  \n\nFor exmaple, if OO Central Server's locale is English, the input dateFormat is empty and the input outFormat is empty, the input date should be in the format of "July 13, 2006 10\:04\:08 AM". If the user specifies dateFormat as "dd-MM-YYYY HH\:mm\:ss", the input date should be in the format of "13-07-2006 10\:04\:08". If the input outFormat is empty, the result will be "July 13, 2006 10\:04\:08 AM". If the input outFormat is "yyyy-MM-dd", the result will be "2006-07-13".\n\n\nSpecify the date format with the following patterns\:\n\nLetter \tDate or Time Component \tPresentation \tExamples\nG \tEra designator \tText \tAD\ny \tYear \tYear \t1996; 96\nM \tMonth in year \tMonth \tJuly; Jul; 07\nw \tWeek in year \tNumber \t27\nW \tWeek in month \tNumber \t2\nD \tDay in year \tNumber \t189\nd \tDay in month \tNumber \t10\nF \tDay of week in month \tNumber \t2\nE \tDay in week \tText \tTuesday; Tue\na \tAm/pm marker \tText \tPM\nH \tHour in day (0-23) \tNumber \t0\nk \tHour in day (1-24) \tNumber \t24\nK \tHour in am/pm (0-11) \tNumber \t0\nh \tHour in am/pm (1-12) \tNumber \t12\nm \tMinute in hour \tNumber \t30\ns \tSecond in minute \tNumber \t55\nS \tMillisecond \tNumber \t978\nz \tTime zone \tGeneral time zone \tPacific Standard Time; PST; GMT-08\:00\nZ \tTime zone \tRFC 822 time zone \t-0800\n\nSo, for example\: the date "2006-07-10 15\:16\:14.766 PDT" would have the dateFormat "yyyy-MM-dd HH\:mm\:ss.SSS z".\n\nYou can also use single quotes (') to avoid text interpretation. The quoted text will simply be copied into the output string during formatting (if present in the outFormat) or matched against the input string during parsing (if present in the dateFormat). For example, the date value "2006-07-10T15\:16\:14.766Z" would have the dateFormat "yyyy-MM-dd'T'HH\:mm\:ss.SSS'Z'". \n\n\nInputs\:\ndate - The date to parse. If the input dateFormat is empty, the date must be in the format of date/time of OO Central Server's, which is dependant on the Java locale. If the input dateFormat is not empty, the date must be in the format specified in the input dateFormat.\ndateFormat - The format of the input date. \noutFormat - The format of the output date/time. If it is empty, the output date/time will be in the format of date/time of OO Cental Server's, which is dependant on the Java locale.\noutLocaleLang - The locale language for output string. For example,  en or ja.\noutLocaleCountry - The locale country for output string. For example, US or JP. \n\nResponses\:\nsuccess - The date was converted.\nfailure - The date could not be converted.\n\nResult\:\nThe date in the new format.\n</pre>
d78284b5-7052-4c57-adc6-945b77ea9e2c.8fa1ff37-8294-4ef9-ac09-128e76d205cd.description=<pre>\nCheck the current date and time, and returns a java DateAndTime formatted string of it. If locale is specified, it will return the date and time string based on the locale.Otherwise, default locale will be used.\n\nInputs\:\nlocaleLang - The locale language for date and time string. For example,  en or ja.\nlocaleCountry - The locale country for date and time string. For example, US or JP. If localeLang is not specified, this input will be ingored.\n\nResult\:\nCurrent date and time.\n\nResponses\:\nsuccess - Date/time retrieved successfully.\nfailure - Date/time could not be retrieved.\n</pre>
d78284b5-7052-4c57-adc6-945b77ea9e2c.c08f095e-677f-40fc-acc7-72d93073337a.description=<pre>Copies a file or directory.\n\nInput Parameters\:\nsource - The file or directory to copy.\ndestination - the location to copy the file or directory to.\nremoveSource - Specifies whether the source should be removed if the copy operation is successful (true, false).\nuser - Username to use for thread impersonation on the RAS host during this operation.\npassword - The password for the user.\noverwrite - If false the operation will fail if Destination exists.\n\nResponses\:\nsuccess - Was able to copy file/directory.\nfailure - Unable to copy file/directory.\n\nNote\:\nThis copy operation is modeled after the Windows command-line copy operation.  So given a sample directory structure\:\n--DirectoryA\n   |--File1\n   |--File2\n   |--DirectoryC\n       |-File5\n\n--DirectoryB\n   |--File3\n   |--File4\n\nIf your Source is "DirectoryA" and your Destination is "DirectoryB" your end result will be\:\n--DirectoryA\n   |--File1\n   |--File2\n   |--DirectoryC\n       |-File5\n\n--DirectoryB\n   |--File3\n   |--File4\n   |--File1\n   |--File2\n   |--DirectoryC\n       |-File5\n</pre>
d78284b5-7052-4c57-adc6-945b77ea9e2c.description=1.All the variables within the several operations are exposed as input.\n2.ExcelFilePath input is the target directory for the excel copy.Modify to adapt to your environment.In this directory the appropriate "system_data_cloud.xls" file must be present.
d78284b5-7052-4c57-adc6-945b77ea9e2c.e811f320-cf4a-4a81-82b8-6ff20ff06943.prompt=Enter a value for date
d78284b5-7052-4c57-adc6-945b77ea9e2c.f9464d30-9747-483d-8886-43e7713ac970.prompt=ExcelFileName\:
d7cf1fe4-8408-4139-8131-c2377070b138.description=pc.vcenter.vmPowerState.off
d9400075-1c9f-417f-94f2-20beafc64769.3cfc7575-e994-465c-8d60-54da910c4af8.description=<pre>Sleeps for "X" seconds.\n\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason</pre>
d9400075-1c9f-417f-94f2-20beafc64769.46006fed-aa3e-4696-b129-0e9d11b2ccf0.description=Retrieves the server(s) ServerVO properties\n\n<pre>\nInputs\:\ncoreHost - The DNS name of IP Address of your SAS core.\ncorePort - The port to Connect to your SAS core on.\ncoreProtocol - The protocol to connect to your SAS core with. Either HTTP or HTTPS.\ncoreUsername - The username for host.\ncorePassword - The password for host.\ncoreVersion - The version of SAS to use.\nagent - the agent name search string (can be a partial name and multiple return results can be returned\n\nResponses\:\nsuccess - retrieved successfully\nfailure - failed to retrieve data\n\nReturns\:\ncreatedBy - The name of the user who created this object.\ncreatedDate - The date that this object was created.\nid - The unique ID of this object.\ncreatedBy - The name of the user who created this object.\ncreatedDate - The date that this object was created.\ndirtyAttributes - A ; delimited list of attributes that are dirty (Modified and not yet fully propagated).\nmodifiedBy - The user who last modified this object.\nmodifiedDate - The date that this object was last modified on.\ndescription - The description of this object.\nhostname - The DNS hostname of this object.\nmodel - The model of this object.\nosVersion - The version of the OS running on the object.\nprimaryIP - The primary IP address of this object.\nserialNumber - This object's serial number.\nmanufacturer - The manufacturer of this object.\nname - The name of this object\nversion - The version of this object\ncodeset - The Code set of this object.\ncustomerName - The name of the customer this object was created for.\ndefaultGW - The default gateway used when accessing this object.\ndiscoveredDate - The date when this object was first discovered.\nfacilityName - The name of the facility housing this object.\nlocale - The locale this object is in.\nlockComment - The comment on this object's locked. NOTE\: object may not be locked.\nlockDate - The date this object was last locked.\nlockUser - The user who locked this object last.\nisLocked - A boolean value specifying whether or not this object is currently locked.\nloopbackIP - The loopback ip address used by this object.\nmanagementIP - The management ip address used by this object.\nmid - mid TODO\: determine what this result is.\nNetBIOSName - The full netBIOS (Windows networking) name for this object.\nlifecycle - The state in the Opsware lifecycle that this object is currently in.\norigin - origin TODO\: determine what this result is.\nosFlavor - The flavor of the OS running on this object. For example\: Windows.\nosSPVersion - The service pack version of the OS running on the object.\npeerIP - peerIP TODO\: determine what this result is.\nplatformName - platformName TODO\: determine what this result is.\npreviousSWRegDate - previousSWRegDate TODO\: determine what this result is.\nrealmName - The name of the realm this object is in.\nstage - stage TODO\: determine what this result is.\nstate - state TODO\: determine what this result is.\nuse - use TODO\: determine what this result is.\nvirtualizationType - virtualizationType TODO\: determine what this result is.\n</pre>
d9400075-1c9f-417f-94f2-20beafc64769.60cd2801-d529-4284-be82-98c234bd71d8.description=<pre>\nThis flow uses an apx command to deactivate the serverName from the Server Automation server (SAS). Internally it uses ssh for the protocol and  port 2222 for the connection.\n\nInputs\:\ncoreHost - The SAS core hostname or IP. \ncoreUsername - The SAS username to access the coreHost. \ncorePassword - The SAS user's password to access the coreHost. \nserverName -  The managed server name to be deactivated.\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n</pre>
d9400075-1c9f-417f-94f2-20beafc64769.614ac4fa-84fe-482e-be60-a4948f988967.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\n    string1 - The first string. \nDefault value\: "" (empty)\n    string2 - The second string.\nDefault value\: "" (empty)\n    ignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nResponses\:\n    true - If the two strings are equal.\n    false - If the two strings are not equal.\n\n</pre>
d9400075-1c9f-417f-94f2-20beafc64769.6328275a-b214-4893-bfe4-b2bcb90a5d3f.prompt=Enter a value for agent
d9400075-1c9f-417f-94f2-20beafc64769.6377e048-d4b5-44c0-a00a-5a24015a3ecd.prompt=Enter a value for coreHost
d9400075-1c9f-417f-94f2-20beafc64769.aa723327-9721-4b9d-8072-08021b4213e0.description=<pre>Sleeps for "X" seconds.\n\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason</pre>
d9400075-1c9f-417f-94f2-20beafc64769.ad3f4cee-7d7c-45e2-8b9a-72284724f995.description=<pre>\nThis flow uses an apx command to delete the serverName from the Server Automation server (SAS). Internally it uses ssh for the protocol and  port 2222 for the connection.\n\nInputs\:\ncoreHost - The SAS core hostname or IP. \ncoreUsername - The SAS username to access the coreHost. \ncorePassword - The SAS user's password to access the coreHost. \nserverName -  The managed server name to be deleted.\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n</pre>
d9400075-1c9f-417f-94f2-20beafc64769.c6b400ce-e733-4aaf-a322-9e40d5aee329.description=<pre>Sleeps for "X" seconds.\n\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason</pre>
d9400075-1c9f-417f-94f2-20beafc64769.c7aa359e-76d6-43c8-acd1-e24cd2d51813.callout=wait for 15 seconds. Change the number if want to wait longer
d9400075-1c9f-417f-94f2-20beafc64769.description=Deactivate a server in Server Automation Server (SAS) and then delete the server from SAS. \n\nInputs\:\nsaHost - SAS core hostname or IP address\nsaUsername - SAS username to access the saHost\nsaPassword - SAS user's password to access the saHost\nserverName - name of the server to be deactivated and deleted \n\nResponses\:\nsuccess - operation completed successfully\nfailure - otherwise\n
d9400075-1c9f-417f-94f2-20beafc64769.f771ce43-6325-48aa-87e5-1ed98c58c66e.prompt=Enter the SAS version used\:
d9981193-bc9a-4ed1-953a-b5803fb3d15b.description=Version of the Matrix for the CreateHPIO Template Script
da42cd2b-3b26-4e79-a3f6-6bdb01ddf9f1.4d2acb74-1c8f-4366-a9bf-0da38976da3d.description=<pre>Checks if a number or word is equal to another number or word. Word comparison is case-sensitive in alphabetical order.\n\nInputs\:\nvalue1 - The first value.\nvalue2 - The second value.\n\nReturns\:\nvalue1 \=\= value2\n\nResponses\:\nsuccess - The boolean operation was evaluated to true.\nfailure - Something went wrong or the boolean operation returned false.\n</pre>
da42cd2b-3b26-4e79-a3f6-6bdb01ddf9f1.70e3518d-ee51-4a6e-9936-4dfa05cb17df.description=<pre>This subflow was created by the Web Services Wizard to invoke the efficientip_macro_delete_ip_php operation on file\:/C\:/CSA_INSTALLATION/wsdl_eip_full.wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nauth_login - The input named efficientip_macro_delete_ip_php|input|auth_login of the complex type\: efficientip_macro_delete_ip_php|input\nauth_password - The input named efficientip_macro_delete_ip_php|input|auth_password of the complex type\: efficientip_macro_delete_ip_php|input\nip_address - The input named efficientip_macro_delete_ip_php|input|ip_address of the complex type\: efficientip_macro_delete_ip_php|input\nvlanglobalid - The input named efficientip_macro_delete_ip_php|input|vlanglobalid of the complex type\: efficientip_macro_delete_ip_php|input\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\noutput - The output given by the XPath\: /Envelope/Body/efficientip_macro_delete_ip_phpResponse/output</pre>
da61ee53-c72f-4f99-85b3-b41873fa25ea.cb1a6c0e-4804-4a15-801c-0091d8d83efc.description=<pre>Invokes web service methods.  This operation should not be used directly\!  Please use the wizard to build flows that use this operation.\n\nInputs\:\nxmlTemplate - The template of the soap request to make.\ninputMap - A map used to map between template names and user-friendly names. The tamplate names are pipe-delimited xpaths of the xmltemplate location, with a numerical element for lists.\nurl - The url to post to. \nheader_SOAPAction - The SOAPAction http header field, defined by many web services for indicating the intent of the request\nwswAuthenticationType - The authentication type to use for the username and password input. http is default (Uses http authentication), other options are 'ws-security digest' and 'ws-security text' WARNING\: ws-security text transmits passwords in clear-text\nWSSecuritySignRequest - true or false, should the SOAP request be signed using WS-Security.\nWSSecurityEncryptRequest - true or false, should the entire SOAP request be signed using WS-Security\nWSSecurityTimestampRequest - true or false, should the Timestamp attribute be added to the WS-Security header\nWSSecurityKeystore - keystore to use for encrypting and signing requests.\nWSSecurityKeystoreType - The type of WSSecurityKeystore.\nWSSecurityKeystorePassword - The password for WSSecurityKeystore.\ncontentType - Value to be used in the Content-Type http header\nusername - The username to use for authenticating with the web service\npassword - The password to use for authenticating with the web service\ntrustAllRoots - Enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it. valid options are\: true/false.\nuseCookies - Enables cookie tracking. Cookies will be stored between consecutive calls. valid options are\: true/false.\ntimeout - a timeout after which the connection should be terminated, or 0 for no timeout.\nproxy - A proxy to use when accessing the web service.\nproxyPort - A port on the proxy to connect to.\nproxyUsername - A username to use when connecting to the proxy.\nproxyPassword - A password to use when connecting to the proxy.\nkeystore - the path to the keystore to use for SSL Client Certificates when using http authentication\nkeystorePassword - the password for the keystore when using http authentication\nICONCLUDE_WSW_VERSION - This value is used internally by the operation\n\nAny additional inputs that follow these are added by the Web Service Wizard, and they are specific to the particular web service method being called.\n\nResponses\:\nsuccess - SOAP request completed successfully.\nfailure - something went wrong.\n\nReturns\:\ndocument - raw XML response\ndocumentStripped - raw XML response stripped of namespaces for ease in parsing with XML XPath operations\n\nNotes\:\nIf you add new step-level inputs with the name header_<headername>, where <headername> is the name of an html header, then that html header will be set to the given value in the HTTP request.\n\n</pre>
da61ee53-c72f-4f99-85b3-b41873fa25ea.description=<pre>This subflow was created by the Web Services Wizard to invoke the efficientip_macro_delete_ip_php operation on file\:/C\:/CSA_INSTALLATION/wsdl_eip_full.wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nauth_login - The input named efficientip_macro_delete_ip_php|input|auth_login of the complex type\: efficientip_macro_delete_ip_php|input\nauth_password - The input named efficientip_macro_delete_ip_php|input|auth_password of the complex type\: efficientip_macro_delete_ip_php|input\nip_address - The input named efficientip_macro_delete_ip_php|input|ip_address of the complex type\: efficientip_macro_delete_ip_php|input\nvlanglobalid - The input named efficientip_macro_delete_ip_php|input|vlanglobalid of the complex type\: efficientip_macro_delete_ip_php|input\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\noutput - The output given by the XPath\: /Envelope/Body/efficientip_macro_delete_ip_phpResponse/output</pre>
db1d3793-c184-4ce2-8fbe-6994c21c0d3b.description=AD controller for join/unjoin domain
db3a24ca-41a4-4983-89c6-07101bbbe36c.037f4ab4-d76c-4329-9023-8bb1a6007740.description=Generic flow to send an e-mail
db3a24ca-41a4-4983-89c6-07101bbbe36c.751c0c71-a932-4718-b263-78e2a6463129.description=Generic flow to send an e-mail
db3a24ca-41a4-4983-89c6-07101bbbe36c.7e8cbdfd-ac1e-4843-aacb-fae6009443be.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
db3a24ca-41a4-4983-89c6-07101bbbe36c.a795ca35-ab1b-4af0-943b-efe4c2ea39b5.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
db3a24ca-41a4-4983-89c6-07101bbbe36c.c306be7d-c18a-4c3b-8e10-c3a516bfa587.description=Generic flow to send an e-mail
db3a24ca-41a4-4983-89c6-07101bbbe36c.f696e6e5-e6f8-4eaf-ae2f-76a5ecb8010f.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
dbe4b264-5eba-4b14-a37c-246b5315c31e.description=hostname / IP of the IPAM server
dbe54248-60b6-437e-b045-a78811284cb0.07f03afc-64ea-44aa-9efb-bef1d1d8e842.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
dcef6ce2-2b04-4f5a-b751-cfe831c97c7f.description=The name of the SA audit task for Windows servers that will be used for audit compliance and remediation in CSA.
dd0795ea-f9d3-41c7-884f-cae7e1f0ba45.0a041b1e-1538-4ce5-8e62-d2ad92d74118.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
dd0795ea-f9d3-41c7-884f-cae7e1f0ba45.116bdb14-7f0f-46a2-887a-5e936976ee80.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
dd0795ea-f9d3-41c7-884f-cae7e1f0ba45.2125e8f4-93c3-4545-a498-7b92dbb71f23.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
dd0795ea-f9d3-41c7-884f-cae7e1f0ba45.2458bb48-d7f8-49c5-bd5f-9d9abebc336d.description=Generic flow to send an e-mail
dd0795ea-f9d3-41c7-884f-cae7e1f0ba45.3881e203-c477-4786-a934-ba9c251e6afa.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
dd0795ea-f9d3-41c7-884f-cae7e1f0ba45.3e2ec692-c682-4361-a80d-465f5a05c899.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
dd0795ea-f9d3-41c7-884f-cae7e1f0ba45.40cb16fa-36f7-42f4-8361-f33147369ceb.description=Generic flow to send an e-mail
dd0795ea-f9d3-41c7-884f-cae7e1f0ba45.5aae41f1-e66b-484b-938e-3cc95374c5cf.description=Generic flow to send an e-mail
dd0795ea-f9d3-41c7-884f-cae7e1f0ba45.60ccf669-b986-4b9a-8563-60d0a5e802c2.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
dd0795ea-f9d3-41c7-884f-cae7e1f0ba45.69dcfcf7-f5a1-4d24-8abe-099f152bfff7.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
dd0795ea-f9d3-41c7-884f-cae7e1f0ba45.6eec9795-1e14-4679-9b6f-3466e18cfe7e.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
dd0795ea-f9d3-41c7-884f-cae7e1f0ba45.b5dc1ea1-2e8e-497c-943c-faca32cb6ebe.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
dd0795ea-f9d3-41c7-884f-cae7e1f0ba45.bad2de79-2573-41ba-b338-0b4c589484c5.description=The flow outputs the ESL Virtual Technology field required by ESL.\nThe field can be one of the following\:\n   - Physical servers -  "Logical Server"\n   - vCenter Servers - "VMWare"\n   - HyperV Servers - "Hyper-V"\n\nInput Parameters\:\n   serverResourcePool - The Resource Pool in which the server is being provisioned.l\n   serverType - The type of server, either V for virtual or P for Physical\n\nResponses\:\n   success - the Virtual Technology Field was populated\n   failure - otherwise\n\nResult Fields\:\n   eslVirtualTech - The string representing the virtual technology
dd0795ea-f9d3-41c7-884f-cae7e1f0ba45.cb43218f-75df-4ae3-abc3-487409d91a13.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
dd0795ea-f9d3-41c7-884f-cae7e1f0ba45.d1fd842b-e3f4-4e75-8d75-63412037c52e.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
dd0795ea-f9d3-41c7-884f-cae7e1f0ba45.d9db8206-3f42-4e12-8320-e00b26052ded.description=Generic flow to send an e-mail
dd0795ea-f9d3-41c7-884f-cae7e1f0ba45.description=This flow when provided an InfrastructureService id, will deploy IO based service. It will update the provided Infrastructure Service with Server Groups followed by Servers present in a Server Group.\n\nInput Parameters\:\n   id\: Infrastructure Service id.\n\nResponses\:\n   success - if the IO deploy operation is successful.\n   failure - otherwise\n\nResult Fields\:
dd0795ea-f9d3-41c7-884f-cae7e1f0ba45.dfa20e60-a104-4d63-be06-6a6f1812cdec.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
dd0795ea-f9d3-41c7-884f-cae7e1f0ba45.e3f476b3-bfa3-47b0-8f12-cc632cbefd50.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
dd0795ea-f9d3-41c7-884f-cae7e1f0ba45.e79e71eb-f0dd-4918-a3af-75e7e5616d3e.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
dd0795ea-f9d3-41c7-884f-cae7e1f0ba45.f043d47b-0d8a-48f6-97bc-76fbb6323f5f.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
dd661254-a98a-4f3e-9a7c-6c72962a5f52.58e6b936-82c8-43b3-9e5c-d170b2a3b3d5.description=<pre>This operation reads all contents of a file into the Result variable.\n\nInput Parameters\:\nfilename \t- The name of the file to read.\ncharacterSet - Character set encoding of the file. Defaults to UTF-8.\n\nResult\:\nContents of the file.\n\nResponses\:\nsuccess\t - Successfully read the file.\nfailure\t - Could not read the file.\n</pre>
dd661254-a98a-4f3e-9a7c-6c72962a5f52.666fd84a-9c51-4dbc-952b-83569a293536.description=<pre>Checks to see if a path is an existing file or folder.\n\nInputs\:\nSource - The full path path to check. This can be either a local path such as c\:\\test.txt, or a unc path such as \\\\testhost\\test.txt. This path is relative to the Windows RAS host that the operation is running on.\nuser - Username to use for thread impersonation on the RAS host when reading.\npassword - Password for username.\n\nResponses\:\nfailure - The operation failed. The path does not exist.\nsuccess - The operation succeeded.\n</pre>\n
dd661254-a98a-4f3e-9a7c-6c72962a5f52.a1f5f25e-86d9-422e-8f61-ec48ba9ea36f.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
dd9d2191-a1bb-4f2a-b64a-1bc6c567be66.1c800290-df26-47a2-9d69-64cc741b30d7.description=<pre>Create a snapshot of an existing virtual machine disks and optionally the virtual machine memory if it is running. \n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation (true, false).\nvirtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\nvmIdentifierType - Virtual machine identifier type (inventorypath, name, ip, hostname, uuid, vmid).\nasync - Asynchronously perform the task (true, false).\ntaskTimeOut - Time to wait before the operation is considered to have failed (seconds).\nsnapshotName - Name of snapshot.\ndescription - Description / annotation of the snapshot.\nsnapshotMem - Snapshot virtual machine memory as well if virtual machine is running? Valid inputs\: true, false (default is true).\nquiesce - Quiesce guest filesystem if vmware tools is install on guest os and virtual machine is running? Valid inputs\: true, false (default is true).\n\nResponses\:\nsuccess - If async is true the task was successfuly queued.  If async is false the snapshot of the virtual machine was successfuly created.\nfailure - Something went wrong.  See returnResult for details.\n\nReturns\:\nreturnResult - Task ID or task completion return message.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
dd9d2191-a1bb-4f2a-b64a-1bc6c567be66.6539283c-0a69-45cd-a8d6-72a8b6096f75.description=<pre>Delete an existing snapshot of a virtual machine or all snapshots of a virtual machine.\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation (true, false).\nvirtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of vm, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\nvmIdentifierType - Virtual machine identifier type (inventorypath, name, ip, hostname, uuid, vmid).\nasync - Asynchronously perform the task (true, false).\ntaskTimeOut - Time to wait before the operation is considered to have failed in seconds (used when async is false).\nsnapshotName - Name of snapshot if not removing all snapshots.\nremoveChildren - Remove children of snapshot in addition to the named snapshot?\nremoveAllSnapshots - Remove all snapshots?\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n\nReturns\:\nreturnResult - Task ID or task completion return message.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
dd9d2191-a1bb-4f2a-b64a-1bc6c567be66.description=To move the vCenter specific addSnapshot logic to vCenter folder.
ddabb622-8c32-4cd0-ab8d-e68d73b23bcf.06fe02cb-5651-4623-a27a-b06039c88e6c.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
ddabb622-8c32-4cd0-ab8d-e68d73b23bcf.6ddf1708-d2d5-4103-a4ff-aa64f3073e92.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
ddabb622-8c32-4cd0-ab8d-e68d73b23bcf.7c16ba9c-1093-461d-aa77-b94d944c0f5d.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
ddabb622-8c32-4cd0-ab8d-e68d73b23bcf.b949ffc7-8d02-496e-a3b2-32743f2187de.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
de60f0a6-9b31-440f-972c-1c317fa03af2.description=pc.vcenter.diskMode
e0dabdd7-099a-4a0d-ac00-d20ae530c658.050d0830-dc1b-4e00-8903-b19eb5cfbe10.prompt=Input command(s)\:
e0dabdd7-099a-4a0d-ac00-d20ae530c658.52fe5317-ef75-49d4-8dc0-55b4effc839f.description=Runs Service Center Virtual Machine Manager (SCVMM) Cmdlets using Windows PowerShell. The complete syntax and descriptions of all cmdlets that can be used with this operation can be found at http\://www.microsoft.com/download/en/details.aspx?displaylang\=en&id\=20419. The operation creates a remote powershell session to the target host, loads the "Microsoft.SystemCenter.VirtualMachineManager" snap-in and executes the given command(s). \n\nInputs\:\n    host - The hostname or ip address of the SCVMM server.\n    username - The username to use when connecting to the server.\nValue format\: username@domain or domain\\username.\n    password - The password to use when connecting to the server.\n    authType - Specifies the mechanism that is used to authenticate the user's credentials. \nValid values\: Default, Negotiate, Credssp, Kerberos. (case-insensitive)\nDefault value\: Default.\n    commands - The PowerShell cmdlets to execute. For more that one command, you should write each one on a separate row and they will be executed sequentially. \nExample\: get-vmmserver -computerName "1.2.3.4"\n                get-virtualharddisk -all\n    delimiter - The delimiter used to separate each property name from the property value in the output table. \nDefault value\: "\:".\n    colDelimiter - The delimiter used to separate columns in the output table.\nDefault value\: ','\n    rowDelimiter - The delimiter used to separate rows in the output table. \nDefault value\: newline\n    version - The SCVMM Server version.\nDefault value\: 2008 R2\n\nResults\:\n    outputString - A string representation of the results returned by the operation. Essentially any command returns a PowerShell object which has properties, as you can observe from the returnResult. OutputString result converts each object to string and merges all the values into one string. If you want outputString to contain results similar to PowerShell console you should pipe Out-String at the end of the cmdlet  (e.g. Get-VirtualHardDisk -al l Format-List Location, Directory, Name, ID, HostName | Out-String). Doing this will determine returnResult to be something like Length\:xx, because the object is now of type String and Lenth is the only property of this type. This result can be useful in other situations where the PowerShell objects override ToString() method. Therefore, the outputString obtained running PowerShell command Get-Process (without Out-String pipe), will contain the names of the processes running on server.\n    returnResult - A table containing a row for each PSObject that the cmdlets emit. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format.\n    warnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\n\nResponses\:\nsuccess \t- The cmdlets were executed successfully.\nfailure \t- The cmdlets could not be executed.\n\nNotes\:\n1. Installation of Powershell 2.0 with winrm 2.0 on your client is required. The kit can be downloaded from here\: http\://support.microsoft.com/kb/968930.\n2. Before using this operation, please make sure you have enabled PowerShell remoting, by using the Enable-PSRemoting cmdlet.\n3. Windows Remote Management service must be running.\n4. In workgroup environments, enabling classic mode authentication for network logons may be needed. This can be performed by opening the "Local Security Policy" from Control Panel and selecting "Administrative Tools". Navigate to "Local Policies" -> "Security Options", double click on "Network Access\: Sharing and Security Model for local accounts" and set it to classic.\n5. Also, please modify the WSMan trusted hosts setting, by adding the IP addresses of all remoting clients to the list of trusted hosts. This can be done using one of the following commands\:\n        5.1. Set-item wsman\:localhost\\client\\trustedhosts -value * (adds all computers as trusted hosts)\n        5.2. Set-item wsman\:localhost\\client\\trustedhosts -value Computer (only adds Computer to the trusted hosts)\n        5.3. Set-item wsman\:localhost\\client\\trustedhosts -value *.domain.com (adds all computers in the specified domain)\n        5.4. Set-item wsman\:localhost\\client\\trustedhosts -value 10.10.10.1 (adds the remote computer with the IP address 10.10.10.1 to the trusted hosts list)\n6. Please read the folder's description for information on how to enable CredSSP authentication.\n</pre>
e0dabdd7-099a-4a0d-ac00-d20ae530c658.6282a094-4142-493c-8c8b-79765f849102.description=<pre>Adds a flow variable into the local context (available to itself and child flows only)\n\nInput Parameters\:\nkeyName - the name of the flow variable to use\nmyValue - the value to assign the flow variable\n\nResponses\:\nsuccess - assigned the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, $myValue];</pre>
e0dabdd7-099a-4a0d-ac00-d20ae530c658.description=This flow will first REMOVE existing snapshots and then add a new snapshot.
e19bf30f-1207-4947-a94c-08a30d3d1772.description=Standart Windows Account (On Templates)
e2049f85-4cbf-4542-bf2c-92823aff241f.53d41979-94b8-4e58-85bb-af77cd41bf83.description=<pre>Counts from one number to another number.\n\nInputs\:\nfrom - The number to start counting at\nto - The number to count to\nincrementBy - The amount to increment by during each count.\nreset - If set to true, then the counter will restart counting from the beginning.\n\nResponses\:\nhas more - Not yet done counting.\nfailure - Something went wrong.\nno more - Done counting. This will only be returned once, then counting restarts.\n\nReturns\:\nThe number that was just counted.</pre>
e2049f85-4cbf-4542-bf2c-92823aff241f.7c8b7bcc-58a1-4aa7-83f8-359e9b7c8e3a.description=Waits for the job to reach a specific state. If no state is specified, then this will wait for the job to reach an end state.\n\nInputs\:\ncoreHost - The DNS name or IP Address of your SAS core.\ncorePort - The port to Connect to your SAS core on.\ncoreProtocol - The protocol to connect to your SAS core with. Either HTTP or HTTPS.\ncoreUsername - The username for host.\ncorePassword - The password for host.\njobID - the id of the job\nstatus - The status to wait for the job to reach. If none is specified this will wait until the job is no longer running.\ntimeout - The maximum number of milliseconds to wait for the job. If not specified, 1 hour is used.\n\nResponses\:\nfailure - Something went wrong.\nsuccess - The operation completed successfully.
e2049f85-4cbf-4542-bf2c-92823aff241f.8b59c5b8-73d8-489b-a122-40e6c2e86671.description=Starts the invocation of an unsaved script, being given its code, type, arguments and the details of the managed servers on which is should be run.\n\nInputs\:\ncoreHost - The DNS name or IP Address of your SAS core.\ncorePort - The port to connect to your SAS core on.\ncoreProtocol - The protocol to connect to your SAS core with. Either HTTP or HTTPS.\ncoreUsername - The username for host.\ncorePassword - The password for host.\ncoreVersion - The version of SAS to use.\nsourceCode - The source code of the script to invoke.\nsourceCodeType - The type of the source code. It can have one of the following values\: SH (for unix scripts), BAT (for windows BAT scripts), VBS (for Windows Visual Basic scripts), PS1 (for Windows PowerShell scripts), PY2 (for Python scripts).\nscriptArguments - The arguments to be passed to the script.\nserverNames - The list of names of the managed server on which the script should be executed. The elements from the list should be separated by 'separator'.\nserverIds - The list of ids of the managed server on which the script should be executed. If this input is provided, then 'serverNames' is ignored. The ids should be used for unique server identification. The elements from the list should be separated by 'separator'.\nloginDomain - The Windows domain name for the managed server (if it is the case).\nusername - The username that should be used when executing the script on the associated servers.\npassword - The password that should be used when executing the script on the associated servers.\ntimeout - The maximum number of milliseconds to wait for the job. If not specified, the default value is set to 0.\nseparator - The separator used for separating the inputs. The default value for the separator is a comma (,).\nnotificationFailureOwner - The email address of the owner of the job when the job failed.\nnotificationSuccessOwner - The email address of the owner of the job when the job succeeded.\nnotificationCancelOwner - The email address of the owner of the job when the job was canceled.\nnotificationFailureRecipients - The email addresses to notify when the job failed.\nnotificationSuccessRecipients - The email addresses to notify when the job succeeded.\nnotificationCancelRecipients - The email addresses to notify when the job was canceled.\nscheduleDateYear - The year to be used for setting the date when the job is scheduled to start. This input must be provided for setting a job schedule.\nscheduleDateMonth - The month to be used for setting the date when the job is scheduled to start. It should have the value between 1 and 12. This input must be provided for setting a job schedule.\nscheduleDateDayOfMonth - The day to be used for setting the date when the job is scheduled to start. It should have the value between 1 and 31. This input must be provided for setting a job schedule.\nscheduleDateHour - The hour to be used for setting the date when the job is scheduled to start. It should have the value between 0 and 23. If not set, if will have the default value 0.\nscheduleDateMinute - The minute to be used for setting the date when the job is scheduled to start. It should have the value between 0 and 59. If not set, if will have the default value 0.\nscheduleDateSecond - The second to be used for setting the date when the job is scheduled to start. It should have the value between 0 and 59. If not set, if will have the default value 0.\nscheduleDateTimezone - The timezone used to express the job schedule date. If not set, it will have the default value GMT.\n\nOutputs\:\njobId - The id of the job that was created.\n\nResponses\:\nsuccess - The operation has completed successfully.\nfailure - The operation has failed.
e2049f85-4cbf-4542-bf2c-92823aff241f.91c7887b-3656-4ae8-b4d5-4c8e6d9bddfb.description=<pre>Sleeps for "X" seconds.\n\nInputs\:\nseconds - The number of seconds to sleep.\n\nResponses\:\nsuccess - Slept for "X" seconds.\nfailure - was unable to sleep for some reason</pre>
e2049f85-4cbf-4542-bf2c-92823aff241f.a82605cc-7b3b-484a-9dba-ab5373d704c9.description=<pre>Checks if a number or word is equal to another number or word. Word comparison is case-sensitive in alphabetical order.\n\nInputs\:\nvalue1 - the first value.\nvalue2 - the second value.\n\nReturns\:\nvalue1 \=\= value2\n\nResponses\:\nsuccess - The boolean operation was evaluated to true.\nfailure - Something went wrong or the boolean operation returned false.\n</pre>
e2049f85-4cbf-4542-bf2c-92823aff241f.b54ab81f-ca19-4962-9cfb-e93a776c03de.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
e2049f85-4cbf-4542-bf2c-92823aff241f.description=Inputs\:\nscript.code\t- The source code of the script to invoke.\nscript.type\t- The type of the source code. It can have one of the following values\: SH (for unix scripts), BAT (for windows BAT scripts), VBS (for Windows Visual Basic scripts), PS1 (for Windows PowerShell scripts), PY2 (for Python scripts).\nscript.args\t- The arguments to be passed to the script.\nserver.name\ttrue\t- The list of names of the managed server on which the script should be executed. The elements from the list should be separated by ','.
e2490114-96f8-4253-9b59-8b7d514a9182.22832777-b9db-440f-ae56-587f83e84349.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
e2490114-96f8-4253-9b59-8b7d514a9182.7878de13-0046-4d02-9d25-015a36a814b1.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
e2490114-96f8-4253-9b59-8b7d514a9182.d9b46c89-4b82-40b0-9c2a-e28131931bee.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
e329e4ac-95e7-441d-a978-75728bd60bcd.14f65dfe-811e-4ba9-8966-0b3c4e36ca97.description=<pre>Performs a mathematical operation on two numbers or strings\n\nInputs\:\nvalue1 - The first value.\nvalue2 - The second value.\noperation - The operation to perform (+ - * ^ / > < \=\= \!\= >\= <\=).\n\nResponses\:\nsuccess -  The operation completed successfully. If a boolean operation, it evaluated to true.\nfailure - Something went wrong or the boolean operation returned false.\n\nReturns\:\nThe raw result of the operation, for boolean values this is true or false.\n\nReturns\:\nField 1 - The first value. Here for compatibility\nField 2 - The second value. Here for compatibility\nField 3 - The operation. Here for compatibility\nformatted_result - The formatted result of the operation, for boolean values this is true or false.</pre>
e329e4ac-95e7-441d-a978-75728bd60bcd.32af95be-e438-4539-85f1-877441b7848a.description=<pre>Runs a SQL query against an Oracle database, using the information available in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation.\nSubsequent calls with the same information will return the other rows.\n\nInputs\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name).\nTNSEntry - The entry name from the tnsnames.ora file which contains the connecting information.\nUsername - The username used for connecting to the database.\nPassword - The password used for connecting to the database.\nCommand - The command to execute.\nDelimiter - Delimiter to use between columns in returnResult.\nKey - Key to help keep multiple query results distinct.\n\nResponses\:\nmore items - More rows are available for retrieval.\nno more items - No more rows are available.\nfailure - There was an error executing the command.\n\nExtra Results\:\ncolumnNames - The names of all the columns returned, separated by Delimiter.\nrowsLeft - The number of rows remaining that match the query.\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should be correctly configured on the RAS machine.\n\nORACLE NOTE\:\nOnly the "SELECT" statement can be executed using this operation. For statements that modify the database, use "TNS Names SQL Command".\n</pre>
e329e4ac-95e7-441d-a978-75728bd60bcd.bd48d0ae-3004-45d6-a160-54dfb25b27f0.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
e329e4ac-95e7-441d-a978-75728bd60bcd.c2f8b66f-e6dd-4a95-b117-9576ebca871c.prompt=Enter a value for value2
e329e4ac-95e7-441d-a978-75728bd60bcd.d1e6a641-7e2d-4adb-a3e3-792f980b729e.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
e329e4ac-95e7-441d-a978-75728bd60bcd.e60e7e5a-bd21-4a5d-b524-5223d370a9ac.prompt=Enter a value for value1
e329e4ac-95e7-441d-a978-75728bd60bcd.e9cc9faa-6525-45b5-88a3-76b6d1d91bbf.description=<pre>Resolves any flow variables in a String. This is useful if you have an input to a flow that references undefined flow variables, and define them later. Pass in the flow variable key name of the string that contains unresolved flow variables.\n\nInputs\:\nkeyName - The name of the flow variable that should have its value reresolved.\neraseUnresolved - A boolean value. If true, any unresolved flow variable references will be replaced by nothing (IE ${variable} disappears).\n\nResponses\:\nsuccess - One or more flow variables were replaced, or could not be resolved and were erased from the string.\nfailure - No flow variables were referenced in the string.\n\nReturns\:\nThe resulting string having had flow variable references replaced with the resolved values.</pre>
e36400a8-127c-452c-b2d6-cfa69b2be5dc.34075a4c-7b0f-4030-bdfb-b36ca2a3f880.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
e43f53b0-0025-4984-a52f-acb449ed3b57.0d01ec06-4896-417e-836d-01a422237f72.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
e43f53b0-0025-4984-a52f-acb449ed3b57.2ec9c1f4-2896-4ff8-9916-46a018287887.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
e43f53b0-0025-4984-a52f-acb449ed3b57.40c422c8-5a1a-4075-ac5a-2c945d7da22d.description=<pre>\nIf the input dateFormat is not specified, it converts a date in the format of date/time of OO Central Server's, which is dependant on the Java locale, to a date either in the format of date/time of OO Central Server's or in the format specified in the input outFormat. \n\nIf the input dateFormat is specified, it converts a date in the format in dateFormat to a date either in the format of date/time of OO Central Server's or in the format specified in the input outFormat.\n\nYou can use flow "Get Current Date and Time" to check upon the default date/time format.  \n\nFor exmaple, if OO Central Server's locale is English, the input dateFormat is empty and the input outFormat is empty, the input date should be in the format of "July 13, 2006 10\:04\:08 AM". If the user specifies dateFormat as "dd-MM-YYYY HH\:mm\:ss", the input date should be in the format of "13-07-2006 10\:04\:08". If the input outFormat is empty, the result will be "July 13, 2006 10\:04\:08 AM". If the input outFormat is "yyyy-MM-dd", the result will be "2006-07-13". The dateFormat for "July 13, 2006 10\:04\:078 AM" is "MMM dd, yyyy HH\:mm\:ss a". \n\n\nSpecify the date format with the following patterns\:\n\nLetter \tDate or Time Component \tPresentation \tExamples\nG \tEra designator \tText \t                     AD\ny \tYear \t                     Year \t                     1996; 96\nM \tMonth in year \tMonth \t                     July; Jul; 07\nw \tWeek in year \tNumber \t                     27\nW \tWeek in month \tNumber \t                     2\nD \tDay in year \t                     Number \t                     189\nd \tDay in month \tNumber \t                     10\nF \tDay of week in month \tNumber \t                     2\nE \tDay in week   \tText \t                     Tuesday; Tue\na \tAm/pm marker \tText \t                     PM\nH \tHour in day (0-23) \tNumber \t                     0\nk \tHour in day (1-24) \tNumber \t                     24\nK \tHour in am/pm (0-11) \tNumber \t                     0\nh \tHour in am/pm (1-12) \tNumber \t                     12\nm \tMinute in hour \tNumber \t                     30\ns \tSecond in minute \tNumber \t                     55\nS \tMillisecond \t                     Number \t                     978\nz \tTime zone \t                     General time zone \tPacific Standard Time; PST; GMT-08\:00\nZ \tTime zone \t                     RFC 822 time zone \t-0800\n\nSo, for example\: the date "2006-07-10 15\:16\:14.766 PDT" would have the dateFormat "yyyy-MM-dd HH\:mm\:ss.SSS z".\n\nYou can also use single quotes (') to avoid text interpretation. The quoted text will simply be copied into the output string during formatting (if present in the outFormat) or matched against the input string during parsing (if present in the dateFormat). For example, the date value "2006-07-10T15\:16\:14.766Z" would have the dateFormat "yyyy-MM-dd'T'HH\:mm\:ss.SSS'Z'". \n\n\nInputs\:\ndate - The date to parse. If the input dateFormat is empty, the date must be in the format of date/time of OO Central Server's, which is dependant on the Java locale. If the input dateFormat is not empty, the date must be in the format specified in the input dateFormat.\ndateFormat - The format of the input date. \ndateLocaleLang - The locale language for input dateFormat string. For example,  en or ja.  It will be ignored if dateFormat is empty. \ndateLocaleCountry - The locale country for input dateFormat string. For example, US or JP.  It will be ignored if dateFormat is empty or dateLocaleLang is empty. \noutFormat - The format of the output date/time. If it is empty, the output date/time will be in the format of date/time of OO Cental Server's, which is dependant on the Java locale.\noutLocaleLang - The locale language for output string. For example,  en or ja. It will be ignored if outFormat is empty. \noutLocaleCountry - The locale country for output string. For example, US or JP. It will be ignored if outFormat is empty or outLocaleLang is empty.\n\nResponses\:\nsuccess - The date was converted.\nfailure - The date could not be converted.\n\nResult\:\nThe date in the new format.\nThe date in the new format.\n</pre>
e43f53b0-0025-4984-a52f-acb449ed3b57.492128d3-48e2-4f57-a16c-8ea7f570ca56.description=Generic flow to send an e-mail
e43f53b0-0025-4984-a52f-acb449ed3b57.7084743d-29ab-4d56-8fc1-5bc932cd4160.description=<pre>This subflow was created by the Web Services Wizard to invoke the powerOffService operation on https\://tufnellpark\:51443/hpio/controller/soap/v2?wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nserviceName - The input named powerOffService|serviceName of the complex type\: powerOffService\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\nrequestId - The output given by the XPath\: /Envelope/Body/powerOffServiceResponse/requestId/text()</pre>
e43f53b0-0025-4984-a52f-acb449ed3b57.75315d53-c84e-4c15-99d9-3bb70ac9c1fb.description=\nThe PowerOff should be a guest shutdown + power off, or there might be damage to the guest OS if power off abruptly.\n
e43f53b0-0025-4984-a52f-acb449ed3b57.8166988d-93be-424f-b1c3-c278286b771f.description=Generic flow to send an e-mail
e43f53b0-0025-4984-a52f-acb449ed3b57.8d3823dc-7932-4ec5-b5ce-f9333b764aa3.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
e43f53b0-0025-4984-a52f-acb449ed3b57.a06719c9-fcb8-4cdf-aea4-d578ec50abdc.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
e43f53b0-0025-4984-a52f-acb449ed3b57.a988fabe-7aa1-4d3a-b25c-15222aa6243d.description=<pre>Performs a mathematical operation on two numbers or strings\n\nInputs\:\nvalue1 - The first value.\nvalue2 - The second value.\noperation - The operation to perform (+ - * ^ / > < \=\= \!\= >\= <\=).\n\nResponses\:\nsuccess -  The operation completed successfully. If a boolean operation, it evaluated to true.\nfailure - Something went wrong or the boolean operation returned false.\n\nReturns\:\nThe raw result of the operation, for boolean values this is true or false.\n\nReturns\:\nField 1 - The first value. Here for compatibility\nField 2 - The second value. Here for compatibility\nField 3 - The operation. Here for compatibility\nformatted_result - The formatted result of the operation, for boolean values this is true or false.</pre>
e43f53b0-0025-4984-a52f-acb449ed3b57.ac2e76db-466f-4430-80bc-447bdd72bca3.description=Generic flow to send an e-mail
e43f53b0-0025-4984-a52f-acb449ed3b57.ad291672-60dd-4351-9ee6-a7fc0a7cf309.description=Generic flow to send an e-mail
e43f53b0-0025-4984-a52f-acb449ed3b57.bb9222ef-d2b9-47dc-9a6e-2d29a058b20d.description=Generic flow to send an e-mail
e43f53b0-0025-4984-a52f-acb449ed3b57.c52f5c03-641e-4c53-928c-24bd863036d0.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
e43f53b0-0025-4984-a52f-acb449ed3b57.c97b2013-934b-47ec-a180-85a238b6e4c5.description=<pre>\nChanges the time represented by a date by the specified number of seconds. If locale is specified, it will return the date and time string based on the locale. Otherwise, default locale will be used.\n\nInputs\:\ndate - The date and time to modify, formatted as provided by Get Current Date and Time.\noffset - The number of seconds to change date by.\nlocaleLang - The locale language for date and time string. For example,  en or ja.\nlocaleCountry - The locale country for date and time string. For example, US or JP. If localeLang is not specified, this input will be ingored.\n\nreturns\:\nA new date and time, formatted the same as the input.\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n</pre>
e43f53b0-0025-4984-a52f-acb449ed3b57.e81a9473-b672-4146-8086-339b8679e535.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
e43f53b0-0025-4984-a52f-acb449ed3b57.e8c8108c-3a7c-46c8-a572-ad17ae670e0c.description=<pre>Sends an smtp email\n \nInput Parameters\:\nhostname - hostname or ip address of smtp server\nport - port smtp service is listening\nfrom - from email address\nto - email address(s) or recipients\nsubject - email subject\nbody - body of the email\nhtmlEmail - true or false, whether the email should be sent supporting html rich email.\nreadReceipt - true or false, whether or not to request a read receipt\nattachments - comma separated list of files to attach (must be full path)\nusername - if SMTP authentication is needed, the username to send\npassword - the password to use\ncharacterSet - the character set encoding for the entire email which includes subject, body, attached file name and the attached file. Default value is UTF-8\ncontentTransferEncoding - the content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. Default value is - quoted-printable or Q Encoding.\n \n Responses\:\n success - successfully sent the email\n failure - failed to send the email\n\nNote\:\nFor special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n\tFor doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n</pre>
e43f53b0-0025-4984-a52f-acb449ed3b57.f3400dad-66a7-46fd-8054-1e9ab52f6bb8.description=<pre>\nCheck the current date and time, and returns a java DateAndTime formatted string of it. If locale is specified, it will return the date and time string based on the locale.Otherwise, default locale will be used.\n\nInputs\:\nlocaleLang - The locale language for date and time string. For example,  en or ja.\nlocaleCountry - The locale country for date and time string. For example, US or JP. If localeLang is not specified, this input will be ingored.\n\nResult\:\nCurrent date and time.\n\nResponses\:\nsuccess - Date/time retrieved successfully.\nfailure - Date/time could not be retrieved.\n</pre>
e43f53b0-0025-4984-a52f-acb449ed3b57.fa861dec-aa99-42b9-9d43-dbdb08e4b84f.description=<pre>Sends an smtp email\n \nInput Parameters\:\nhostname - hostname or ip address of smtp server\nport - port smtp service is listening\nfrom - from email address\nto - email address(s) or recipients\nsubject - email subject\nbody - body of the email\nhtmlEmail - true or false, whether the email should be sent supporting html rich email.\nreadReceipt - true or false, whether or not to request a read receipt\nattachments - comma separated list of files to attach (must be full path)\nusername - if SMTP authentication is needed, the username to send\npassword - the password to use\ncharacterSet - the character set encoding for the entire email which includes subject, body, attached file name and the attached file. Default value is UTF-8\ncontentTransferEncoding - the content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. Default value is - quoted-printable or Q Encoding.\n \n Responses\:\n success - successfully sent the email\n failure - failed to send the email\n\nNote\:\nFor special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n\tFor doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n</pre>
e43f53b0-0025-4984-a52f-acb449ed3b57.fe8a792f-9066-4762-91d3-23e4f127270d.description=<pre>Resolves any Context variables in a String. This is useful if you have an input to a flow that references undefined context variables, and define them later. Pass in the context key name of the string that contains unresolved context variables.\n\nInputs\:\nkeyName - The name of the context key that should have its value reresolved.\neraseUnresolved - A boolean value. If true, any unresolved context variable references will be replaced by nothing (IE ${variable} disappears).\n\nResponses\:\nsuccess - One or more context variables were replaced, or could not be resolved and were erased from the string.\nfailure - No context variables were referenced in the string.\n\nReturns\:\nThe resulting string having had context variable references replaced with the resolved values.</pre>
e6185428-0052-4349-a4cd-d723366d08cd.da6a55a1-a9f6-4ffc-99d7-f2796d312d8f.description=<pre>Delete an existing snapshot of a virtual machine or all snapshots of a virtual machine.\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation (true, false).\nvirtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of vm, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\nvmIdentifierType - Virtual machine identifier type (inventorypath, name, ip, hostname, uuid, vmid).\nasync - Asynchronously perform the task (true, false).\ntaskTimeOut - Time to wait before the operation is considered to have failed in seconds (used when async is false).\nsnapshotName - Name of snapshot if not removing all snapshots.\nremoveChildren - Remove children of snapshot in addition to the named snapshot?\nremoveAllSnapshots - Remove all snapshots?\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n\nReturns\:\nreturnResult - Task ID or task completion return message.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
e6185428-0052-4349-a4cd-d723366d08cd.db918c31-40ed-4443-bdaf-b5337c21682c.prompt=Select from vm platforms
e62642bf-eaec-44ed-891b-f3ae172e5ea7.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
e6f67645-34a2-473f-b90a-157324945b9a.0c240326-2461-479a-b334-905c725c7cc5.description=generates a random password consisting og lowercase letters, uppercase letter and number\n\nInputs\:\npasswordLength - specifies length of the password to be generated\n\nOutputs\:\ngeneratedPassword - the generated password string
e6f67645-34a2-473f-b90a-157324945b9a.163d3cef-aed8-4195-a532-bad0444cdf24.description=Generic flow to send an e-mail
e6f67645-34a2-473f-b90a-157324945b9a.36dec187-fd89-4b0f-b031-a9daff2548c9.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
e6f67645-34a2-473f-b90a-157324945b9a.4321951b-f663-4641-814d-cf6133f26f7d.description=<pre>This is an operation that does nothing, and can be used to display information to the user by editing the display tab. It can also be used for filtering flow variables by feeding them in as inputs, and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
e6f67645-34a2-473f-b90a-157324945b9a.7449bd92-bda5-4290-a4be-e04757cf50ef.description=Generic flow to send an e-mail
e6f67645-34a2-473f-b90a-157324945b9a.7d4aa593-94b9-41e9-829a-eef2bd50bc9a.description=<pre>Checks to see if a string matches a specific rule.\n\nInputs\:\nmatchType - The type of match to perform.\ntoMatch - The string to check if matches another string.\nmatchTo - The string to match against.\nignoreCase - Boolean value for whether or not to ignore case during match.\n\nResponses\:\nsuccess - The String matched.\nfailure - The string did not match, or something went wrong.</pre>
e6f67645-34a2-473f-b90a-157324945b9a.bb1f3f1c-1e35-4ad8-bb44-a69f8ce71492.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
e6f67645-34a2-473f-b90a-157324945b9a.d3f8716b-b59b-4a3d-9e59-571229fd79f8.description=Generic flow to send an e-mail
e6f67645-34a2-473f-b90a-157324945b9a.d481103a-ae98-4861-9578-a2ce30069a44.description=<pre>\nOffsets the current date and time by a given number of units. If locale is specified, the date and time will be in the format based on the locale. Otherwise, default locale will be used. \n\nInputs\:\nunits - The number of units to offset by. If this is positive, the offset goes into the future, if it is negative the offset goes into the past.\nsecondsPerUnit - The number of seconds per unit. This defaults to 1 hour, thus the units is by default measured in hours.\nlocaleLang - The locale language for date and time string. For example,  en or ja.\nlocaleCountry - The locale country for date and time string. For example, US or JP. If localeLang is not specified, this input will be ingored.\n\nReturns\:\nThe offset date/time. \n\nResponses\:\nsuccess - Operation completed successfully.\nfailure - Something went wrong.\n</pre>
e6f67645-34a2-473f-b90a-157324945b9a.d7597e0c-2cc8-4560-90b9-e333107bd165.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
e6f67645-34a2-473f-b90a-157324945b9a.da1bf6e8-54c7-4b8e-9ad6-01cb448b1021.description=Generic flow to send an e-mail
e6f67645-34a2-473f-b90a-157324945b9a.dceb49e8-0c41-44b9-8e8f-b415407d4159.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
e6f67645-34a2-473f-b90a-157324945b9a.e309f0de-d1b3-4f12-96e0-34f316b71abd.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
e6f67645-34a2-473f-b90a-157324945b9a.fb1cc166-86f4-4a97-86a5-ba29ca9773f8.description=<pre>Schedules a flow or updates an existing schedule of a flow. The operation can be used on OO version 9.03 and greater.  \n\nInputs\:\n    host - The host running Central 9.03 or greater.\nDefault value\: localhost.\n    username - The username to use when connecting to the Central service.\n    password - The password to use when connecting to the Central service.\n    port - The port the Central service is running on.\nDefault value\: 8443.\n    protocol - Either http or https. The protocol used to communicate to the Central service.\nDefault value\: https.\n    trustAllRoots - If true, enables weak security over SSL. A SSL certificate is trusted even if no trusted CA issued it.\nDefault value\: false.\n    trustKeystore - The path of the truststore file. It may be empty if HTTPS server authentication is not to be used. If not specified  the operation will search for{iconclude_home}/Central/conf/rc_keystore or {iconclude_home}/Studio/conf/rc_keystore in this order.\n    trustPassword - Password to unlock the truststore. Provide this input only if trustKeystore is not empty.\n    flow - The uuid or the path of the flow to run.\nExample\: /library/my ops flows/test\n    schedule - The uuid of the schedule to update.\n    names - A delimiter separated list of names of flow inputs.\n    values - A delimiter separated list of values of flow inputs.\n    delimiter - the delimiter separating lists of names and values.\n    description - a description of this schedule.\n    enabled - Set false to create the schedule disabled. This input is case insensitive.\nValid values\: true, false.\nDefault value\: true.\n    startTime - The time to start running the flow either as minutes from now or as a date. Use the utility operations from "Date and Time" folder to pass valid startTime value.\nExample\: Wed, 12 Dec 2012 12\:12\:12 GMT\nExample\: Wed, 12 Dec 2012 12\:12\:12 GMT+0430 (4 hours, 30 minutes west of the Greenwich meridian)\n    endTime - The time to end running the flow either as minutes from now or as a date. Use the utility operations from "Date and Time" folder to pass valid endTime value.\nExample\: Wed, 12 Dec 2012 12\:12\:12 GMT\nExample\: Wed, 12 Dec 2012 12\:12\:12 GMT+0430 (4 hours, 30 minutes west of the Greenwich meridian)\n    timesToRun - The number of times to re-run the flow schedule. If empty, the number of times to re-run the schedule will be computed as (endTime - startTime)/repeatInterval. If -1 the flow will be scheduled to run indefinitely, otherwise this input must have a positive value.\n    repeatInterval - Sets the time Interval in minutes between schedule triggering. If empty, the operation will set it to 1 minute.\n\nReturns\:\n    returnResult - Primary output. The uuid of the schedule.\n    flowUuid - The uuid of the flow. This can be useful if the flow input is the path of the flow.\n\nResponses\:\n    success -The schedule was created or updated.\n    failure - Could not connect to central web service. Invalid inputs. Invalid flow path. The schedule ends before it starts. The schedule ends in the past.\n\nNotes\:\n1. <flow> and <schedule> inputs are mutually exclusive.\n2. <timesToRun> and <endTime> inputs are mutually exclusive.\n</pre>
e72890d2-1810-49a0-9333-d1530286b4ae.4afe2582-4aaf-48cf-9aa0-8ca976a90805.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
e72890d2-1810-49a0-9333-d1530286b4ae.52d277ec-6b3d-4a3a-96b4-ae69bc16e003.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
e72890d2-1810-49a0-9333-d1530286b4ae.97796907-6d18-4b58-a51c-e5ade93cb625.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
e7c7d49c-5898-4c82-b709-073e89941f43.075ef78a-ffce-4c55-b726-1bebf0d0fb70.prompt=extendDiskSize
e7c7d49c-5898-4c82-b709-073e89941f43.0940f706-8e87-4482-a040-36e2efda8b32.prompt=addThinProvision
e7c7d49c-5898-4c82-b709-073e89941f43.168e00ce-3b1b-4cc8-acb4-d35956977b88.prompt=vmDatacenter
e7c7d49c-5898-4c82-b709-073e89941f43.21272556-1324-4c62-a9e1-e17d5aac571f.prompt=diskPath
e7c7d49c-5898-4c82-b709-073e89941f43.245ae0f0-2366-4836-8f35-329d41d32d27.prompt=port
e7c7d49c-5898-4c82-b709-073e89941f43.274f9da6-be61-4a72-9c2b-9dfb58cee2c0.description=<pre>Add a new virtual (SCSI) disk to an existing virtual machine.\n\nInputs\:\nhost - VMWare host hostname or IP.\nuser - VMWare username.\npassword - VMWare user's password.\nport - Port to connect on.\nprotocol - Connection protocol (http or https).\ncloseSession - Close the internally kept VMWare Infrastructure API session at completion of operation (true, false).\nasync - Asynchronously perform the task (true, false).\ntaskTimeOut - Time to wait before the operation is considered to have failed (seconds).\nvirtualMachine - Primary Virtual Machine identifier. Inventorypath (Datacenter/vm/Folder/MyVM), Name of VM, IP (IPv4 or IPv6 depending upon ESX version), hostname (full), UUID, or the VM id (vm-123,123).\nvmIdentifierType - Virtual machine identifier type (inventorypath, name, ip, hostname, uuid, vmid).\nvmDatacenter - Virtual machine's datacenter.\ndataStore - Datastore or datastore cluster (eg. host\:dsname, mydatastore).\nvmDiskSize - Size of the virtual disk to create in megabytes (MB).\ndiskPath - Path on datastore to use for backing the new virtual disk. Include .vmdk suffix and do NOT include leading / . This path must not already exist on the datastore.\ndiskMode - Disk persistence mode. Values for ESX 3 and later VMs\: persistent, independent_persistent, independent_nonpersistent. Valid values for pre ESX 3 VMs\: persistent, nonpersistent, undoable, append.\nthinProvision - Perform thin provisioning of the virtual disk (true, false).\ndiskWritethrough - Enable direct write to the file system (true, false).\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n\nReturns\:\nreturnResult - Task result or operation result.\n\nNotes\:\nInventory Path Formatting\: If host is an ESX server inventory path will be\: ha-datacenter/vm/<name of vm> .  If host is a vCenter the inventory path will be\: <name of datacenter>/vm/<folders>/<name of vm> . The <folders>/<name of vm> part of the path is based on the "Virtual Machines & Templates" view in the vCenter client. The inventory path is case sensitive.\n</pre>
e7c7d49c-5898-4c82-b709-073e89941f43.2afe624f-a74c-4b22-b2e7-cc708a25b348.prompt=vmIdentifierType
e7c7d49c-5898-4c82-b709-073e89941f43.2c5eb332-129c-44e0-9d0f-c836269c8a83.prompt=user
e7c7d49c-5898-4c82-b709-073e89941f43.2fd34087-71b7-45e1-94d7-12ccdad2a87d.prompt=taskTimeOut
e7c7d49c-5898-4c82-b709-073e89941f43.3103408c-e04a-4155-9684-8fdddddb2344.prompt=vmID
e7c7d49c-5898-4c82-b709-073e89941f43.339f3d3f-b676-4090-9a82-66b18c935ef5.prompt=closeSession
e7c7d49c-5898-4c82-b709-073e89941f43.36547489-0ef7-4904-9616-08546f1dffad.prompt=addDiskMode
e7c7d49c-5898-4c82-b709-073e89941f43.36dcc484-e09b-418e-845d-a256d853621d.prompt=protocol
e7c7d49c-5898-4c82-b709-073e89941f43.407dc612-1cd1-4583-9f11-ab3357659948.prompt=dataStore
e7c7d49c-5898-4c82-b709-073e89941f43.484414dd-6b5e-489f-9f20-bc1b6a7fa5d0.prompt=vmID
e7c7d49c-5898-4c82-b709-073e89941f43.539f0c9d-88bf-4735-bbec-0e303a01de2c.prompt=protocol
e7c7d49c-5898-4c82-b709-073e89941f43.584d8e81-a6f2-46d3-b859-ecce91315800.prompt=user
e7c7d49c-5898-4c82-b709-073e89941f43.5dd11ea6-a025-40ae-84ac-013684ae466e.prompt=vmIdentifierType
e7c7d49c-5898-4c82-b709-073e89941f43.6c751a9e-0007-4044-bc19-9e726712fb1b.prompt=host
e7c7d49c-5898-4c82-b709-073e89941f43.6ca57cf1-7f4e-4d19-907f-ba36c5ba9779.prompt=taskTimeOut
e7c7d49c-5898-4c82-b709-073e89941f43.79f4becb-00e9-4bb6-bbda-ca3b618a72a9.prompt=port
e7c7d49c-5898-4c82-b709-073e89941f43.7a84abad-1dfd-4373-94c9-b59fcd347572.prompt=vmDatacenter
e7c7d49c-5898-4c82-b709-073e89941f43.8809218e-048c-4934-815b-0c622b4faef3.prompt=taskTimeOut
e7c7d49c-5898-4c82-b709-073e89941f43.887ad917-8af2-4791-bb88-557d2543d847.prompt=password
e7c7d49c-5898-4c82-b709-073e89941f43.8a9556a2-6fdf-4d02-97ea-a215b3708589.prompt=async
e7c7d49c-5898-4c82-b709-073e89941f43.987348f6-f46b-4102-97bc-360a61735f47.prompt=closeSession
e7c7d49c-5898-4c82-b709-073e89941f43.a0e126f7-3a39-466e-8aa3-d81a481cfb7b.prompt=port
e7c7d49c-5898-4c82-b709-073e89941f43.a18c171c-4a13-46c8-a08d-481f3308540f.description=<pre>\nMultiplies two numbers\n\nInputs\:\nvalue1 - The first value.\nvalue2 - The second value.\n\nReturns\:\nThe product of the two numbers.\n\nResponses\:\nsuccess - The operation completed successfully.\nfailure - Something went wrong.\n</pre>
e7c7d49c-5898-4c82-b709-073e89941f43.a5c664ab-32a6-4e58-b320-6f1cc9fe40cb.prompt=async
e7c7d49c-5898-4c82-b709-073e89941f43.ab2494c5-97e6-479b-ac68-ac8d532687a4.prompt=password
e7c7d49c-5898-4c82-b709-073e89941f43.ad66b31d-ccd1-4515-81b4-29f2d93ca25b.prompt=host
e7c7d49c-5898-4c82-b709-073e89941f43.b2ec3ce5-38e0-4b91-ae0b-fce57b2fbf77.prompt=password
e7c7d49c-5898-4c82-b709-073e89941f43.b7aad754-1367-4c13-b14e-d3b54aa46cda.prompt=host
e7c7d49c-5898-4c82-b709-073e89941f43.b9b5a088-b792-4fc4-809a-9ab6f893694d.prompt=addDiskSize
e7c7d49c-5898-4c82-b709-073e89941f43.bb49fd2f-4250-4229-86d4-3507cf57b2b5.prompt=extendDiskSize
e7c7d49c-5898-4c82-b709-073e89941f43.bd7f6b8a-6ab7-4b71-b7b8-1ba36873473f.prompt=protocol
e7c7d49c-5898-4c82-b709-073e89941f43.c075551f-5963-4a60-a2ce-51aa1ed5ca41.prompt=vmIdentifierType
e7c7d49c-5898-4c82-b709-073e89941f43.d1d856fd-25fe-452f-bad9-ed62af2bda27.prompt=dataStore
e7c7d49c-5898-4c82-b709-073e89941f43.d61bccb0-7783-4291-aa3d-eea3c7ad6bad.description=<pre>Increases the size of a hard disk on a virtual machine.\n\nInputs\:\n    host - VMWare host hostname or IP.\n    user - VMWare username.\n    password - VMWare user's password.\n    port - Port to connect on.\nExamples\: 443, 80\n    protocol - Connection protocol.\nValid values\: "https", "http"\n    closeSession - Close the internally kept VMWare Infrastructure API session at completion of operation.\nValid values\: "true", "false"\n    async - Asynchronously perform the task.\nValid values\: "true", "false"\n    taskTimeOut - Time to wait before the operation is considered to have failed (seconds).\nDefault value\: 800\n    vmIdentifierType - Virtual machine identifier type\n    virtualMachine - Primary Virtual Machine identifier. IP (IPv4 or IPv6 depending upon ESX version), hostname (full), inventorypath (Datacenter/vm/MyResourcePool/MyVM), UUID, or the VM id (vm-123,123)\n    vmDatacenter - Virtual machine's datacenter\n    diskSize - The size of the disk for a virtual machine in GB. If it is less than the current disk size, the operation will complete succesfully, but the disk size will remain unmodified.\n    deviceNumber - The virtual disk number on the VM.  As an example\: "Hard disk 1" would be deviceNumber "1".\n\nResponses\:\n    success - The operation completed successfully.\n    failure - Something went wrong.\n\nReturns\:\n    returnResult - Task result or operation result. Reason for error on failure.
e7c7d49c-5898-4c82-b709-073e89941f43.db55652f-1a9f-4622-94df-daf54f868623.prompt=vmDatacenter
e7c7d49c-5898-4c82-b709-073e89941f43.e2d13519-0bd6-4360-9367-a7ca23c3802e.prompt=vmID
e7c7d49c-5898-4c82-b709-073e89941f43.ec0b019f-2cb3-4c86-a57d-3694f83b9950.prompt=closeSession
e7c7d49c-5898-4c82-b709-073e89941f43.f2db385f-de38-488d-90e7-585f92b4ad9d.prompt=user
e7c7d49c-5898-4c82-b709-073e89941f43.fa95da0f-c30a-42db-becb-a419585be0c9.prompt=async
e7c7d49c-5898-4c82-b709-073e89941f43.faa63143-f0f0-4b1c-a04a-521d3822bdbe.prompt=deviceNumber
e8b51d39-ef4e-4960-945e-e21729456150.description=this is a test account for the scvmm server for development and testing. please override it when deploying.
e8f54def-55f6-4e3a-a8b7-d87766ec0220.description=Filename where new hostnames need to be appended for monitoring
e98fd676-1e8e-437b-ae87-4d8616330f41.3a5ee54d-8319-4a75-830d-90c3d549952f.description=<pre>\nCheck the current date and time, and returns a java DateAndTime formatted string of it. If locale is specified, it will return the date and time string based on the locale.Otherwise, default locale will be used.\n\nInputs\:\nlocaleLang - The locale language for date and time string. For example,  en or ja.\nlocaleCountry - The locale country for date and time string. For example, US or JP. If localeLang is not specified, this input will be ingored.\n\nResult\:\nCurrent date and time.\n\nResponses\:\nsuccess - Date/time retrieved successfully.\nfailure - Date/time could not be retrieved.\n</pre>
e98fd676-1e8e-437b-ae87-4d8616330f41.48f8338b-60e7-4b4b-adda-2b435ccc8f31.description=<pre>\nIf the input dateFormat is not specified, it converts a date in the format of date/time of OO Central Server's, which is dependant on the Java locale, to a date either in the format of date/time of OO Central Server's or in the format specified in the input outFormat. \n\nIf the input dateFormat is specified, it converts a date in the format in dateFormat to a date either in the format of date/time of OO Central Server's or in the format specified in the input outFormat.\n\nYou can use flow "Get Current Date and Time" to check upon the default date/time format.  \n\nFor exmaple, if OO Central Server's locale is English, the input dateFormat is empty and the input outFormat is empty, the input date should be in the format of "July 13, 2006 10\:04\:08 AM". If the user specifies dateFormat as "dd-MM-YYYY HH\:mm\:ss", the input date should be in the format of "13-07-2006 10\:04\:08". If the input outFormat is empty, the result will be "July 13, 2006 10\:04\:08 AM". If the input outFormat is "yyyy-MM-dd", the result will be "2006-07-13". The dateFormat for "July 13, 2006 10\:04\:078 AM" is "MMM dd, yyyy HH\:mm\:ss a". \n\n\nSpecify the date format with the following patterns\:\n\nLetter \tDate or Time Component \tPresentation \tExamples\nG \tEra designator \tText \t                     AD\ny \tYear \t                     Year \t                     1996; 96\nM \tMonth in year \tMonth \t                     July; Jul; 07\nw \tWeek in year \tNumber \t                     27\nW \tWeek in month \tNumber \t                     2\nD \tDay in year \t                     Number \t                     189\nd \tDay in month \tNumber \t                     10\nF \tDay of week in month \tNumber \t                     2\nE \tDay in week   \tText \t                     Tuesday; Tue\na \tAm/pm marker \tText \t                     PM\nH \tHour in day (0-23) \tNumber \t                     0\nk \tHour in day (1-24) \tNumber \t                     24\nK \tHour in am/pm (0-11) \tNumber \t                     0\nh \tHour in am/pm (1-12) \tNumber \t                     12\nm \tMinute in hour \tNumber \t                     30\ns \tSecond in minute \tNumber \t                     55\nS \tMillisecond \t                     Number \t                     978\nz \tTime zone \t                     General time zone \tPacific Standard Time; PST; GMT-08\:00\nZ \tTime zone \t                     RFC 822 time zone \t-0800\n\nSo, for example\: the date "2006-07-10 15\:16\:14.766 PDT" would have the dateFormat "yyyy-MM-dd HH\:mm\:ss.SSS z".\n\nYou can also use single quotes (') to avoid text interpretation. The quoted text will simply be copied into the output string during formatting (if present in the outFormat) or matched against the input string during parsing (if present in the dateFormat). For example, the date value "2006-07-10T15\:16\:14.766Z" would have the dateFormat "yyyy-MM-dd'T'HH\:mm\:ss.SSS'Z'". \n\n\nInputs\:\ndate - The date to parse. If the input dateFormat is empty, the date must be in the format of date/time of OO Central Server's, which is dependant on the Java locale. If the input dateFormat is not empty, the date must be in the format specified in the input dateFormat.\ndateFormat - The format of the input date. \ndateLocaleLang - The locale language for input dateFormat string. For example,  en or ja.  It will be ignored if dateFormat is empty. \ndateLocaleCountry - The locale country for input dateFormat string. For example, US or JP.  It will be ignored if dateFormat is empty or dateLocaleLang is empty. \noutFormat - The format of the output date/time. If it is empty, the output date/time will be in the format of date/time of OO Cental Server's, which is dependant on the Java locale.\noutLocaleLang - The locale language for output string. For example,  en or ja. It will be ignored if outFormat is empty. \noutLocaleCountry - The locale country for output string. For example, US or JP. It will be ignored if outFormat is empty or outLocaleLang is empty.\n\nResponses\:\nsuccess - The date was converted.\nfailure - The date could not be converted.\n\nResult\:\nThe date in the new format.\nThe date in the new format.\n</pre>
e98fd676-1e8e-437b-ae87-4d8616330f41.7faecae8-6aa6-4cb5-989e-25623c1d898b.description=<pre>\nService to perform HTTP POST using the Java HTTP Client.\n\nInputs\:\n    url - The URL where to send the HTTP POST request.\n    username - The user name used for URL authentication. For NTLM authentication, the required format is 'domain\\user'.\n    password - The password used for URL authentication.\n    authType - The type of authentication used by this operation when trying to execute the request on the target server.\nValid values\: basic, form, springForm, digest, ntlm, kerberos, anonymous (no authentication).\nDefault value\: anonymous - authentication not used when executing the request.\n    kerberosConfFile - The  path to the Kerberos configuration file. If this input is empty, the <kdc> (Key Distribution Center) and <realm> get their values from the full domain name obtained from the web server URL.\n    timeout - The time to wait for a connection to be established, in  milliseconds. This input needs a value greater than or equal to zero. A <timeout> value of '0' represents an infinite timeout.\nDefault value\: 0\nuseCookies - Specifies whether to enable cookie tracking or not. Cookies are stored between consecutive calls. If you specify a non-Boolean value, the default value is used.\nValid values\: true, false\nDefault value\: true\n    proxy - The proxy server used to access the web site.\n    proxyPort - The proxy server port.\n    proxyusername - The user name used when connecting to the proxy server.\n    proxyPassword - The proxy server password associated with the <proxyUsername> input value.\n    encodeURL - Specifies whether to encode the URL. If you specify a non-Boolean value, the default value is used.\nValid values\: true, false\nDefault value\: false\n    file - The file to be posted by this operation using the HTTP POST method. This should be a path to a file/document on the disk.\n    string - The raw text to be posted by this operation using the HTTP POST method.\n    contentType - The content type that should be set in the request header, representing the MIME-type of the data in the message body.\nExamples\: "text/html", "text/html; charset\=UTF-8", "application/x-www-form-urlencoded".\n    characterSet - The character encoding of the text to be posted. If not specified this will be taken from the 'charset' field that can be specified in the <contentType> input. If the 'charset' field is absent, it will be set to 'ISO-8859-1' by default.\n    trustAllRoots - Specifies whether to enable weak security over SSL. A SSL certificate is trusted even if no trusted certification authority issued it.\nValid values\: true, false\nDefault value\: false\n    keystore - The location of the KeyStore file - a URL or the local path to it. This input is empty if no HTTPS client authentication is used.\nExample\: %JAVA_HOME%/jre/lib/security/cacerts\n    keystorePassword - The password associated with the KeyStore file.\n    trustKeystore - The location of the TrustStore file - a URL or the local path to it. This input is empty if no HTTPS server authentication is used.\nExample\: %JAVA_HOME%/jre/lib/security/cacerts\n    trustPassword - The password associated with the TrustStore file.\n    headerNamesList - The list containing the header names to use for the request.\nExample\: Accept,Content-Type\n    headerValuesList - The list containing the header values to use for the request. \nExample\: text/plain,application/x-www-form-urlencoded\n    queryNamesList - The list containing the names of the query parameters to use for the request. \nExample\: parameterName1,parameterName2 \n    queryValuesList - The list containing the values of the query parameters to use for the request. \nExample\: parameterValue1,parameterValue2\n    delimiter - The delimiter used to separates list elements.\nDefault value\: ','\n\nResults\: \n    returnCode - This is the primary output. A code used to determine the operation response, specifying whether the operation is successful or not.\n    resultText - The raw result of the operation.\n    document - The complete document returned by the Http Client Post Raw operation.\n    URL - The URL used for the HTTP request.\n    pageLoadTimeInMS - The number of milliseconds taken for the page to load.\n    responseTimeInMS - The number of milliseconds taken before the server responded.\n    errorMessage - An informational message that can help determine the cause of error, if an error occurred.\n    httpResult - The descrition of the HTTP response returned by the web server for the request sent by this operation. This result contains the HTTP response status (for example, SUCCESS, PAGE_NOT_FOUND, UNAUTHORIZED, FORBIDDEN and so on) or GENERAL_ERROR if the HTTP request could not be executed.\n    responseHeaders - The list containing the headers of the response message, separated by <delimiter>.\n    status - The HTTP response code.\nExample\: HTTP/1.1 200 OK\n    exception - If an error occurred, the stack trace of the thrown error.\n\nResponses\:\n    success - The operation completed as stated in the description.\n    PAGE_NOT_FOUND - The URL specified to POST from was not found.\n    INFORMATIONAL - The POST was not fully processed, the server responded with an informational response.\n    REDIRECTION - The specified URL has moved.\n    failure - The operation completed unsuccessfully.\n\nNotes\:\n1. You can use KeyTool to import a SSL certificate in a KeyStore. For example, to import a certificate in the Java cacerts KeyStore, run\: keytool -import -file c\:/../<your_cert>.cer -alias <your_alias> -keystore %JAVA_HOME%/jre/lib/security/cacerts -keystorepass changeit. If the KeyStore does not exist, the command tries to create a new one containing only your certificate.\n2. You can use KeyTool to create a certificate chain through the following command\: \n   keytool -genkey -dname "cn\=Mark Jones, ou\=JavaSoft, o\=Sun, c\=US" \n      -alias business -keypass kpi135 -keystore C\:\\working\\mykeystore \n      -storepass ab987c -validity 180\nIt creates a certificate chain in a new keystore containing only one certificate.\n3. If the value assigned to the <trustAllRoots> input is 'false' and <trustKeystore> is empty, the operation tries to use the default trust store, using the password "changeit". \n4. If the authentication type is Kerberos, you might need to add an SPN (Service Principal Name) for the web server's computer account.  In order to do this, you can use ADUC (Active Directory Users and Computers) with enabled 'Advanced Features'. Go to the web server's computer account (example\: CN\=<web_server_name>,CN\=Computers,DC\=domain,DC\=com), open the 'Properties' window and press the 'Attribute Editor' tab. Observe the values of the 'servicePrincipalName' attribute and add your SPN if not present. For example, HTTP/<web_server_FQDN>\:port.\n5. If you need to specify query parameters when making the request, use the <queryNamesList> and <queryValuesList> inputs. The operation also accepts including query parameters in the URL. For example, http\://hostname\:80/page.asp?parameterName1\=parameterValue1&parameterName2\=parameterValue2. If you specify the same query parameter both through the <queryNamesList> and the <url> inputs, the used value is the one from the <queryValuesList>, not the one included in the <url>.\n6. Apache Tomcat is currently the only supported application server when using form-based authentication.\n7. This operation uses chunked transfer encoding, which may cause failures when using HTTP servers and proxies that do not support HTTP/1.1 protocol.\n</pre>
e98fd676-1e8e-437b-ae87-4d8616330f41.bc7938ab-9620-4d11-94a7-df3a9dd01ffe.description=Generic flow to send an e-mail
e98fd676-1e8e-437b-ae87-4d8616330f41.dc003263-1d96-4829-8cc3-d2f1e06794a9.description=<pre>\nRuns a SQL query against an Oracle database, using the information in the tnsnames.ora file.  \nThe first row is returned on the first run of the operation. Subsequent calls with the same information return the other rows.\n\nInputs\:\n    TNSPath -The path to the folder of the TNS file tnsnames.ora. This path must be accessible by the OO RAS service. For example, if the RAS and the Oracle server are installed on the same Windows system, the TNSPath might look like \u201CC\:\\app\\Administrator\\product\\11.1.0\\db_1\\network\\admin\u201D. If the RAS and the Oracle server are on different Windows systems, you can copy the tnsnames.ora file  to the RAS system. The TNSPath might look like \u201CC\:\\Program Files\\Hewlett-Packard\\Operations Orchestration\\RAS\\Java\\Default\\webapp\\conf\u201D or \u201CC\:\\Temp\u201D depending on where you place the .ora file. \n    TNSEntry - The entry name in the tnsnames.ora file that contains the connection information. For example, the value for the TNSEntry input is \u201CTestEntry\u201D if the content in the tnsnames.ora file looks like the following\: \n\nTestEntry \=\n  (DESCRIPTION \=\n   (ADDRESS \= (PROTOCOL \= TCP)(HOST \= 16.110.111.111)(PORT \= 1521))\n   (CONNECT_DATA \=\n     (SERVER \= DEDICATED)\n     (SERVICE_NAME \= orcl)\n   )\n )\n\n    Username - The username to connect to the Oracle database. \n    Password - The password for the Username.\n    Command - The command to execute. \n    Delimiter \u2013 The delimiter to use between the columns in the returnResult result.\n    Key \u2013 The key to use to keep multiple query results distinct.\n    timeout - Seconds to wait before timing out the SQL command execution.\nDefault values\: 0 \n\nResults\:\n    returnResult - This is the primary output. Returned the data returned for each row separated by the value you specified in the Delimiter input (for example, \u201Ckey16|lst|16\u201D).\n    columnNames - The names of the columns returned, separated by the value you specified in the Delimiter input (for example, \u201CMYKEY|NAME|ID\u201D).\n    rowsLeft - The number of rows remaining that match the query. \n\nResponses\:\n    more items - More rows are available for retrieval.\n    no more items - No more rows are available.\n    failure - There was an error executing the command.\n\nNotes\:\n1. This operation only supports Oracle. \n2. This operation can only execute the "SELECT" statement. For statements that modify the database, use the TNS Names SQL Command operation.\n\n</pre>\n\n\n
e98fd676-1e8e-437b-ae87-4d8616330f41.fc2d3956-f707-43d9-b3ea-21e708b83d8f.description=<pre>\nService to perform an HTTP GET via the Java HTTP Client\n\nInputs\:\nurl - the url to attempt to retrieve.\nusername - the username to authenticate to url with.\npassword - the password for username.\ntimeout - a timeout after which the connection should be terminated, or 0 for no timeout.\nuseCookies - Enables cookie tracking. Cookies will be stored between consecutive calls. valid options are\: true/false\nfollowRedirects - specifies whether or not the get command should automatically follow redirects.\ntrustAllRoots - enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it. valid options are\: true/false\nproxy - a proxy to use when accessing the web site.\nproxyPort - a port on the proxy to connect to.\nproxyUsername - a username to use when connecting to the proxy.\nproxyPassword - a password to use when connecting to the proxy.\nencodeURL - perform URL encoding.\nuserAgent - if the HTTP header USER_AGENT needs to be overridden, pass in the value here\ncharacterSet - the characterSet for HTTP Get request and response. Default is UTF-8.\n\nResponses\:\nsuccess - URL retrieved successfully.\nfailure - The url could not be retrieved.\n</pre>
e9a20c11-22c6-4ff5-9c71-14321ab26896.872fe696-312a-4c63-84ea-ff2b7d39e155.description=<pre>This subflow was created by the Web Services Wizard to invoke the efficientip_macro_get_vlan_info_php operation on file\:/C\:/CSA_INSTALLATION/wsdl_eip_full.wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nauth_login - The input named efficientip_macro_get_vlan_info_php|input|auth_login of the complex type\: efficientip_macro_get_vlan_info_php|input\nauth_password - The input named efficientip_macro_get_vlan_info_php|input|auth_password of the complex type\: efficientip_macro_get_vlan_info_php|input\nvlanglobalid - The input named efficientip_macro_get_vlan_info_php|input|vlanglobalid of the complex type\: efficientip_macro_get_vlan_info_php|input\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\noutput - The output given by the XPath\: /Envelope/Body/efficientip_macro_get_vlan_info_phpResponse/output</pre>
e9a20c11-22c6-4ff5-9c71-14321ab26896.e8fe4c62-6bd0-4861-9cb8-9e40b8b6272f.description=<pre>Checks if a number or word is equal to another number or word. Word comparison is case-sensitive in alphabetical order.\n\nInputs\:\nvalue1 - The first value.\nvalue2 - The second value.\n\nReturns\:\nvalue1 \=\= value2\n\nResponses\:\nsuccess - The boolean operation was evaluated to true.\nfailure - Something went wrong or the boolean operation returned false.\n</pre>
e9b701d9-43a8-4fec-b9e6-06c5b4b1ff0e.0a6e176f-65a5-4f1f-b8a9-5987e5ef5f47.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
e9b701d9-43a8-4fec-b9e6-06c5b4b1ff0e.42e5c1e7-58d0-45a6-b26e-e0d0fbcf2661.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
e9b701d9-43a8-4fec-b9e6-06c5b4b1ff0e.5a4d843a-daa1-468e-961f-ae4ff7cd9207.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
e9b701d9-43a8-4fec-b9e6-06c5b4b1ff0e.a4b97046-06eb-4099-bd2b-966a4d11cc26.description=<pre>Sends an smtp email\n \nInput Parameters\:\nhostname - hostname or ip address of smtp server\nport - port smtp service is listening\nfrom - from email address\nto - email address(s) or recipients\nsubject - email subject\nbody - body of the email\nhtmlEmail - true or false, whether the email should be sent supporting html rich email.\nreadReceipt - true or false, whether or not to request a read receipt\nattachments - comma separated list of files to attach (must be full path)\nusername - if SMTP authentication is needed, the username to send\npassword - the password to use\ncharacterSet - the character set encoding for the entire email which includes subject, body, attached file name and the attached file. Default value is UTF-8\ncontentTransferEncoding - the content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. Default value is - quoted-printable or Q Encoding.\n \n Responses\:\n success - successfully sent the email\n failure - failed to send the email\n\nNote\:\nFor special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n\tFor doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n</pre>
e9b701d9-43a8-4fec-b9e6-06c5b4b1ff0e.b46fce23-ea47-4ac3-95b3-7828e695c3c2.callout=For Unmanaged server, don't need to remove backupSVC
e9b701d9-43a8-4fec-b9e6-06c5b4b1ff0e.b9079772-c24a-46a2-b3bd-e7532edd1e6a.description=This workflow updates the Process Instance State using PEM API.\n\nInputs\:\n_PROCESS_INSTANCE_ID - Process Instance Id\n_processInstanceState - Process Instance State (Use value from selection list CSA-ProcessInstance-State)\n\n\n\nResult\:\n_processInstanceState -Updated Process Instance State\n
e9b701d9-43a8-4fec-b9e6-06c5b4b1ff0e.cdb14b44-0638-4899-94b6-d2b9184596b0.description=Generic flow to send an e-mail
eb957f1a-6504-401c-bb2c-e4461580498f.description=Login for INTT Domaincontroller
ec006559-cac5-47ac-a92e-c434f91748a8.description=SA FQDN or IP Address
ecf03837-a27e-433e-a6cf-89a2e1a544c0.bfee7a4a-ff86-4d9c-9401-386c39c8385a.description=<pre>This flow executes the "Remove-VM" Powershell cmdlet in order to remove a virtual machine from Virtual Machine Manager.\n\nInputs\:\n    host - The hostname or ip address of the SCVMM server.\n    username - The username to use when connecting to the server.\nValue format\: username@domain or domain\\username.\n    password - The password to use when connecting to the server.\n    authType - Specifies the mechanism that is used to authenticate the user's credentials. \nValid values\: Default, Negotiate, Credssp, Kerberos. (case-insensitive)\nDefault value\: Default.\n    delimiter - The delimiter used to separate each property name from the property value in the output table.\nDefault value\: "\:".\n    colDelimiter - The delimiter used to separate columns in the output table.\nDefault value\: ','\n    rowDelimiter - The delimiter used to separate rows in the output table.\nDefault value\: newline\n    vm - The name or id of the virtual machine that will be removed.\nValue format (for the vm identifier)\: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxx.\nExample (of vm identifier)\: "12345678-abcd-efgh-ijkl-1234567890".\n    force - Set this boolean input to "true" if you want to force the removal of the virtual machine object and of all its associations with other objects.\n    version - The SCVMM Server version.\nDefault value\: 2008 R2\n\nResponses\:\n    Success - The Powershell cmdlets were executed successfully.\n    Failure - Something went wrong.\n\nReturns\:\n    returnResult - A table containing the details of the virtual machine that was removed.\n    warnings - A list of warnings that the cmdlet produced. If the cmdlet was executed without warnings, then this result will be an empty string.\n\nNotes\:\n1. More details on valid input formats and combinations for this flow can be found by using the "Get-Help Remove-VM -Detailed" Powershell command and inspecting the "SYNTAX" and "PARAMETERS" sections in the resulting output.\n2. Powershell related requirements and settings needed to run this flow are listed in the description of the "System Center Virtual Machine Manager" folder.\n3. In order to avoid unwanted behavior caused by multiple objects sharing the same name specify object ids in the inputs that accept both names and ids.\n</pre>
ee3219d3-10a0-4135-9ab2-bc0075ce14a7.d92aab32-7b26-471d-8f85-a219f698cdd9.description=End Branch
ee3219d3-10a0-4135-9ab2-bc0075ce14a7.de6fd496-bb14-4024-9ed2-26006c6ec297.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
ef3aca50-ff9f-45d1-94c5-0e261da6d468.description=Maximum number of minutes to wait for the HP SA agent registration of a cloned managed server during the commissioning process.
ef4f86ab-0cdb-41ae-80d7-ce59fa938594.description=The name of the Oracle user account used by CSA to deploy application monitors on Oracle 10g databases.
f147fd04-d97b-48de-8555-7bffedbd1399.938d31b6-2894-402e-8f6b-35dfbd91bdbc.description=<pre>Checks to see if a string matches a specific rule.\n\nInputs\:\nmatchType - The type of match to perform.\ntoMatch - The string to check if matches another string.\nmatchTo - The string to match against.\nignoreCase - Boolean value for whether or not to ignore case during match.\n\nResponses\:\nsuccess - The String matched.\nfailure - The string did not match, or something went wrong.</pre>
f147fd04-d97b-48de-8555-7bffedbd1399.b15b99ff-f8ac-43aa-aaea-f3b1bffdae88.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\n    string1 - The first string. \nDefault value\: "" (empty)\n    string2 - The second string.\nDefault value\: "" (empty)\n    ignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nResponses\:\n    true - If the two strings are equal.\n    false - If the two strings are not equal.\n\n</pre>
f147fd04-d97b-48de-8555-7bffedbd1399.b6f6770e-310c-4c06-a75b-a3cea930b2a3.description=<pre>\nCheck to see if the value stored in a specified flow variable, denoted by key, is null.\n\nInputs\:\nkeyName - The key to check, i.e. the name of the flow variable.\n\nReturns\: \nThe value in the specified key, i.e. flow variable.\n\nResponses\:\nisNull - If the key is a null pointer, i.e. the flow variable doesn't have an assigned value.\nnotNull - If some value is stored in the key, i.e the flow variable has a value assigned.\n</pre>
f150ddc0-67fd-4953-aa88-0e0ed9cfe5a9.description=pc.vcenter.vmPowerState.on
f17ef230-9c86-4ac7-ab50-0038cbdf0f61.48b9ab96-e8b0-4e09-a843-36b900c2e2fe.description=This operation iterates through a string that contains an array in the JavaScript Object Notation format (JSON).  Each time  this operation is called, it places the value of the current array element into the "returnResult" output and advances the iterator to the next array element.\n\nThe JSON format is used to encode arrays and other values using JavaScript notation.  For arrays, this means that the values need to be enclosed by square brackets, and each element in the array can be a string (enclosed by quotes), a number, true, false, null, or  nested array or object.  Commas are always used as delimiters between array elements, and they can also appear within string elements. \n\nThe benefits of JavaScript arrays are that delimiters are fixed and cannot be confused with data, and that complex nesting of arrays and objects are supported.  The description of the enclosing folder, /Library/Utility Operations/Container/JavaScript Objects has more examples, and the JSON format is described completely at http\://www.json.org.\n\nInputs\:\n    array - The JavaScript array that will be iterated through. A normal OO list is NOT a JavaScript array.\nExamples\:\n    For example, the following is a simple JSON array\:\n        [ "cat", "dog", "horse" ]\n    The equivalent OO list (that is not a JavaScript array) is\:\n        cat,dog,horse\n\n Results\:\n    returnResult - This is the primary output and contains the current array element or an exception message if something went wrong.  When incorporating this operation into a flow, you should assign a meaningful result value from this field.\n    Result - This output field contains the value from the "returnResult" field. \n\nResponses\:\n   has more - The iterator has not yet reached the end of the array. The "returnResult" output will be populated with the value of the current element in the array, and the iterator will advance to the next element in the array.\n   no more - The iterator has reached the end of the array, and there is no more data to return.  The iterator will become undefined after this call, which basically will reset it so that if called again, this operation will begin another iteration at the beginning of the array.\n   failure - There was some error in iterating through the list, and the "returnResult" output will contain information about the error. This will occur if the input array is not a valid JavaScript array. You may wish to use a tool such as http\://www.jsonlint.com/ to help diagnose problems with JavaScript Object Notation.\n\nNotes\:\n1. Modifying the contents of the array during iteration is not generally supported, but will be safe as long as the affected item(s) are beyond the current position of the iterator.  The iterator keeps track of where it is in the array by position.  If items are added or removed to the list in a position preceding the iterator, it may cause the iterator to return results that are not obvious.  For example, if the array contains [ "a", "b", "c" ] and the iterator is positioned on the second element, "b" and the first element is removed, then the iterator will now be at the last element in the list, "c".\n2. There is currently a limitation that a flow can only have one of these array iterator steps active at a time without causing possible conflicts. In other words, if you need to iterate through a nested array, you should use a sub-flow to process the inner array.  You may have two or more of these array iterators in the same flow as long as each iterator reaches the end of its array before the next one begins.\n3. Note that since JavaScript arrays may contain nested arrays or other objects, the value returned in "returnResult" field may also require further processing.\n
f17ef230-9c86-4ac7-ab50-0038cbdf0f61.9d54722c-f1cc-4726-98fa-503bb71a7f1f.description=<pre>\nAccepts an object in the JavaScript Object Notation format (JSON) and and\ncreates and populates a flow variable for each member in the object.\n\nThe JSON format encodes objects as a set of unordered key/value pairs, which is\nsimilar to a structure or map in other programming languages.  For example,\n   { "city" \: "Palo Alto", \n     "state" \: "CA" }\nis an object with two elements one with the name "city" having the value "Palo\nAlto", and the other being the name "state" with the value "CA".  This operation\nwould create the flow variables city and state with the values "Palo Alto" and\n"CA".\n\nA optional prefix string can be specified that will be prepended to each flow\nvariable that is created.  For example, if the prefix is set to "my.", then\nthen the above object would result in the variables my.city (with value "Palo\nAlto") and my.state (with value "CA").  This can be useful if flow variables\nalready exist with the given names to avoid overwriting their values.\n\nJavaScript objects are useful for representing structured data, and are\nespecially when used within an array.  For example, an operation that retrieves\na set of incidents from an external system may return the entire list in one\narray of incident objects.  The description of the enclosing folder,\n/Library/Utility Operations/Container/JavaScript Objects has more examples, and\nthe JSON format is described completely at http\://www.json.org.\n\nInputs\n\n   object\n      The JavaScript object that will be converted into flow variables.  The\n      operation will return a failure if the it is not a JavaScript object.\n\n   prefix\n      The prefix to prepend to each flow variable name that will be created.\n      This is useful for creating unique variable names.\n\nResponses\n\n   success\n      The flow variables were successfully created from the object.\n\n   failure\n      There was some error in processing the object, most likely because the\n      object is not in valid JavaScript Object Notation.  You may wish to use a\n      tool such as http\://www.jsonlint.com/ to help diagnose problems with\n      JavaScript Object Notation.\n\nOutputs\n\n   A separate output will be created for each member of the object.  Each of\n   these outputs may in turn contain another object or array.\n</pre>
f17ef230-9c86-4ac7-ab50-0038cbdf0f61.deb9715d-8edf-4533-8123-9855f19c8858.description=<pre>This operation iterates through a list of values. It is not recommended to modify the value of the "list" and "separator" inputs during the iteration process.\n\nInputs\:\n    list - The list to iterate through.\n    separator - A delimiter separating the list elements.\nDefault value\: \u2018,\u2019 (comma) \n\nResults\:\n    resultString - The current list element (if the response is "has more").\n\nResponses\:\n    has more - Another value was found in the list and it has been returned.\n    no more - The iterator has gone through the entire list. This response is returned once per list iteration.  A subsequent call to the List iterator operation restarts the list iteration process.\n    failure - The operation completed unsuccessfully.\n\nNote\:\n   The position of the iterator in the list is tracked by each step's unique identifier. Therefore, you can simultaneously iterate through the same list from multiple steps.\n</pre>
f1a0a7a4-4e6e-405e-860d-e812d0c2ddb5.0a9f1dc2-ada3-4671-8f68-9b09850317fe.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
f1a0a7a4-4e6e-405e-860d-e812d0c2ddb5.0ece5491-7cc7-4a62-b3c5-45c477d77f98.description=<pre>Runs a command and allows user to specify that it runs locally (in this case no port should be specified), via ssh, Global Shell, ROSH, Telnet, or RSH.\n\nInputs\:\nhost - Hostname or ip address.\nport - Port number for connecting to the host.\nusername - Username to connect as.\npassword - Password of the user. If using a private key file this will be used as the passphrase for the file.\nprotocol - The protocol used to run the command (can be one of ssh, ROSH, GlobalShell, Telnet, RSH, REXEC, local, WMI, NASConnectTelnet, or HPOM).\ntimeout - (optional, default 90 seconds) time in milliseconds to wait for the command to complete; increase its value if you are getting incomplete output results or timeout.\ncommand - The command to execute.\narguments - The arguments to pass to the command.\nenvironment - Specifies environment variables/values that need to be defined when running command.\nstartDir - The path to the starting directory.\npty - Whether to use pty (used by ssh, GlobalShell. Valid values\: true, false).\nprivateKeyFile - Path to private key file, relative to ICONCLUDE_HOME on RAS host (used by ssh, GlobalShell).\nsasHost - The host we want to run the ROSH command on.\nsasHostUsername - The username used to run the ROSH command on sasHost.\nusernamePrompt - The prompt that when seen should send the username; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'NAS Login\:'\npasswordPrompt - The prompt that when given should send the password; used by the Telnet protocol; when used by the NASConnectTelnet protocol, the default value is 'Password\:'\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default, the path will have to be  changed on Windows 2000 systems\nnasDevice - The NAS device to run the command on when using the NASConnect protocol.\nnasDeviceConsoleMode - The NAS device console mode used to run the command scripts that run the command on the given NAS device. If this input is empty, command scripts are not used, and the connection to the NAS device and the command are issued directly in the console; this is not recommended, since its error handling capabilities are limited and it might result in success even when the command fails to execute. The values for this input can be found in the NAS web interface, as a drop-down list when a new command script is created (ex. Cisco IOS enable).\nhpomNode - Node on which the command is to be executed.\nhpomProtocol - Protocol to communicate with HPOM (http or https).\ncharacterSet - The characterSet name for stream encoding and decoding between the RAS and target machine. For example, SJIS,EUC-JP, UTF-8.  By default it is UTF-8 (used by ssh, GlobalShell, Telnet, RSH, REXEC).\n\nResponses\:\nsuccess - The command was executed successfully.\nfailure - The command could not be executed.\n\nExtra Results\:\nstdErr - The STDERR of the command.\nstdOut - The STDOUT of the command.\n\nNotes\:\nTelnet protocol - Since telnet is not a remote execution protocol but a shell protocol the response will always be successful if the command was executed in the remote shell.  The return code of the specified command cannot be determined in this protocol.  If you must use the telnet protocol with this operation besure to check the command results. Consider using ssh or rexec protocol instead.\n</pre>
f1a0a7a4-4e6e-405e-860d-e812d0c2ddb5.1b8b89e1-dee7-4366-9467-1389c2502482.description=<pre>\nUses WMI to attempt to create a remote process on a machine.  The command passed should be formatted as though it was run on the command line.\n\nCAUTION\: internally 'cmd /c' gets prepended to the command passed.  Also '2>tempfile 1>tempfile' get appended to the command so that we can attempt to capture stdout and stderr.\nSo your command will look like this when executed\:\n\t'cmd /c [yourcommand] 2>temperr 1>tempout'\n\nInputs\:\nhost - Hostname or ip address of the target machine.\ncommand - The command you want executed.\nuser - Username to use for remote WMI impersonation and thread impersonation on the RAS host for this operation (can be left blank).\npassword - Password of the user.\noutputPath - Network accessible path used by the operation to store temporary files. If not specified it points to \\\\host\\admin$\\temp\\'. If this path is not accessible you should change it to use another share that the host local system account has write access to. By default the path will have to be changed on Windows 2000 systems.\ncurrentDirectory - Current directory.\ncharacterSet - The character encoding used to write the batch file that will be remotely executed by the operation (for instance\: ibm437, shift_jis).  Unicode character encodings may not supported for this input (utf-8, utf-16, etc.).  Support for unicode encodings depends on target system capabilities.  By default this encoding will also be used to read the command output that is redirected to temporary files.  If the command output is expected to be of different encoding, specify the different encoding in the outputCharacterSet input.  The default value is the default encoding of the RAS.\noutputCharacterSet - The character encoding used to read the command output that was redirected to temporary files.  Only need to specify this input if the output of the command is known to output a different character encoding.  As an example\: the 'wmic' command returns utf-16 encoded output.  Examples of valid inputs include\: ibm437, shift_jis, utf-8, utf-16.\ntimeout - The number of seconds before assuming the remote process is no longer functional.  After the timeout has expired the remote process and all child processes will be terminated.  the default value is 600.\n\nResponses\:\nsuccess - Remote process successfully launched and has completed executing.\nfailure - Unable to start remote process.\n\nExtra Results\:\nReturnValue - Return value from WMI for starting the process (not the exit value of the process).\nProcessID - The process id of the remote process.\nProcessReturnCode - The return code of the remote process.\nStdOut - Standard output from the remote process.\nStdErr - Standard error from the remote process.\n\nNotes\: \nList of possible encoding names (Support for the encoding may depend on the version or language of the RAS OS)\:\n\nEncoding Name\:\tDescription\:\nIBM437\t\tOEM United States\nDOS-720\t\tArabic (DOS)\nibm737\t\tGreek (DOS)\nibm775\t\tBaltic (DOS)\nibm850\t\tWestern European (DOS)\nibm852\t\tCentral European (DOS)\nIBM855\t\tOEM Cyrillic\nibm857\t\tTurkish (DOS)\nIBM00858\t\tOEM Multilingual Latin I\nIBM860\t\tPortuguese (DOS)\nibm861\t\tIcelandic (DOS)\nDOS-862\t\tHebrew (DOS)\nIBM863\t\tFrench Canadian (DOS)\nIBM864\t\tArabic (864)\nIBM865\t\tNordic (DOS)\ncp866\t\tCyrillic (DOS)\nibm869\t\tGreek, Modern (DOS)\nshift_jis\t\tJapanese (Shift-JIS)\ngb2312\t\tChinese Simplified (GB2312)\nks_c_5601-1987\tKorean\nbig5\t\tChinese Traditional (Big5)\nutf-16\t\tUnicode\nunicodeFFFE\t\tUnicode (Big-Endian)\nutf-7\t\tUnicode (UTF-7)\nutf-8\t\tUnicode (UTF-8)\nutf-32\t\tUnicode (UTF-32)\nutf-32BE\t\tUnicode (UTF-32 Big-Endian)\nJohab\t\tKorean (Johab)\nus-ascii\t\tUS-ASCII\nkoi8-r\t\tCyrillic (KOI8-R)\neuc-jp\t\tJapanese (EUC)\nEUC-CN\t\tChinese Simplified (EUC)\neuc-kr\t\tKorean (EUC)\nhz-gb-2312\t\tChinese Simplified (HZ)\nGB18030\t\tChinese Simplified (GB18030)\n\n</pre>
f1a0a7a4-4e6e-405e-860d-e812d0c2ddb5.4d968f2a-7ede-4e05-8001-7066f6c1dce8.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
f1a0a7a4-4e6e-405e-860d-e812d0c2ddb5.d5bc161f-f5b0-4d7a-ad5f-f93696d8d672.prompt=Enter pty (for SSH)\:
f1f73d54-a4fb-4024-9dd8-1903cd58be55.554e91b3-f674-4ce6-8f85-180eeb75a242.description=<pre>Runs a SQL command against an Oracle database, using the information available in the tnsnames.ora file.   \nDoes not return any results (only whether the command was executed)\n\nInput Parameters\:\nTNSPath - The path to the parent folder of the TNS file which contains the DB connecting info(the name of the DB server, the port used for connecting to the DB server, the database name)\nTNSEntry - the entry name from the tnsnames.ora file which contains the connecting information\nUsername - username to connect as\nPassword - password\nCommand - the command to execute\n\nResponses\:\nmore items - the command was executed successfully\nfailure - the command could not be executed\n\nExtra Results\:\nupdateCount - the update count of the command executed\n\nNOTE\: \nThis op supports only Oracle. The tnsnames.ora file should correctly configured on the RAS machine.\n\nORACLE NOTE\:\nIt is possible to run PL/SQL procedures using this operation. The examples below present the syntax to be used for having the same effect as the following PL/SQL script\:\nBEGIN\n  send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');\nEND;\n\nExample 1\: BEGIN send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test');END;\n\nExample 2\: BEGIN send_message('b@hp.com','pas@hp.com','Test','Test');END;\n\nExample 3\: {CALL send_message(addressee\=>'b@hp.com',sender\=>'pas@hp.com',subject\=>'Test',message\=>'Test')}\n\nExample 4\: {CALL send_message('b@hp.com','pas@hp.com','Test','Test')}\n</pre>
f2451fff-53ba-408c-a6ff-864f6b4235db.description=It's attributes which will be used in ESL_CreateCI
f428ce18-13e9-4dad-8c82-6965b97e6b86.df1487e1-05dd-485f-884d-a9e4125f53cd.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
f457775e-615f-4a9f-b353-3801c23f5129.description=attributes which will be used in ESL_CreateCI
f5da56d3-5441-48d4-b3a3-375922b22e6d.description=Microsoft SQL Server 2008 R2 instance name. MSSQLSERVER is the value used for the default instance.
f662368e-9fa9-4ae2-9874-b4c1c66c0f24.description=It's attributes which will be used in ESL_CreateCI
f6eedc7e-f253-41d9-9f99-4552f737def0.14cab65e-1778-48b3-b08f-ab072c1091b8.description=<pre>\nCreates a temporary file.\n\nInput Parameters\:\nuser - Username to use for thread impersonation on the RAS host when creating the temporary file.\npassword - Password to use when creating.\n\nReturns\:\nThe path to the newly created temp file.\n\nResponses\:\nfailure - The operation failed.\nsuccess - The operation succeeded.\n</pre>\n
f6eedc7e-f253-41d9-9f99-4552f737def0.18593c8e-2fca-4b4c-9db6-4eb04f7537e5.description=<pre>Writes the data from "contents" input to the requested file. The operation can be used to overwrite existing content of the file,  append extra lines to it or even create a new file.\n\nInput Parameters\:\nfile                - Full path to file (can be a UNC path, will attempt to create directory structure). If the file does not exist it is created first.\ncontents       - The contents to write to the file. Contents can have a new line delimiter which is also given as input to the operation, but it is optional. Example\: "This is line no. 01\\nThis is line no. 2\\n" where \\n is the delimiter.\nuser              - Username to use for thread impersonation on the RAS host for this operation.\npassword      - Password for the user.\ndelimiter        - Specifies the newline delimiter (\\n, \\r\\n, etc) that is used for the "contents" input.\noverwrite      - Specifies whether to overwrite the file or append to it. By default, the used value is true. Accepted values\: true, false or the empty string. If this is left empty, the file will be overwritten.\ncharacterSet - The character encoding used to write to the file. The default is UTF-8. Example values\: windows-1252, UTF-16, UTF-16BE,  ISO-8859-1, US-ASCII, Shift_JIS etc.\n\nResponses\:\nsuccess - The contents were written to the file.\nfailure - The operation did not succeed in writing the contents to file.\n</pre>
f6eedc7e-f253-41d9-9f99-4552f737def0.24829828-9642-44c9-bc69-4b14bb35d8cc.prompt=Enter a value for prefix
f6eedc7e-f253-41d9-9f99-4552f737def0.2db745fa-09a8-4aa8-b1e2-91c1d4542b00.description=<pre>Writes the data from "contents" input to the requested file. The operation can be used to overwrite existing content of the file,  append extra lines to it or even create a new file.\n\nInput Parameters\:\nfile                - Full path to file (can be a UNC path, will attempt to create directory structure). If the file does not exist it is created first.\ncontents       - The contents to write to the file. Contents can have a new line delimiter which is also given as input to the operation, but it is optional. Example\: "This is line no. 01\\nThis is line no. 2\\n" where \\n is the delimiter.\nuser              - Username to use for thread impersonation on the RAS host for this operation.\npassword      - Password for the user.\ndelimiter        - Specifies the newline delimiter (\\n, \\r\\n, etc) that is used for the "contents" input.\noverwrite      - Specifies whether to overwrite the file or append to it. By default, the used value is true. Accepted values\: true, false or the empty string. If this is left empty, the file will be overwritten.\ncharacterSet - The character encoding used to write to the file. The default is UTF-8. Example values\: windows-1252, UTF-16, UTF-16BE,  ISO-8859-1, US-ASCII, Shift_JIS etc.\n\nResponses\:\nsuccess - The contents were written to the file.\nfailure - The operation did not succeed in writing the contents to file.\n</pre>
f6eedc7e-f253-41d9-9f99-4552f737def0.30e6191f-3230-41b8-b5b0-59ff1b64881a.description=<pre>\nCreates a temporary file.\n\nInput Parameters\:\nuser - Username to use for thread impersonation on the RAS host when creating the temporary file.\npassword - Password to use when creating.\n\nReturns\:\nThe path to the newly created temp file.\n\nResponses\:\nfailure - The operation failed.\nsuccess - The operation succeeded.\n</pre>\n
f6eedc7e-f253-41d9-9f99-4552f737def0.3b065fe9-c09d-468e-a940-d7b9056d04ed.description=<pre>\nCreates a temporary file.\n\nInput Parameters\:\nuser - Username to use for thread impersonation on the RAS host when creating the temporary file.\npassword - Password to use when creating.\n\nReturns\:\nThe path to the newly created temp file.\n\nResponses\:\nfailure - The operation failed.\nsuccess - The operation succeeded.\n</pre>\n
f6eedc7e-f253-41d9-9f99-4552f737def0.3ef7b689-73b9-4f1b-aeb4-fcbd272a4982.prompt=Source\:
f6eedc7e-f253-41d9-9f99-4552f737def0.480a4e32-7539-44e3-b35d-e3c7089bccc3.prompt=Enter a value for directory
f6eedc7e-f253-41d9-9f99-4552f737def0.5059ab32-8651-4805-a901-85ece1f691da.prompt=Enter a value for suffix
f6eedc7e-f253-41d9-9f99-4552f737def0.5ad91377-4547-4534-bada-e2008da6a647.description=<pre>Useful Op to keep a running results.\nTakes a string input (resultText) and appends this to a global context key of "runningResults". As a result, the context key whose name is in the keyName input will be appended with the string from the input resultText.\n\nInput Parameters\:\nkeyName - name of context key to append to\nresultText - string input to append\ndelimiter - (leave blank for none) the delimiter to put between what is already in keyName before appending resultText\n\nResponses\:\nsuccess - assigned the context variable\n\nReturns\:\nThe the value of the context variable it appended to.\n\nContext\:\nrunningResults\n\nScriptlet Example\:\ncurrentResults \= scriptletContext.get("runningResults");\n\nif (currentResults \=\= null) {\n   currentResults \= resultText;\n} else {\n   currentResults +\= resultText;\n}\n\n\nscriptletContext.putGlobal("runningResults", currentResults);</pre>
f6eedc7e-f253-41d9-9f99-4552f737def0.5cb5fb4e-6f62-4d0e-a746-826695461e0d.prompt=Source File\:
f6eedc7e-f253-41d9-9f99-4552f737def0.6356dd46-6b3c-453b-804d-e9a873ee0573.prompt=Source File\:
f6eedc7e-f253-41d9-9f99-4552f737def0.649471d1-c15f-4f05-9da0-517160bdf799.description=<pre>Removes a file/folder\n\nInput Parameters\:\nsource - full path to file or directory\n\nResponses\:\nsuccess - file/directory removed successfully\nfailure - unable to remove file/directory\n</pre>
f6eedc7e-f253-41d9-9f99-4552f737def0.66ef8639-f367-4d0e-b5ef-24732ad75e01.description=<pre>Removes a file/folder\n\nInput Parameters\:\nsource - full path to file or directory\n\nResponses\:\nsuccess - file/directory removed successfully\nfailure - unable to remove file/directory\n</pre>
f6eedc7e-f253-41d9-9f99-4552f737def0.69d3c835-518b-4242-a482-99a08376b02b.prompt=Source File\:
f6eedc7e-f253-41d9-9f99-4552f737def0.7daff4a7-ff8d-4eba-a1c9-d2262dab43a9.description=<pre>Performs a XSL Transformation on a RAS to transform a XML document.  Runtime parameters can be specified with the paramKey and paramValue inputs.\n\nInput Parameters\:\ntemplateLocation - The location of the XSL stylesheet to use.  Can be a local file path or an http url.\nxmlLocation - The location of the XML document to transform.  Can be a local file path or an http url.  This is optional because some stylesheets do not need a XML document and can create output based on runtime parameters.\noutputFile - The local file to write the output of the transformation.  If an output file is not specified the output of the transformation will returned as returnResult.\nparamKey - A list of parameter names delimited by paramDelimiter.\nparamValue - A list of parameter values delimited by paramDelimiter.\nparamDelimiter - List delimiter for paramKey and paramValue inputs (default is comma).\n\nResponses\:\nsuccess - The XSL transformation succeeded.\nfailure - The XSL transformation failed.  See returnResult for failure reasons.\n\nResults\:\nreturnResult - The output of the transformation if no output file is specified.\n\nNotes\:\nSpecifying parameters\:\nIf more then one parameter needs to be specified for a transformation, populate paramKey with a list of parameter names and paramValue with the respective parameter values.  As an example here is a simple stylesheet that has parameters firstName, lastName and color (it does not transform an xml document)\:\n\n<?xml version\="1.0" encoding\="UTF-8"?>\n<xsl\:stylesheet version\="1.0" xmlns\:xsl\="http\://www.w3.org/1999/XSL/Transform">\n<xsl\:param name\="firstName">OO</xsl\:param>\n<xsl\:param name\="lastName">User</xsl\:param>\n<xsl\:param name\="color">\#000000</xsl\:param>\n<xsl\:template match\="/">\n<html>\n<body>\n<h2>\n<font color\="{$color}">\nHello <xsl\:value-of select\="$firstName"/><xsl\:text> </xsl\:text><xsl\:value-of select\="$lastName"/>\!\n</font>\n</h2>\n</body>\t\t\n</html>\n</xsl\:template>\n</xsl\:stylesheet>\n\nBy default (with no parameters specified) this will create a html document that says\: "Hello OO User\!" in black text.  When you apply the following paramKey and paramValue inputs\:\n\nparamKey\=firstName,lastName,color\nparamValue\=Valued,Customer,blue\nparamDelimiter\=,\n\nThe output with these parameters would create a html document that says\: "Hello Valued Customer\!" in blue text.\n</pre>
f6eedc7e-f253-41d9-9f99-4552f737def0.8f04c05a-eed6-4615-b7c4-c591809766c1.prompt=Enter a value for directory
f6eedc7e-f253-41d9-9f99-4552f737def0.92940c44-6daa-4646-bb33-40cd0aa74ac2.prompt=Enter a value for prefix
f6eedc7e-f253-41d9-9f99-4552f737def0.9ef16b46-6d0e-4ce3-92a4-2b17d82f011d.prompt=Enter a value for prefix
f6eedc7e-f253-41d9-9f99-4552f737def0.afa54eaa-47c1-456d-943f-441d0de3e1d1.description=<pre>Iterates through a list of values. If the list changes while running, the updates will be appended to the list.\n\nInputs\:\nseparator - The list separator (or delimiter).\nlist - The list to be split\n\nResponses\:\nhas more - Another value was in the list, and has been returned.\nfailure - failed to process the list.\nno more - The iterator has gone fully through the list. This response will only be returned once per iteration through the list, a subsequent call to the Iterator will restart the Iteration through the list.\n\nReturns\:\nThe current element of the list, if the response is has more</pre>
f6eedc7e-f253-41d9-9f99-4552f737def0.b307f2bb-b98c-4488-81cd-637407192acb.prompt=Enter a value for suffix
f6eedc7e-f253-41d9-9f99-4552f737def0.ce9e4775-1a5b-4bee-911c-92ac38a02f0b.description=<pre>Writes the data from "contents" input to the requested file. The operation can be used to overwrite existing content of the file,  append extra lines to it or even create a new file.\n\nInput Parameters\:\nfile                - Full path to file (can be a UNC path, will attempt to create directory structure). If the file does not exist it is created first.\ncontents       - The contents to write to the file. Contents can have a new line delimiter which is also given as input to the operation, but it is optional. Example\: "This is line no. 01\\nThis is line no. 2\\n" where \\n is the delimiter.\nuser              - Username to use for thread impersonation on the RAS host for this operation.\npassword      - Password for the user.\ndelimiter        - Specifies the newline delimiter (\\n, \\r\\n, etc) that is used for the "contents" input.\noverwrite      - Specifies whether to overwrite the file or append to it. By default, the used value is true. Accepted values\: true, false or the empty string. If this is left empty, the file will be overwritten.\ncharacterSet - The character encoding used to write to the file. The default is UTF-8. Example values\: windows-1252, UTF-16, UTF-16BE,  ISO-8859-1, US-ASCII, Shift_JIS etc.\n\nResponses\:\nsuccess - The contents were written to the file.\nfailure - The operation did not succeed in writing the contents to file.\n</pre>
f6eedc7e-f253-41d9-9f99-4552f737def0.ceef2fe5-bcb9-4256-b423-16fb5cede8cb.prompt=Enter a value for suffix
f6eedc7e-f253-41d9-9f99-4552f737def0.d3ea6d8f-b388-428a-a727-99e10a7e71ed.prompt=Source\:
f6eedc7e-f253-41d9-9f99-4552f737def0.da317dde-b09c-46aa-b165-4aff8580eeb3.description=<pre>Performs a mathematical operation on two numbers or strings\n\nInputs\:\nvalue1 - The first value.\nvalue2 - The second value.\noperation - The operation to perform (+ - * ^ / > < \=\= \!\= >\= <\=).\n\nResponses\:\nsuccess -  The operation completed successfully. If a boolean operation, it evaluated to true.\nfailure - Something went wrong or the boolean operation returned false.\n\nReturns\:\nThe raw result of the operation, for boolean values this is true or false.\n\nReturns\:\nField 1 - The first value. Here for compatibility\nField 2 - The second value. Here for compatibility\nField 3 - The operation. Here for compatibility\nformatted_result - The formatted result of the operation, for boolean values this is true or false.</pre>
f6eedc7e-f253-41d9-9f99-4552f737def0.df050f41-4c7d-4011-86cf-cc3fd95fa613.description=<pre>Performs a XSL Transformation on a RAS to transform a XML document.  Runtime parameters can be specified with the paramKey and paramValue inputs.\n\nInput Parameters\:\ntemplateLocation - The location of the XSL stylesheet to use.  Can be a local file path or an http url.\nxmlLocation - The location of the XML document to transform.  Can be a local file path or an http url.  This is optional because some stylesheets do not need a XML document and can create output based on runtime parameters.\noutputFile - The local file to write the output of the transformation.  If an output file is not specified the output of the transformation will returned as returnResult.\nparamKey - A list of parameter names delimited by paramDelimiter.\nparamValue - A list of parameter values delimited by paramDelimiter.\nparamDelimiter - List delimiter for paramKey and paramValue inputs (default is comma).\n\nResponses\:\nsuccess - The XSL transformation succeeded.\nfailure - The XSL transformation failed.  See returnResult for failure reasons.\n\nResults\:\nreturnResult - The output of the transformation if no output file is specified.\n\nNotes\:\nSpecifying parameters\:\nIf more then one parameter needs to be specified for a transformation, populate paramKey with a list of parameter names and paramValue with the respective parameter values.  As an example here is a simple stylesheet that has parameters firstName, lastName and color (it does not transform an xml document)\:\n\n<?xml version\="1.0" encoding\="UTF-8"?>\n<xsl\:stylesheet version\="1.0" xmlns\:xsl\="http\://www.w3.org/1999/XSL/Transform">\n<xsl\:param name\="firstName">OO</xsl\:param>\n<xsl\:param name\="lastName">User</xsl\:param>\n<xsl\:param name\="color">\#000000</xsl\:param>\n<xsl\:template match\="/">\n<html>\n<body>\n<h2>\n<font color\="{$color}">\nHello <xsl\:value-of select\="$firstName"/><xsl\:text> </xsl\:text><xsl\:value-of select\="$lastName"/>\!\n</font>\n</h2>\n</body>\t\t\n</html>\n</xsl\:template>\n</xsl\:stylesheet>\n\nBy default (with no parameters specified) this will create a html document that says\: "Hello OO User\!" in black text.  When you apply the following paramKey and paramValue inputs\:\n\nparamKey\=firstName,lastName,color\nparamValue\=Valued,Customer,blue\nparamDelimiter\=,\n\nThe output with these parameters would create a html document that says\: "Hello Valued Customer\!" in blue text.\n</pre>
f6eedc7e-f253-41d9-9f99-4552f737def0.e7773e06-03bc-4386-bc0b-05edd8dbeb2a.prompt=Source\:
f6eedc7e-f253-41d9-9f99-4552f737def0.ec1731c6-1be5-4696-83fd-b195bf22947e.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
f6eedc7e-f253-41d9-9f99-4552f737def0.eead4747-6665-4b42-9f74-5586903108b3.prompt=Enter a value for directory
f6eedc7e-f253-41d9-9f99-4552f737def0.f03e9779-c1eb-4d4a-8e48-f79844de7f9e.description=<pre>Iterates through a list of values. If the list changes while running, the updates will be appended to the list.\n\nInputs\:\nseparator - The list separator (or delimiter).\nlist - The list to be split\n\nResponses\:\nhas more - Another value was in the list, and has been returned.\nfailure - failed to process the list.\nno more - The iterator has gone fully through the list. This response will only be returned once per iteration through the list, a subsequent call to the Iterator will restart the Iteration through the list.\n\nReturns\:\nThe current element of the list, if the response is has more</pre>
f6eedc7e-f253-41d9-9f99-4552f737def0.f26656db-e1ee-4b06-b6ae-6434ef904c81.description=<pre>Removes a file/folder\n\nInput Parameters\:\nsource - full path to file or directory\n\nResponses\:\nsuccess - file/directory removed successfully\nfailure - unable to remove file/directory\n</pre>
f6eedc7e-f253-41d9-9f99-4552f737def0.f67c4106-29af-49dc-85e0-93c98149113a.description=<pre>Adds a flow variable into the local context (available to itself and child flows only)\n\nInput Parameters\:\nkeyName - the name of the flow variable to use\nmyValue - the value to assign the flow variable\n\nResponses\:\nsuccess - assigned the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, $myValue];</pre>
f70dec08-c0f1-4499-9d7f-1473df63e255.38c57fcf-a3f9-411a-a8cd-a92cb445a870.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
f70dec08-c0f1-4499-9d7f-1473df63e255.41efa900-98a0-42c8-9ad1-9006bdcc7960.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
f70dec08-c0f1-4499-9d7f-1473df63e255.95baf7fc-ccd8-4eb2-988f-ceeba77226cc.description=<pre>\nCompares two strings, returning a true response if and only if they contain the same sequence of characters. A null string is considered to be equal to an empty string.\n\nInputs\:\nstring1 - The first string.\nstring2 - The second string.\nignoreCase - If set to 'true', then the comparison ignores case considerations. The two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case. If set to any value other than 'true', then the strings must match exactly to be considered equal.\n\nresponses\:\ntrue - If the two strings are equal\nfalse - If the two strings are not equal\n\n</pre>
f89c2baf-b7ae-49b6-ba05-70b541f9ea66.description=The time to wait for data to be retrieved, in milliseconds. A timeout after which the connection should be terminated or 0 for no timeout.
f92dfa96-55ea-4127-bbe0-86c0cb9d3976.description=The port used by the Oracle 10g database that will be monitored by CSA using SiteScope application monitoring.
f9d48e5e-7b97-4970-bdf4-9b59d425443a.description=esl user for ESL web service
f9f40f9f-30eb-4ea1-93bd-5439ff932779.description=The name of the Oracle 10g database that will be monitored by CSA using SiteScope application monitoring.
fb6226d5-5d92-48b2-a2cd-109f0ab5b6ac.description=Account for Dataprotector Server (SSH)
fd032729-8bfb-4335-b431-70d5a710e9bb.5c647b2b-1edc-4a9a-b1c8-88eda81806d2.prompt=Input command(s)\:
fd032729-8bfb-4335-b431-70d5a710e9bb.5faf6d40-2b55-485f-903d-a99aacf925ea.description=<pre>Adds a flow variable into the local context (available to itself and child flows only)\n\nInput Parameters\:\nkeyName - the name of the flow variable to use\nmyValue - the value to assign the flow variable\n\nResponses\:\nsuccess - assigned the flow variable\n\nScriptlet Example\:\n[$scriptletContext putGlobal\: $keyName, $myValue];</pre>
fd032729-8bfb-4335-b431-70d5a710e9bb.7c99e378-b0ab-4bd0-b02e-2134cc3a5dcf.description=Runs Service Center Virtual Machine Manager (SCVMM) Cmdlets using Windows PowerShell. The complete syntax and descriptions of all cmdlets that can be used with this operation can be found at http\://www.microsoft.com/download/en/details.aspx?displaylang\=en&id\=20419. The operation creates a remote powershell session to the target host, loads the "Microsoft.SystemCenter.VirtualMachineManager" snap-in and executes the given command(s). \n\nInputs\:\n    host - The hostname or ip address of the SCVMM server.\n    username - The username to use when connecting to the server.\nValue format\: username@domain or domain\\username.\n    password - The password to use when connecting to the server.\n    authType - Specifies the mechanism that is used to authenticate the user's credentials. \nValid values\: Default, Negotiate, Credssp, Kerberos. (case-insensitive)\nDefault value\: Default.\n    commands - The PowerShell cmdlets to execute. For more that one command, you should write each one on a separate row and they will be executed sequentially. \nExample\: get-vmmserver -computerName "1.2.3.4"\n                get-virtualharddisk -all\n    delimiter - The delimiter used to separate each property name from the property value in the output table. \nDefault value\: "\:".\n    colDelimiter - The delimiter used to separate columns in the output table.\nDefault value\: ','\n    rowDelimiter - The delimiter used to separate rows in the output table. \nDefault value\: newline\n    version - The SCVMM Server version.\nDefault value\: 2008 R2\n\nResults\:\n    outputString - A string representation of the results returned by the operation. Essentially any command returns a PowerShell object which has properties, as you can observe from the returnResult. OutputString result converts each object to string and merges all the values into one string. If you want outputString to contain results similar to PowerShell console you should pipe Out-String at the end of the cmdlet  (e.g. Get-VirtualHardDisk -al l Format-List Location, Directory, Name, ID, HostName | Out-String). Doing this will determine returnResult to be something like Length\:xx, because the object is now of type String and Lenth is the only property of this type. This result can be useful in other situations where the PowerShell objects override ToString() method. Therefore, the outputString obtained running PowerShell command Get-Process (without Out-String pipe), will contain the names of the processes running on server.\n    returnResult - A table containing a row for each PSObject that the cmdlets emit. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format.\n    warnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\n\nResponses\:\nsuccess \t- The cmdlets were executed successfully.\nfailure \t- The cmdlets could not be executed.\n\nNotes\:\n1. Installation of Powershell 2.0 with winrm 2.0 on your client is required. The kit can be downloaded from here\: http\://support.microsoft.com/kb/968930.\n2. Before using this operation, please make sure you have enabled PowerShell remoting, by using the Enable-PSRemoting cmdlet.\n3. Windows Remote Management service must be running.\n4. In workgroup environments, enabling classic mode authentication for network logons may be needed. This can be performed by opening the "Local Security Policy" from Control Panel and selecting "Administrative Tools". Navigate to "Local Policies" -> "Security Options", double click on "Network Access\: Sharing and Security Model for local accounts" and set it to classic.\n5. Also, please modify the WSMan trusted hosts setting, by adding the IP addresses of all remoting clients to the list of trusted hosts. This can be done using one of the following commands\:\n        5.1. Set-item wsman\:localhost\\client\\trustedhosts -value * (adds all computers as trusted hosts)\n        5.2. Set-item wsman\:localhost\\client\\trustedhosts -value Computer (only adds Computer to the trusted hosts)\n        5.3. Set-item wsman\:localhost\\client\\trustedhosts -value *.domain.com (adds all computers in the specified domain)\n        5.4. Set-item wsman\:localhost\\client\\trustedhosts -value 10.10.10.1 (adds the remote computer with the IP address 10.10.10.1 to the trusted hosts list)\n6. Please read the folder's description for information on how to enable CredSSP authentication.\n</pre>
fd032729-8bfb-4335-b431-70d5a710e9bb.description=Simplified inputs for adding disk to existing VM. It'll get the correct BUS and LUN instead of asking the user to specify.
fdcad1e3-bbf3-40db-a95b-c11cf4395dbb.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
fe4c8aa7-417e-4566-b8b4-ecbff69daf14.09f27035-a468-4a86-b759-c8f6fdbe085b.callout=We don't have more then one item
fe4c8aa7-417e-4566-b8b4-ecbff69daf14.1cb25bbd-a593-4f13-abab-bf448e2c783b.callout=Replace C with V, because of CVS System
fe4c8aa7-417e-4566-b8b4-ecbff69daf14.b3711cae-d5a1-44e2-ab0a-92f567d38ea8.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nInputs\:\nfield1 - optional input that can be used for filtering flow variables.\nfield2 - optional input that can be used for filtering flow variables.\nfield3 - optional input that can be used for filtering flow variables.\nfield4 - optional input that can be used for filtering flow variables.\n\nResponses\:\nsuccess - this operation never fails.\n</pre>
fe7f3d73-384c-498e-83e1-15e60e7c97a4.description=<pre>This subflow was created by the Web Services Wizard to invoke the efficientip_macro_get_ip_address_php operation on file\:/C\:/CSA_INSTALLATION/wsdl_eip_full.wsdl. Note that the inputs to this flow which correspond to web service inputs are optional inputs.  This is due to the fact that web services definitions usually incorrectly indicate that too many inputs are required, and mirroring those settings in the flow would force you to enter unused values when running the flow.  The xmlTemplate input on the Invoke Method 2 step of this flow contains a template of the xml message to be sent, and the fields preceded by the comment "<\!--Optional\:-->" or "<\!--zero or more repetitions-->" are those which the web service indicates are optional; all others are indicated to be required.\n\nInputs\:\nhost - The host that is running the web service\nport - The port on the host running the web service\nauth_login - The input named efficientip_macro_get_ip_address_php|input|auth_login of the complex type\: efficientip_macro_get_ip_address_php|input\nauth_password - The input named efficientip_macro_get_ip_address_php|input|auth_password of the complex type\: efficientip_macro_get_ip_address_php|input\nip_address - The input named efficientip_macro_get_ip_address_php|input|ip_address of the complex type\: efficientip_macro_get_ip_address_php|input\n\nResponses\:\nsuccess - The SOAP command was accepted by the web service\nfailure - Something went wrong while making the SOAP request\n\nExtra Results\:\ndocument - The raw XML response of the web service\ndocumentStripped - The XML response of the web service stripped of namespaces\noutput - The output given by the XPath\: /Envelope/Body/efficientip_macro_get_ip_address_phpResponse/output</pre>
fe7f3d73-384c-498e-83e1-15e60e7c97a4.f9667d78-0cba-4177-a970-095666785830.description=<pre>Invokes web service methods.  This operation should not be used directly\!  Please use the wizard to build flows that use this operation.\n\nInputs\:\nxmlTemplate - The template of the soap request to make.\ninputMap - A map used to map between template names and user-friendly names. The tamplate names are pipe-delimited xpaths of the xmltemplate location, with a numerical element for lists.\nurl - The url to post to. \nheader_SOAPAction - The SOAPAction http header field, defined by many web services for indicating the intent of the request\nwswAuthenticationType - The authentication type to use for the username and password input. http is default (Uses http authentication), other options are 'ws-security digest' and 'ws-security text' WARNING\: ws-security text transmits passwords in clear-text\nWSSecuritySignRequest - true or false, should the SOAP request be signed using WS-Security.\nWSSecurityEncryptRequest - true or false, should the entire SOAP request be signed using WS-Security\nWSSecurityTimestampRequest - true or false, should the Timestamp attribute be added to the WS-Security header\nWSSecurityKeystore - keystore to use for encrypting and signing requests.\nWSSecurityKeystoreType - The type of WSSecurityKeystore.\nWSSecurityKeystorePassword - The password for WSSecurityKeystore.\ncontentType - Value to be used in the Content-Type http header\nusername - The username to use for authenticating with the web service\npassword - The password to use for authenticating with the web service\ntrustAllRoots - Enables weak security over SSL. A SSH certificate is trusted even if no trusted CA issued it. valid options are\: true/false.\nuseCookies - Enables cookie tracking. Cookies will be stored between consecutive calls. valid options are\: true/false.\ntimeout - a timeout after which the connection should be terminated, or 0 for no timeout.\nproxy - A proxy to use when accessing the web service.\nproxyPort - A port on the proxy to connect to.\nproxyUsername - A username to use when connecting to the proxy.\nproxyPassword - A password to use when connecting to the proxy.\nkeystore - the path to the keystore to use for SSL Client Certificates when using http authentication\nkeystorePassword - the password for the keystore when using http authentication\nICONCLUDE_WSW_VERSION - This value is used internally by the operation\n\nAny additional inputs that follow these are added by the Web Service Wizard, and they are specific to the particular web service method being called.\n\nResponses\:\nsuccess - SOAP request completed successfully.\nfailure - something went wrong.\n\nReturns\:\ndocument - raw XML response\ndocumentStripped - raw XML response stripped of namespaces for ease in parsing with XML XPath operations\n\nNotes\:\nIf you add new step-level inputs with the name header_<headername>, where <headername> is the name of an html header, then that html header will be set to the given value in the HTTP request.\n\n</pre>
